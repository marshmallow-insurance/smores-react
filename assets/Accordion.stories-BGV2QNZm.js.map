{"version":3,"file":"Accordion.stories-BGV2QNZm.js","sources":["../../src/Accordion/Accordion.tsx","../../src/Accordion/storybook/Accordion.stories.tsx"],"sourcesContent":["import React, { FC, ReactNode, useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { theme } from '../theme'\nimport { MarginProps } from '../utils/space'\n\nexport type AccordionProps = {\n  title: string\n  subTitle?: string\n  filledBackground?: boolean\n  borderTop?: boolean\n  borderColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  fullBorder?: boolean\n  backgroundColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  onToggle?: (isOpen: boolean) => void\n  children: ReactNode\n  defaultIsOpen?: boolean\n} & MarginProps\n\nexport const Accordion: FC<AccordionProps> = ({\n  title,\n  children,\n  onToggle,\n  filledBackground,\n  defaultIsOpen = false,\n  borderTop = false,\n  borderColor = 'oatmeal',\n  backgroundColor = 'custard',\n  subTitle,\n  fullBorder = false,\n  ...marginProps\n}) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const px = fullBorder ? '16px' : '0'\n\n  const handleToggle = () => {\n    const nextOpenState = !isOpen\n    onToggle?.(nextOpenState)\n    setIsOpen(nextOpenState)\n  }\n\n  return (\n    <Wrapper\n      $borderTop={borderTop}\n      $fullBorder={fullBorder}\n      $filledBackground={filledBackground}\n      $borderColor={borderColor}\n      $backgroundColor={backgroundColor}\n      {...marginProps}\n    >\n      <TopContainer\n        flex\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        onClick={handleToggle}\n        py=\"16px\"\n        pr=\"16px\"\n        pl={px}\n      >\n        <TitleContainer>\n          <Text tag=\"h2\" typo=\"headline-regular\" color=\"liquorice\">\n            {title}\n          </Text>\n          {subTitle && (\n            <Text tag=\"label\" color=\"liquorice\" typo=\"label\" mt={{ custom: 4 }}>\n              {subTitle}\n            </Text>\n          )}\n        </TitleContainer>\n\n        <CaretIcon\n          render=\"caret\"\n          size={24}\n          color=\"marzipan\"\n          $isOpen={isOpen}\n          $borderTop={borderTop}\n        />\n      </TopContainer>\n      {isOpen && (\n        <Box pt=\"12px\" pb=\"16px\" px={px}>\n          {children}\n        </Box>\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)<\n  TransientProps<\n    Pick<\n      AccordionProps,\n      | 'borderTop'\n      | 'fullBorder'\n      | 'filledBackground'\n      | 'borderColor'\n      | 'backgroundColor'\n    >\n  >\n>(\n  ({\n    $borderTop,\n    $fullBorder,\n    $filledBackground,\n    $borderColor = 'oatmeal',\n    $backgroundColor = 'custard',\n  }) => css`\n    border-bottom: 1px solid ${theme.colors[$borderColor]};\n    ${$borderTop && `border-top: 1px solid ${theme.colors[$borderColor]};`}\n\n    ${$fullBorder &&\n    css`\n      border: 1px solid ${theme.colors[$borderColor]};\n      border-radius: 16px;\n    `}\n\n    ${$filledBackground &&\n    css`\n      background-color: ${theme.colors[$backgroundColor]};\n    `}\n  `,\n)\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst TopContainer = styled(Box)`\n  cursor: pointer;\n`\n\nconst CaretIcon = styled(Icon)<\n  TransientProps<Pick<AccordionProps, 'borderTop'>> & { $isOpen: boolean }\n>(\n  ({ $isOpen }) => css`\n    transform: ${$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n    transition: transform 0.6s ease;\n  `,\n)\n","import { Meta, StoryObj } from '@storybook/react'\nimport React from 'react'\nimport { Box } from '../../Box'\nimport { Accordion } from '../Accordion'\n\nconst meta: Meta<typeof Accordion> = {\n  title: 'Accordion',\n  component: Accordion,\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n  },\n}\n\nexport default meta\ntype Story = StoryObj<typeof Accordion>\n\nexport const Default: Story = {\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n  },\n}\n\nexport const FilledBackground: Story = {\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n    filledBackground: true,\n  },\n}\n\nexport const FullBorder: Story = {\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n    fullBorder: true,\n  },\n}\n\nexport const BorderTop: Story = {\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n    borderTop: true,\n  },\n}\n\nexport const Stacked: Story = {\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '64px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n  render: (args) => (\n    <Box flex direction=\"column\">\n      <Accordion {...args} {...Default.args} />\n      <Accordion {...args} {...Default.args} />\n      <Accordion {...args} {...Default.args} />\n    </Box>\n  ),\n}\n"],"names":["cov_9t57suemo","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","Accordion","title","children","onToggle","filledBackground","defaultIsOpen","b","borderTop","borderColor","backgroundColor","subTitle","fullBorder","marginProps","f","isOpen","setIsOpen","useState","px","handleToggle","nextOpenState","React","createElement","Wrapper","$borderTop","$fullBorder","$filledBackground","$borderColor","$backgroundColor","TopContainer","flex","alignItems","justifyContent","onClick","py","pr","pl","TitleContainer","Text","tag","typo","color","mt","custom","CaretIcon","render","size","$isOpen","pb","styled","Box","meta","component","args","Default","FilledBackground","FullBorder","BorderTop","Stacked","decorators","Story","margin","parameters","docs","source","originalSource"],"mappings":"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,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAA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"}