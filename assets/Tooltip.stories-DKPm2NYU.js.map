{"version":3,"file":"Tooltip.stories-DKPm2NYU.js","sources":["../../src/Modal/index.ts","../../src/Tooltip/storybook/Tooltip.stories.tsx"],"sourcesContent":["export { Modal } from './Modal'\n","import type { Meta, StoryObj } from '@storybook/react'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Box } from '../../Box'\nimport { Button } from '../../Button'\nimport { Modal } from '../../Modal'\nimport { Text } from '../../Text'\nimport { theme } from '../../theme'\nimport { Tooltip, TooltipProps, type TooltipVariant } from '../Tooltip'\n\nconst meta: Meta<typeof Tooltip> = {\n  title: 'Tooltip',\n  component: Tooltip,\n  args: {\n    title: 'Harry Hill',\n    content:\n      'Tooltip content, this is some text, maybe even more text if you feel like it.',\n    underline: true,\n  },\n  argTypes: {\n    variant: {\n      options: ['primary', 'fallback', 'bubblegum'] satisfies TooltipVariant[],\n      control: {\n        type: 'select',\n        options: [\n          'primary',\n          'fallback',\n          'bubblegum',\n        ] satisfies TooltipVariant[],\n      },\n    },\n  },\n  render: (props: TooltipProps) => (\n    <Box px={{ custom: 250 }} py={{ custom: 150 }} flex>\n      <Tooltip {...props}>\n        <Box>Harry Hill</Box>\n      </Tooltip>\n    </Box>\n  ),\n}\n\nexport default meta\ntype Story = StoryObj<typeof Tooltip>\n\nconst tooltipContent = (\n  <Box>\n    <Text typo=\"body-regular\" color=\"liquorice\">\n      20 Cherry Blossom Lane,\n    </Text>\n    <Text typo=\"body-regular\" color=\"liquorice\">\n      Aintree,\n    </Text>\n    <Text typo=\"body-regular\" color=\"liquorice\">\n      Manchester,\n    </Text>\n    <Text typo=\"body-regular\" color=\"liquorice\">\n      T: 07123456789\n    </Text>\n  </Box>\n)\n\nexport const LongTextExample: Story = {\n  args: {\n    title: 'Long text example',\n    children: (\n      <Text typo=\"body-regular\" color=\"liquorice\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua.\n      </Text>\n    ),\n    underline: true,\n  },\n}\n\nexport const ReactNodeExample: Story = {\n  args: {\n    children: (\n      <Box>\n        <Text typo=\"body-regular\" color=\"liquorice\">\n          20 Cherry Blossom Lane,\n        </Text>\n        <Text typo=\"body-regular\" color=\"liquorice\">\n          Aintree,\n        </Text>\n        <Text typo=\"body-regular\" color=\"liquorice\">\n          Manchester,\n        </Text>\n        <Text typo=\"body-regular\" color=\"liquorice\">\n          T: 07123456789\n        </Text>\n      </Box>\n    ),\n    underline: true,\n  },\n}\n\nexport const OverflowExample: Story = {\n  render: (props: TooltipProps) => (\n    <OverflowHiddenBox tabIndex={0}>\n      <Box\n        flex\n        direction=\"column\"\n        gap=\"32px\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n      >\n        <Tooltip {...props} position=\"left\">\n          <Text>Harry Hill (left)</Text>\n        </Tooltip>\n\n        <Tooltip {...props} position=\"right\">\n          <Text>Harry Hill (right)</Text>\n        </Tooltip>\n\n        <Tooltip {...props} position=\"bottom\">\n          <Text>Harry Hill (bottom)</Text>\n        </Tooltip>\n\n        <Tooltip {...props} position=\"top\">\n          <Text>Harry Hill (top)</Text>\n        </Tooltip>\n      </Box>\n    </OverflowHiddenBox>\n  ),\n  args: {\n    children: tooltipContent,\n    underline: true,\n  },\n  parameters: {\n    backgrounds: {\n      values: [{ name: 'Coconut', value: theme.colors.coconut }],\n      default: 'Coconut',\n    },\n    layout: 'fullscreen',\n  },\n}\n\nconst OverflowHiddenBox = styled(Box)`\n  padding: 200px 0;\n  height: 150vh;\n  width: 200%;\n  overflow: scroll;\n  background: ${theme.colors.coconut};\n`\n\nexport const ModalExample: Story = {\n  args: {\n    children: tooltipContent,\n    underline: true,\n  },\n  render: (props: TooltipProps) => <ModalExampleWrapper {...props} />,\n}\n\nconst ModalExampleWrapper = (props: TooltipProps) => {\n  const [showModal, setShowModal] = useState(false)\n\n  const handleClick = () => {\n    setShowModal(!showModal)\n  }\n\n  return (\n    <Box height=\"900px\">\n      <Modal handleClick={handleClick} showModal={showModal}>\n        <Tooltip {...props}>\n          <Box>Harry Hill</Box>\n        </Tooltip>\n      </Modal>\n      <Button primary handleClick={handleClick}>\n        Show Modal with Mobile Drawer\n      </Button>\n    </Box>\n  )\n}\n\nexport const InlineText: Story = {\n  render: (props) => (\n    <Box width=\"200px\">\n      <Text>\n        Marshmallow car insurance, the best insurance in town.{' '}\n        <Tooltip {...props}>Hover here</Tooltip> to learn more as the Policy\n        Holder.\n      </Text>\n      <Text my=\"12px\">\n        Nunc cursus fermentum libero vel iaculis. Praesent vel dignissim purus,\n        a iaculis mauris.{' '}\n        <Tooltip {...props} position=\"right\">\n          In tempor nibh ut elit sollicitudin, vel ultricies elit volutpat.\n          Etiam accumsan tristique ante, at mollis neque laoreet eget.\n        </Tooltip>{' '}\n        Duis rhoncus molestie felis a cursus.\n      </Text>\n    </Box>\n  ),\n  args: {\n    inline: true,\n  },\n}\n\nexport const MTAExample: Story = {\n  render: () => (\n    <InnerSection>\n      <Box>\n        <Row>\n          <Tooltip\n            variant=\"fallback\"\n            underline\n            content={\n              <TooltipText typo=\"caption\" color=\"cream\">\n                An adjustment changes the <b>cost</b> of the policy. This field\n                should <b>not</b> be used to adjust for invoices created after a\n                failed up front payment.\n                <br />\n                <br />\n                For annual and Premfina policies, use the `MTA only` transaction\n                option when issuing an invoice.\n                <br />\n                <br />\n                For instalment policies, use `spread entire amount` transaction\n                option when issuing an invoice.\n              </TooltipText>\n            }\n            position=\"top\"\n          >\n            <Text typo=\"body-regular\">Adjustment amount</Text>\n            <Text typo=\"caption\">(Adjusts the policy cost)</Text>\n          </Tooltip>\n        </Row>\n      </Box>\n      <Row>\n        <Text typo=\"body-regular\">MTA admin fee</Text>\n      </Row>\n      <Row>\n        <Tooltip\n          underline\n          variant=\"fallback\"\n          content={\n            <TooltipText typo=\"caption\" color=\"cream\">\n              This is the policies total new retained refund after this MTA is\n              complete.\n            </TooltipText>\n          }\n          position=\"top\"\n        >\n          <Text>Predicted retained refund</Text>\n        </Tooltip>\n        <Text>Â£1,345</Text>\n      </Row>\n    </InnerSection>\n  ),\n}\n\nconst InnerSection = styled(Box)`\n  flex-direction: column;\n  gap: 16px;\n  position: relative;\n  width: 100%;\n  padding: 24px;\n  border-radius: 16px;\n  background: ${theme.colors.custard};\n  display: flex;\n\n  @media (max-width: 1000px) {\n    width: 100%;\n    flex-direction: column;\n  }\n`\n\nconst TooltipText = styled(Text)`\n  white-space: normal;\n  width: 200px;\n`\n\nconst Row = styled(Box)`\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin: 8px 0px;\n`\n"],"names":["cov_2ma6iuz8li","actualCoverage","meta","title","component","Tooltip","args","content","underline","argTypes","variant","options","control","type","render","props","React","Box","custom","tooltipContent","Text","LongTextExample","children","ReactNodeExample","OverflowExample","OverflowHiddenBox","parameters","backgrounds","values","name","value","theme","colors","coconut","default","layout","styled","ModalExample","ModalExampleWrapper","showModal","setShowModal","useState","handleClick","Modal","Button","InlineText","inline","MTAExample","InnerSection","Row","TooltipText","custard","docs","source","originalSource"],"mappings":"w0CAAA,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAA,CAAAD,EAAA,ECUA,MAAME,GAA6B,CACjCC,MAAO,UACPC,UAAWC,EACXC,KAAM,CACJH,MAAO,aACPI,QACE,gFACFC,UAAW,EACb,EACAC,SAAU,CACRC,QAAS,CACPC,QAAS,CAAC,UAAW,WAAY,WAAW,EAC5CC,QAAS,CACPC,KAAM,SACNF,QAAS,CACP,UACA,WACA,WAAW,CAAA,CAEf,CAEJ,EACAG,OAASC,GACPC,EAAA,cAACC,GAAI,GAAI,CAAEC,OAAQ,KAAO,GAAI,CAAEA,OAAQ,GAAI,EAAG,KAAI,EAAA,EAChDF,EAAA,cAAAX,EAAA,CAAQ,GAAIU,CAAAA,EACVC,EAAA,cAAAC,EAAA,KAAI,YAAU,CACjB,CACF,CAEJ,EAKME,EACJH,EAAA,cAACC,EACC,KAAAD,EAAA,cAACI,GAAK,KAAK,eAAe,MAAM,WAAA,EAAW,yBAE3C,EACAJ,EAAA,cAACI,EAAK,CAAA,KAAK,eAAe,MAAM,WAAA,EAAW,UAE3C,EACCJ,EAAA,cAAAI,EAAA,CAAK,KAAK,eAAe,MAAM,WAAW,EAAA,aAE3C,EACAJ,EAAA,cAACI,GAAK,KAAK,eAAe,MAAM,aAAW,gBAE3C,CACF,EAGWC,EAAyB,CACpCf,KAAM,CACJH,MAAO,oBACPmB,SACGN,EAAA,cAAAI,EAAA,CAAK,KAAK,eAAe,MAAM,aAAW,6HAG3C,EAEFZ,UAAW,EAAA,CAEf,EAEae,EAA0B,CACrCjB,KAAM,CACJgB,SACEN,EAAA,cAACC,EACC,KAAAD,EAAA,cAACI,GAAK,KAAK,eAAe,MAAM,WAAA,EAAW,yBAE3C,EACAJ,EAAA,cAACI,EAAK,CAAA,KAAK,eAAe,MAAM,WAAA,EAAW,UAE3C,EACCJ,EAAA,cAAAI,EAAA,CAAK,KAAK,eAAe,MAAM,WAAW,EAAA,aAE3C,EACAJ,EAAA,cAACI,GAAK,KAAK,eAAe,MAAM,aAAW,gBAE3C,CACF,EAEFZ,UAAW,EAAA,CAEf,EAEagB,EAAyB,CACpCV,OAASC,GACPC,EAAA,cAACS,EAAkB,CAAA,SAAU,CAC3B,EAAAT,EAAA,cAACC,EACC,CAAA,KAAG,GACH,UAAU,SACV,IAAI,OACJ,eAAe,SACf,WAAW,UAEXD,EAAA,cAACX,EAAQ,CAAA,GAAIU,EAAO,SAAS,QAC3BC,EAAA,cAACI,EAAK,KAAA,mBAAiB,CACzB,EAEAJ,EAAA,cAACX,EAAQ,CAAA,GAAIU,EAAO,SAAS,OAC3B,EAAAC,EAAA,cAACI,EAAK,KAAA,oBAAkB,CAC1B,EAECJ,EAAA,cAAAX,EAAA,CAAQ,GAAIU,EAAO,SAAS,UAC3BC,EAAA,cAACI,EAAK,KAAA,qBAAmB,CAC3B,EAECJ,EAAA,cAAAX,EAAA,CAAQ,GAAIU,EAAO,SAAS,KAAA,EAC1BC,EAAA,cAAAI,EAAA,KAAK,kBAAgB,CACxB,CACF,CACF,EAEFd,KAAM,CACJgB,SAAUH,EACVX,UAAW,EACb,EACAkB,WAAY,CACVC,YAAa,CACXC,OAAQ,CAAC,CAAEC,KAAM,UAAWC,MAAOC,EAAMC,OAAOC,OAAAA,CAAS,EACzDC,QAAS,SACX,EACAC,OAAQ,YAAA,CAEZ,EAEMV,EAAoBW,EAAOnB,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAKpBc,EAAMC,OAAOC,OAAO;AAAA,EAGvBI,EAAsB,CACjC/B,KAAM,CACJgB,SAAUH,EACVX,UAAW,EACb,EACAM,OAASC,GAAyBC,EAAA,cAAAsB,EAAA,CAAwBvB,GAAAA,CAAM,CAAA,CAClE,EAEMuB,EAAuBvB,GAAwB,CACnD,KAAM,CAACwB,EAAWC,CAAY,EAAIC,EAAAA,SAAS,EAAK,EAE1CC,EAAcA,IAAM,CACxBF,EAAa,CAACD,CAAS,CACzB,EAGE,OAAAvB,EAAA,cAACC,EAAI,CAAA,OAAO,OACV,EAAAD,EAAA,cAAC2B,GAAM,YAAAD,EAA0B,UAAAH,CAAA,EAC9BvB,EAAA,cAAAX,EAAA,CAAQ,GAAIU,CAAAA,kBACVE,EAAI,KAAA,YAAU,CACjB,CACF,EACAD,EAAA,cAAC4B,GAAO,QAAO,GAAC,YAAAF,CAAyB,EAAA,+BAEzC,CACF,CAEJ,EAEaG,EAAoB,CAC/B/B,OAASC,GACNC,EAAA,cAAAC,EAAA,CAAI,MAAM,OACT,EAAAD,EAAA,cAACI,EAAI,KAAA,yDACoD,IACtDJ,EAAA,cAAAX,EAAA,CAAYU,GAAAA,CAAAA,EAAO,YAAU,EAAU,sCAE1C,EACAC,EAAA,cAACI,EAAK,CAAA,GAAG,MAAM,EAAA,4FAEK,IACjBJ,EAAA,cAAAX,EAAA,CAAQ,GAAIU,EAAO,SAAS,OAAO,EAAA,gIAGpC,EAAW,IAAG,uCAEhB,CACF,EAEFT,KAAM,CACJwC,OAAQ,EAAA,CAEZ,EAEaC,EAAoB,CAC/BjC,OAAQA,IACLE,EAAA,cAAAgC,EAAA,qBACE/B,EACC,KAAAD,EAAA,cAACiC,EACC,KAAAjC,EAAA,cAACX,EACC,CAAA,QAAQ,WACR,UAAQ,GACR,QACGW,EAAA,cAAAkC,EAAA,CAAY,KAAK,UAAU,MAAM,OAAO,EAAA,6BACZlC,EAAA,cAAA,IAAA,KAAE,MAAI,EAAI,qDAC7B,IAAE,KAAA,KAAG,EAAI,2EAEjBA,EAAA,cAAC,KAAE,IAAA,EACFA,EAAA,cAAA,KAAA,IAAE,EAAA,mGAGHA,EAAA,cAAC,SAAE,EACHA,EAAA,cAAC,SAAE,EAAA,iGAGL,EAEF,SAAS,KAET,EAAAA,EAAA,cAACI,GAAK,KAAK,cAAA,EAAe,mBAAiB,EAC3CJ,EAAA,cAACI,GAAK,KAAK,SAAA,EAAU,2BAAyB,CAChD,CACF,CACF,EACCJ,EAAA,cAAAiC,EAAA,qBACE7B,EAAK,CAAA,KAAK,gBAAe,eAAa,CACzC,EACAJ,EAAA,cAACiC,EACC,KAAAjC,EAAA,cAACX,GACC,UAAQ,GACR,QAAQ,WACR,wBACG6C,EAAY,CAAA,KAAK,UAAU,MAAM,OAAO,EAAA,4EAGzC,EAEF,SAAS,KAAA,EAERlC,EAAA,cAAAI,EAAA,KAAK,2BAAyB,CACjC,EACCJ,EAAA,cAAAI,EAAA,KAAK,QAAM,CACd,CACF,CAEJ,EAEM4B,EAAeZ,EAAOnB,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAOfc,EAAMC,OAAOmB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAS9BD,EAAcd,EAAOhB,CAAI;AAAA;AAAA;AAAA,EAKzB6B,EAAMb,EAAOnB,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAMtBI,EAAAK,WAAA,CAAA,GAAAL,EAAAK,WAAA0B,KAAA,CAAA,IAAA/B,EAAAA,EAAAK,aAAAL,YAAAA,EAAA+B,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAjC,GAAAA,EAAAA,EAAAK,aAAAL,YAAAA,EAAA+B,OAAA/B,YAAAA,EAAAgC,MAAAA,CAAA,CAAA,YAAA9B,EAAAG,WAAA,CAAA,GAAAH,EAAAG,WAAA0B,KAAA,CAAA,IAAA7B,EAAAA,EAAAG,aAAAH,YAAAA,EAAA6B,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAA/B,GAAAA,EAAAA,EAAAG,aAAAH,YAAAA,EAAA6B,OAAA7B,YAAAA,EAAA8B,MAAAA,CAAA,CAAA,YAAA7B,EAAAE,WAAA,CAAA,GAAAF,EAAAE,WAAA0B,KAAA,CAAA,IAAA5B,EAAAA,EAAAE,aAAAF,YAAAA,EAAA4B,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAA9B,GAAAA,EAAAA,EAAAE,aAAAF,YAAAA,EAAA4B,OAAA5B,YAAAA,EAAA6B,MAAAA,CAAA,CAAA,YAAAhB,EAAAX,WAAA,CAAA,GAAAW,EAAAX,WAAA0B,KAAA,CAAA,IAAAf,EAAAA,EAAAX,aAAAW,YAAAA,EAAAe,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAjB,GAAAA,EAAAA,EAAAX,aAAAW,YAAAA,EAAAe,OAAAf,YAAAA,EAAAgB,MAAAA,CAAA,CAAA,YAAAR,EAAAnB,WAAA,CAAA,GAAAmB,EAAAnB,WAAA0B,KAAA,CAAA,IAAAP,EAAAA,EAAAnB,aAAAmB,YAAAA,EAAAO,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAT,GAAAA,EAAAA,EAAAnB,aAAAmB,YAAAA,EAAAO,OAAAP,YAAAA,EAAAQ,MAAAA,CAAA,CAAA,YAAAN,EAAArB,WAAA,CAAA,GAAAqB,EAAArB,WAAA0B,KAAA,CAAA,IAAAL,EAAAA,EAAArB,aAAAqB,YAAAA,EAAAK,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAP,GAAAA,EAAAA,EAAArB,aAAAqB,YAAAA,EAAAK,OAAAL,YAAAA,EAAAM,MAAAA,CAAA,CAAA"}