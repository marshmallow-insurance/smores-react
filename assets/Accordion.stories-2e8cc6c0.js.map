{"version":3,"file":"Accordion.stories-2e8cc6c0.js","sources":["../../src/Accordion/Accordion.tsx","../../src/Accordion/Collection.tsx"],"sourcesContent":["import React, { FC, ReactNode, useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { theme } from '../theme'\nimport { Text } from '../Text'\nimport { MarginProps } from '../utils/space'\n\nexport type AccordionProps = {\n  title: string\n  subTitle?: string\n  filledBackground?: boolean\n  borderTop?: boolean\n  borderColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  fullBorder?: boolean\n  backgroundColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  onToggle?: (isOpen: boolean) => void\n  children: ReactNode\n  defaultIsOpen?: boolean\n} & MarginProps\n\nexport const Accordion: FC<AccordionProps> = ({\n  title,\n  children,\n  onToggle,\n  filledBackground,\n  defaultIsOpen = false,\n  borderTop = false,\n  borderColor = 'oatmeal',\n  backgroundColor = 'custard',\n  subTitle,\n  fullBorder = false,\n  ...marginProps\n}) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const px = fullBorder ? '16px' : '0'\n\n  const handleToggle = () => {\n    const nextOpenState = !isOpen\n    onToggle?.(nextOpenState)\n    setIsOpen(nextOpenState)\n  }\n\n  return (\n    <Wrapper\n      borderTop={borderTop}\n      fullBorder={fullBorder}\n      filledBackground={filledBackground}\n      borderColor={borderColor}\n      backgroundColor={backgroundColor}\n      {...marginProps}\n    >\n      <TopContainer\n        flex\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        onClick={handleToggle}\n        py=\"16px\"\n        pr=\"16px\"\n        pl={px}\n      >\n        <TitleContainer>\n          <Text tag=\"h2\" typo=\"headline-regular\" color=\"liquorice\">\n            {title}\n          </Text>\n          {subTitle && (\n            <Text tag=\"label\" color=\"liquorice\" typo=\"label\" mt={{ custom: 4 }}>\n              {subTitle}\n            </Text>\n          )}\n        </TitleContainer>\n\n        <CaretIcon\n          render=\"caret\"\n          size={24}\n          color=\"marzipan\"\n          isOpen={isOpen}\n          borderTop={borderTop}\n        />\n      </TopContainer>\n      {isOpen && (\n        <Box pt=\"12px\" pb=\"16px\" px={px}>\n          {children}\n        </Box>\n      )}\n    </Wrapper>\n  )\n}\n\ninterface IAccordion {\n  isOpen: boolean\n  borderTop?: boolean\n  fullBorder?: boolean\n  filledBackground?: boolean\n  borderColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  backgroundColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n}\n\nconst Wrapper = styled(Box)<Omit<IAccordion, 'isOpen'>>(\n  ({\n    borderTop,\n    fullBorder,\n    filledBackground,\n    borderColor = 'oatmeal',\n    backgroundColor = 'custard',\n  }) => css`\n    border-bottom: 1px solid ${theme.colors[borderColor]};\n    ${borderTop && `border-top: 1px solid ${theme.colors[borderColor]};`}\n\n    ${fullBorder &&\n    css`\n      border: 1px solid ${theme.colors[borderColor]};\n      border-radius: 16px;\n    `}\n\n    ${filledBackground &&\n    css`\n      background-color: ${theme.colors[backgroundColor]};\n    `}\n  `,\n)\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst TopContainer = styled(Box)`\n  cursor: pointer;\n`\n\nconst CaretIcon = styled(Icon)<IAccordion>(\n  ({ isOpen }) => css`\n    transform: ${isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n    transition: transform 0.6s ease;\n  `,\n)\n","import React, { FC, ReactNode } from 'react'\nimport styled from 'styled-components'\n\nimport { Text } from '../Text'\nimport { Box } from '../Box'\nimport { Accordion, AccordionProps } from './Accordion'\n\nconst accordionList: Array<AccordionProps> = [\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    subTitle: 'subtitle',\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    filledBackground: true,\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    subTitle: 'subtitle',\n    filledBackground: true,\n  },\n]\n\nexport const CollectionPage: FC = () => {\n  return (\n    <Wrapper>\n      <Section label=\"Default\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} />\n        ))}\n      </Section>\n      <Section label=\"Border Top\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} borderTop={true} />\n        ))}\n      </Section>\n      <Section label=\"Full Border\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} fullBorder={true} />\n        ))}\n      </Section>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 40px;\n  width: 100%;\n`\n\nconst Section: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <Box width=\"100%\" mb=\"16px\">\n      <Box mb=\"16px\">\n        <Text tag=\"span\" typo=\"header-small\">\n          {label}\n        </Text>\n      </Box>\n      <Column>{children}</Column>\n    </Box>\n  )\n}\n\nconst Column = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`\n"],"names":["Accordion","title","children","onToggle","filledBackground","defaultIsOpen","borderTop","borderColor","backgroundColor","subTitle","fullBorder","marginProps","isOpen","setIsOpen","useState","px","jsxs","Wrapper","TopContainer","nextOpenState","TitleContainer","jsx","Text","CaretIcon","Box","styled","css","theme","Icon","accordionList","CollectionPage","Section","props","index","label","Column"],"mappings":"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"}