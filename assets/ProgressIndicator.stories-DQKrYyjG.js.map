{"version":3,"file":"ProgressIndicator.stories-DQKrYyjG.js","sources":["../../src/ProgressIndicator/helpers.ts","../../src/ProgressIndicator/components/StepItem.tsx","../../src/ProgressIndicator/ProgressIndicator.tsx","../../src/ProgressIndicator/storybook/ProgressIndicator.stories.tsx"],"sourcesContent":["import { StepState } from './types'\n\nconst TOTAL_WIDTH = 320\n\ninterface ReturnValue {\n  totalWidth: number\n  stepWidth: number\n}\n\nexport const calculateProgressWidths = (\n  stepCount: number,\n  isSimpleSteps?: boolean,\n): ReturnValue => {\n  // if not simple steps, we need to subtract 1 from the step count as the last item doesn't have a line\n  const stepsToUse = isSimpleSteps ? stepCount : stepCount - 1\n  return {\n    totalWidth: TOTAL_WIDTH,\n    stepWidth: TOTAL_WIDTH / stepsToUse,\n  }\n}\n\nexport const calculateStepState = (\n  index: number,\n  currentStepIndex: number,\n): StepState => {\n  if (index === currentStepIndex) {\n    return 'current'\n  } else if (index < currentStepIndex || currentStepIndex === -1) {\n    return 'completed'\n  }\n\n  return 'disabled'\n}\n","import { Box } from '../../Box'\nimport { StepData } from 'ProgressIndicator/types'\nimport React from 'react'\nimport styled, { css } from 'styled-components'\nimport { theme } from '../../theme'\nimport { Text } from '../../Text'\nimport { Icon } from '../../Icon'\n\nexport interface StepItemProps extends Pick<StepData, 'label'> {\n  isCompleted?: boolean\n  isLastCompleted?: boolean\n  isCurrentStep: boolean\n  isSimple?: boolean\n  onClick: () => void\n  stepWidth: string\n  isLastItem: boolean\n}\n\nexport const StepItem = ({\n  label,\n  isSimple = false,\n  isCurrentStep,\n  stepWidth,\n  onClick,\n  isCompleted = false,\n  isLastCompleted = false,\n  isLastItem = false,\n}: StepItemProps) => {\n  if (isSimple) {\n    return (\n      <SimpleItem\n        $completed={isCompleted}\n        $lastCompleted={isLastCompleted}\n        width={stepWidth}\n        height=\"12px\"\n      />\n    )\n  }\n\n  return (\n    <ProgressItem\n      flex\n      $completed={isCompleted}\n      $lastCompleted={isLastCompleted}\n      width={stepWidth}\n      onClick={onClick}\n    >\n      <ProgressIndicator\n        $completed={isCompleted}\n        $currentStep={isCurrentStep}\n        flex\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        {isCompleted && <Icon render=\"tick\" size={16} color=\"cream\" />}\n      </ProgressIndicator>\n      {isCompleted && !isLastItem && <CompletedBar />}\n      <FloatingText typo=\"caption\">{label}</FloatingText>\n    </ProgressItem>\n  )\n}\n\ninterface StyledComponentProps {\n  $completed?: boolean\n  $lastCompleted?: boolean\n  $currentStep?: boolean\n  $completedStep?: boolean\n}\n\nconst lastCompleted = css`\n  border-radius: 0 100px 100px 0;\n\n  &:first-child {\n    border-radius: 100px;\n  }\n`\n\nconst borderRadiusCss = css<StyledComponentProps>`\n  &:first-child {\n    border-radius: 100px 0 0 100px;\n  }\n\n  ${({ $lastCompleted }) => $lastCompleted && lastCompleted}\n`\n\nconst SimpleItem = styled(Box)<StyledComponentProps>`\n  position: relative;\n  z-index: 1;\n  ${borderRadiusCss}\n\n  background: ${({ $completed }) =>\n    $completed ? theme.colors.pistachio : 'none'};\n`\n\nconst ProgressItem = styled(Box)<StyledComponentProps>`\n  position: relative;\n  z-index: 1;\n`\n\nconst ProgressIndicator = styled(Box)<StyledComponentProps>`\n  border-radius: 50%;\n  height: 24px;\n  width: 24px;\n  position: relative;\n  left: -2px;\n  z-index: 1;\n  background: ${({ $completed, $currentStep }) =>\n    $completed || $currentStep ? theme.colors.pistachio : theme.colors.matcha};\n`\n\nconst FloatingText = styled(Text)`\n  position: absolute;\n  top: 0;\n  transform: translateY(calc(-50% + 34px));\n  left: -6px;\n  font-weight: ${theme.font.weight.medium};\n`\n\nconst CompletedBar = styled(Box)`\n  position: absolute;\n  height: 12px;\n  width: 100%;\n  top: 0;\n  left: 0;\n  transform: translateY(calc(-50% + 12px));\n  background: ${theme.colors.pistachio};\n  z-index: 0;\n`\n","import React from 'react'\nimport { StepData, StepState } from './types'\nimport { calculateStepState, calculateProgressWidths } from './helpers'\nimport styled from 'styled-components'\nimport { theme } from '../theme'\nimport { Box } from '../Box'\nimport { StepItem } from './components/StepItem'\n\ninterface Props {\n  steps: ReadonlyArray<StepData>\n  handleStepChange: (step: StepData) => void\n  simpleStep?: boolean\n  onStepClick?: (data: {\n    currentStepIndex: number\n    currentStepState: StepState\n  }) => void\n  currentStep: string\n}\n\nexport const ProgressIndicator = ({\n  handleStepChange,\n  onStepClick,\n  simpleStep = false,\n  steps,\n  currentStep,\n}: Props) => {\n  const { totalWidth, stepWidth } = calculateProgressWidths(\n    steps.length,\n    simpleStep,\n  )\n\n  const visibleSteps = steps.filter((step) => !step.isHidden)\n  const currentStepIndex = visibleSteps.findIndex(\n    (step) => step.id === currentStep,\n  )\n  const lastCompletedStepIndex = visibleSteps.findLastIndex(\n    (step) =>\n      calculateStepState(visibleSteps.indexOf(step), currentStepIndex) ===\n      'completed',\n  )\n\n  const handleStepClick = (\n    currentStepIndex: number,\n    currentStepState: StepState,\n    stepData: StepData,\n  ) => {\n    if (onStepClick) {\n      onStepClick({ currentStepIndex, currentStepState })\n    }\n\n    if (currentStepState !== 'disabled') {\n      handleStepChange(stepData)\n    }\n  }\n\n  return (\n    <Wrapper width={`${totalWidth}px`} flex alignItems=\"center\">\n      <DefaultProgress $simpleStep={simpleStep} />\n      <Box flex>\n        {visibleSteps.map((step, index) => {\n          const stepState = calculateStepState(index, currentStepIndex)\n          return (\n            <StepItem\n              key={step.id}\n              isCompleted={stepState === 'completed'}\n              isCurrentStep={stepState === 'current'}\n              isLastCompleted={lastCompletedStepIndex === index}\n              onClick={() => handleStepClick(index, stepState, step)}\n              stepWidth={`${stepWidth}px`}\n              label={step.label}\n              isSimple={simpleStep}\n              isLastItem={index === visibleSteps.length - 1}\n            />\n          )\n        })}\n      </Box>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)`\n  position: relative;\n`\n\nconst DefaultProgress = styled(Box)<{ $simpleStep?: boolean }>`\n  z-index: 0;\n  content: '';\n  position: absolute;\n  background: ${theme.colors.matcha};\n  width: 100%;\n  height: 12px;\n\n  ${({ $simpleStep }) => $simpleStep && `border-radius:100px;`}\n`\n","import { Meta, StoryObj } from '@storybook/react'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '../../Box'\nimport { theme } from '../../theme'\nimport { ProgressIndicator } from '../ProgressIndicator'\nimport { StepData } from 'ProgressIndicator/types'\n\nconst defaultSteps: StepData[] = [\n  {\n    label: 'Step 1',\n    id: '1',\n  },\n  {\n    label: 'Step 2',\n    id: '2',\n  },\n  {\n    label: 'Step 3',\n    id: '3',\n  },\n  {\n    label: 'Step 4',\n    id: '4',\n  },\n  {\n    label: 'Step 5',\n    id: '5',\n  },\n]\n\nconst BgWrapper = styled(Box)`\n  background: ${theme.colors.coconut};\n`\n\nconst meta: Meta<typeof ProgressIndicator> = {\n  title: 'ProgressIndicator',\n  component: ProgressIndicator,\n  argTypes: {\n    handleStepChange: {\n      table: {\n        type: { detail: 'Function used to handle clicking a step' },\n      },\n    },\n    onStepClick: {\n      table: {\n        type: {\n          detail:\n            'Function used to run functions that should run on click of a step but not always as part of the handleStepChange function',\n        },\n      },\n    },\n    currentStep: {\n      table: {\n        type: {\n          detail:\n            'String used to determine the current step, this should the ID of one of the steps.',\n        },\n      },\n    },\n    simpleStep: {\n      table: {\n        type: {\n          detail:\n            'Boolean used to determine if we should render the simple step view. Note: the simple step layout has limited functionality e.g. No onClick function',\n        },\n        defaultValue: {\n          summary: 'false',\n          detail: 'defaults to false and will show the normal step layout',\n        },\n      },\n    },\n  },\n  decorators: [\n    (Story) => (\n      <BgWrapper\n        height=\"100px\"\n        flex\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Story />\n      </BgWrapper>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof ProgressIndicator>\n\nexport const Default: Story = {\n  args: {\n    steps: defaultSteps,\n    currentStep: '1',\n    onStepClick: () => console.log('step click function'),\n    handleStepChange: () => console.log('step change function'),\n  },\n}\n\nexport const simpleStepLayout: Story = {\n  args: {\n    steps: defaultSteps,\n    currentStep: '5',\n    onStepClick: () => console.log('step click function'),\n    handleStepChange: () => console.log('step change function'),\n    simpleStep: true,\n  },\n}\n"],"names":["TOTAL_WIDTH","cov_2g3dsix46m","s","calculateProgressWidths","stepCount","isSimpleSteps","f","stepsToUse","b","cov_vo1pguiz6","path","hash","global","gcv","coverageData","coverage","actualCoverage","StepItem","label","isSimple","isCurrentStep","stepWidth","onClick","isCompleted","isLastCompleted","isLastItem","React","createElement","SimpleItem","$completed","$lastCompleted","width","height","ProgressItem","flex","ProgressIndicator","$currentStep","alignItems","justifyContent","Icon","render","size","color","CompletedBar","FloatingText","typo","lastCompleted","css","borderRadiusCss","styled","theme","colors","pistachio","Box","cov_1dfl18rv7t","handleStepChange","onStepClick","simpleStep","steps","currentStep","totalWidth","length","visibleSteps","filter","step","isHidden","currentStepIndex","findIndex","id","lastCompletedStepIndex","findLastIndex","calculateStepState","indexOf","handleStepClick","currentStepIndex2","currentStepState","stepData","Wrapper","DefaultProgress","map","index","stepState","defaultSteps","BgWrapper","coconut","meta","title","component","argTypes","table","type","detail","defaultValue","summary","decorators","Story","Default","args","console","log","simpleStepLayout","parameters","docs","source","originalSource"],"mappings":"i7FAcE,MAAMA,GAAAC,EAAA,EAAAC,EAAA,CAAA,IAAA,KAAAD,EAAA,EAAAC,eAW0BC,CACvBC,EACTC,IACS,CAAAJ,IAAAK,EAAA,CAAA,IAGF,MAAAC,GAAAN,IAAAC,EAAA,CAAA,IAAAG,GAAAJ,EAAAO,EAAAA,EAAAJ,CAAAA,EAAAA,CAAAA,IAAAA,IAAAH,EAAA,EAAAO,EAAA,CAAA,EAAA,CAAA,IAAAJ,EAAA,IAAAH,OAAAA,EAAA,EAAAC,EACT,CAAA,IAAA,6QCQI,SAAAO,GAAA,CAAA,IAAAC,EAAA,4FAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,4FAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAA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AAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,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"}