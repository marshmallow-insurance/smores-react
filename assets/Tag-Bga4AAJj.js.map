{"version":3,"file":"Tag-Bga4AAJj.js","sources":["../../src/Tag/Tag.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { MarginProps } from '../utils/space'\n\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Text } from '../Text'\nimport { Color, theme } from '../theme'\nimport { Icon } from '../Icon'\nimport { Icons } from 'Icon/iconsList'\n\nexport type TagProps = {\n  label: string\n  color: Color\n  bgColor: Color\n  borderColor?: Color\n  className?: string\n  icon?: Icons\n  iconColor?: Color\n} & MarginProps\n\nexport const Tag: FC<TagProps> = ({\n  label,\n  color,\n  borderColor,\n  bgColor,\n  className,\n  icon,\n  iconColor,\n  ...marginProps\n}) => (\n  <Wrapper\n    $bgColor={bgColor}\n    className={className}\n    $borderColor={borderColor}\n    {...marginProps}\n    alignContent=\"center\"\n    justifyContent=\"center\"\n  >\n    {icon && (\n      <TagIcon\n        render={icon}\n        color={iconColor}\n        size={16}\n        data-testid={`tag-icon-${icon}`}\n      />\n    )}\n    <TagText tag=\"span\" typo=\"label\" color={color}>\n      {label}\n    </TagText>\n  </Wrapper>\n)\n\ntype WrapperProps = TransientProps<Pick<TagProps, 'bgColor' | 'borderColor'>>\n\nconst Wrapper = styled(Box)<WrapperProps>`\n  background-color: ${({ $bgColor }) => $bgColor && theme.colors[$bgColor]};\n  border: ${({ $borderColor }) =>\n    $borderColor && `1px solid ${theme.colors[$borderColor]}`};\n\n  border-radius: 6px;\n  padding: 4px 8px;\n\n  height: 22px;\n\n  box-sizing: border-box;\n  display: inline-flex;\n`\n\nconst TagText = styled(Text)`\n  display: flex;\n  align-items: center;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 12px;\n  text-transform: uppercase;\n`\n\nconst TagIcon = styled(Icon)`\n  padding-right: 4px;\n`\n"],"names":["cov_1o0kf1lqso","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","Tag","label","color","borderColor","bgColor","className","icon","iconColor","marginProps","f","React","createElement","Wrapper","$bgColor","alignContent","justifyContent","b","TagIcon","render","size","TagText","tag","typo","styled","Box","theme","colors","$borderColor"],"mappings":"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"}