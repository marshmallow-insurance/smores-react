{"version":3,"file":"Modal-DE_3KO-G.js","sources":["../../src/Modal/Modal.tsx"],"sourcesContent":["import React, { FC, ReactNode, useRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../Box'\nimport { IconStrict } from '../IconStrict'\nimport { Text, type TextProps } from '../Text'\nimport { useBodyScrollLock } from '../hooks/useBodyScrollLock'\n\ninterface IModalContainer {\n  // drawer state\n  $drawer: boolean\n  // modal width\n  $width: string\n}\n\nexport type ModalProps = {\n  /**\n   * Title of the modal\n   * @default \"\" (empty string)\n   *\n   * @example\n   * ```tsx\n   * <Modal title=\"MultiCar Account\" />\n   * ```\n   *\n   * @example\n   * ```tsx\n   * <Modal title={{ typo: 'hero', children: 'MultiCar Account' }} />\n   * ```\n   */\n  title?: string | TitleProps\n  icon?: string\n  children?: ReactNode\n  rightPanel?: ReactNode\n  showModal?: boolean\n  handleClick: () => void\n  drawer?: boolean\n  cross?: boolean\n  width?: string\n  containerClass?: string\n  portalContainer?: Element | DocumentFragment\n  closeOnOverlayClick?: boolean\n}\n\nexport type TitleProps = TextProps\n\nconst getDefaultTitleProps = (title: string): TitleProps => ({\n  children: title,\n  tag: 'h2',\n  typo: 'heading-small',\n  align: 'left',\n})\n\nexport const Modal: FC<ModalProps> = ({\n  title = '',\n  children,\n  rightPanel,\n  showModal = false,\n  handleClick,\n  drawer = true,\n  cross = true,\n  width,\n  containerClass,\n  portalContainer = document.body,\n  closeOnOverlayClick = true,\n}) => {\n  const modalRef = useRef<HTMLDivElement>(null)\n\n  useBodyScrollLock({ node: modalRef.current, showModal })\n\n  const isTitleString = typeof title === 'string'\n  const titleProps = isTitleString ? getDefaultTitleProps(title) : title\n\n  if (!showModal) return null\n\n  return createPortal(\n    <Wrapper ref={modalRef}>\n      <Overlay\n        onClick={() => closeOnOverlayClick && handleClick()}\n        $closeOnOverlayClick={closeOnOverlayClick}\n      />\n      <Container\n        $drawer={drawer}\n        $width={width || '460px'}\n        className={containerClass}\n      >\n        <Box\n          flex\n          alignItems=\"flex-start\"\n          justifyContent=\"space-between\"\n          mb=\"8px\"\n        >\n          <TitleElements flex direction=\"column\">\n            <Text {...titleProps} />\n          </TitleElements>\n          <Box flex alignItems=\"center\" gap={'8px'}>\n            {rightPanel}\n            {cross && (\n              <IconStrict\n                render=\"cross\"\n                title=\"Close modal\"\n                backgroundColor=\"oatmeal\"\n                handleClick={handleClick}\n                size={36}\n              />\n            )}\n          </Box>\n        </Box>\n        <Box flex direction=\"column\">\n          {children}\n        </Box>\n      </Container>\n    </Wrapper>,\n    portalContainer,\n  )\n}\n\nconst Wrapper = styled(Box)`\n  display: flex;\n  position: absolute;\n  z-index: 999;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n`\n\nconst Overlay = styled.div<{ $closeOnOverlayClick: boolean }>`\n  position: fixed;\n  background: ${({ theme }) => theme.color.surface.base[900]};\n  cursor: ${(props) => (props.$closeOnOverlayClick ? 'pointer' : 'default')};\n  opacity: 0.4;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`\n\nconst Container = styled.div<IModalContainer>(\n  ({ $drawer, $width }) => css`\n    background: ${({ theme }) => theme.color.background[100]};\n    box-sizing: border-box;\n    border-radius: 16px;\n    padding: 24px;\n    width: 100%;\n    max-width: ${$width};\n    position: fixed;\n    max-height: calc(100vh - 64px);\n    overflow: auto;\n    transition: all 0.3s ease-in-out;\n\n    ${$drawer === true &&\n    css`\n      @media (max-width: 768px) {\n        max-width: none;\n        border-radius: 16px 16px 0px 0px;\n        padding: 10% 24px;\n        max-height: 90vh;\n\n        position: fixed;\n        right: 0;\n        left: 0;\n        bottom: 0;\n      }\n    `}\n  `,\n)\n\nconst TitleElements = styled(Box)`\n  align-self: center;\n`\n"],"names":["cov_1fthp5m239","actualCoverage","getDefaultTitleProps","title","s","children","tag","typo","align","Modal","rightPanel","showModal","handleClick","drawer","cross","width","containerClass","portalContainer","closeOnOverlayClick","useRef","useBodyScrollLock","current","titleProps","isTitleString","createPortal","modalRef","React","Overlay","$drawer","Container","$width","className","flex","Box","alignItems","justifyContent","mb","TitleElements","direction","gap","render","IconStrict","backgroundColor","size","theme","color","surface","props","$closeOnOverlayClick","styled","background"],"mappings":"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"}