{"version":3,"file":"Text-K9LyMIiD.js","sources":["../../src/Link/Link.tsx","../../src/Text/fontMapping.ts","../../src/ThemeProvider/utils/colourMap.ts","../../src/Text/Text.tsx"],"sourcesContent":["import { darken } from 'polished'\nimport React, { FC, MouseEventHandler, ReactNode } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Icon } from '../Icon'\nimport { Icons } from '../Icon/iconsList'\nimport { theme as oldTheme } from '../theme'\nimport { focusOutline } from '../utils/focusOutline'\n\ntype LinkTypo = 'regular' | 'small'\n\nexport type LinkProps = {\n  className?: string\n  href: string\n  onClick?: MouseEventHandler\n  openInNewTab?: boolean\n  children?: ReactNode\n  download?: boolean\n  typo?: LinkTypo\n  highlight?: boolean\n  iconToRender?: Icons\n  isTrailingIcon?: boolean\n}\n\nexport const Link: FC<LinkProps> = ({\n  className,\n  href,\n  onClick,\n  openInNewTab,\n  download,\n  children,\n  typo = 'regular',\n  highlight = false,\n  iconToRender = openInNewTab ? 'new-window' : undefined,\n  isTrailingIcon = true,\n}) => {\n  return (\n    <LinkWrapper\n      href={href}\n      className={className}\n      onClick={onClick}\n      download={download}\n      $typo={typo}\n      $highlight={highlight}\n      {...(openInNewTab && {\n        rel: 'noopener noreferrer',\n        target: '_blank',\n      })}\n    >\n      {iconToRender && !isTrailingIcon && (\n        <Icon\n          mt={{ custom: '3px' }}\n          mr={{ custom: '4px' }}\n          render={iconToRender}\n          size={typo === 'regular' ? 14 : 12}\n          color={highlight ? 'lollipop' : 'liquorice'}\n        />\n      )}\n      {children}\n      {iconToRender && isTrailingIcon && (\n        <Icon\n          mt={{ custom: '3px' }}\n          ml=\"8px\"\n          render={iconToRender}\n          size={typo === 'regular' ? 14 : 12}\n          color={highlight ? 'lollipop' : 'liquorice'}\n        />\n      )}\n    </LinkWrapper>\n  )\n}\n\nconst LinkWrapper = styled.a<{ $typo: LinkTypo; $highlight: boolean }>(\n  ({ $typo, $highlight, theme }) => css`\n    ${focusOutline()}\n    display: inline-flex;\n    flex-direction: row;\n\n    ${$typo === 'regular' &&\n    css`\n      font-size: 16px;\n      line-height: 20px;\n    `}\n\n    ${$typo === 'small' &&\n    css`\n      font-size: 14px;\n      line-height: 20px;\n    `}\n\n    font-weight: ${oldTheme.font.weight.medium};\n    text-decoration: underline;\n    color: ${$highlight\n      ? theme.color.interactive.primary.base\n      : theme.color.text.base};\n\n    background: none;\n    cursor: pointer;\n\n    &:hover {\n      color: ${theme.color.text.subtle};\n\n      path {\n        fill: ${theme.color.icon.subtle};\n      }\n    }\n\n    &:active {\n      color: ${theme.color.text.base};\n\n      path {\n        fill: ${theme.color.icon.subtle};\n      }\n    }\n  `,\n)\n\n/**\n * Internal utility to override styling in other components (see Text)\n * @internal\n */\nexport const linkStyleOverride = ({ color }: { color: string }) => css`\n  & ${LinkWrapper} {\n    color: ${color};\n\n    path {\n      fill: ${color};\n    }\n\n    &:hover {\n      color: ${darken(0.1, color)};\n\n      path {\n        fill: ${darken(0.1, color)};\n      }\n    }\n  }\n`\n","import { theme } from '../theme'\nimport { Typo } from './Text'\n\nexport const fontStyleMapping: Record<Typo, string> = {\n  'hero-alternate': `\n    font-size: 40px;\n    font-family: 'MarshmallowYouth';\n    font-weight: ${theme.font.weight.bold};\n    line-height: 40px;\n\n    @media (min-width: 768px) {\n      font-size: 56px;\n      line-height: 52px;\n    }\n  `,\n  hero: `\n    font-size: 32px;\n    font-weight: ${theme.font.weight.medium};\n    line-height: 40px;\n\n    @media (min-width: 768px) {\n      font-size: 40px;\n      line-height: 44px;\n    }\n  `,\n  'heading-alternate': `\n    font-size: 40px;\n    font-family: 'MarshmallowYouth';\n    font-weight: ${theme.font.weight.bold};\n    line-height: 40px;\n  `,\n  'heading-large': `\n    font-size: 28px;\n    font-weight: ${theme.font.weight.medium};\n    line-height: 32px;\n\n    @media (min-width: 768px) {\n      font-size: 32px;\n      line-height: 40px;\n    }\n  `,\n  'heading-medium': `\n    font-size: 24px;\n    font-weight: ${theme.font.weight.medium};\n    line-height: 32px;\n  `,\n  'heading-small': `\n    font-size: 20px;\n    font-weight: ${theme.font.weight.medium};\n    line-height: 28px;\n  `,\n  'headline-regular': `\n    font-size: 16px;\n    font-weight: ${theme.font.weight.medium};\n    line-height: 20px;\n  `,\n  'headline-small': `\n    font-size: 14px;\n    font-weight: ${theme.font.weight.medium};\n    line-height: 20px;\n  `,\n  'body-standfirst': `\n    font-size: 18px;\n    font-weight: ${theme.font.weight.normal};\n    line-height: 24px;\n  `,\n  'body-regular': `\n    font-size: 16px;\n    font-weight: ${theme.font.weight.normal};\n    line-height: 20px;\n  `,\n  'body-small': `\n    font-size: 14px;\n    font-weight: ${theme.font.weight.normal};\n    line-height: 20px;\n  `,\n  caption: `\n    font-size: 12px;\n    font-weight: ${theme.font.weight.normal};\n    line-height: 16px;\n  `,\n  label: `\n    font-size: 10px;\n    line-height: 12px;\n    font-weight: ${theme.font.weight.medium};\n    text-transform: uppercase;\n  `,\n}\n","import * as designTokens from '@mrshmllw/smores-foundations/build/web/variables.json'\nimport { Color } from '../../theme'\n\ntype Flatten<T, Prefix extends string = ''> = {\n  [K in keyof T & string]: T[K] extends Record<string, any>\n    ? Flatten<T[K], `${Prefix}${K}.`>\n    : `${Prefix}${K}`\n}[keyof T & string]\n\ntype Prettify<T> = {\n  [K in keyof T]: T[K]\n} & {}\n\nexport type NewColor = Prettify<\n  Flatten<Pick<typeof designTokens, 'color' | 'extended1' | 'thirdParty'>>\n>\n\nexport type ColorTypes = Color | NewColor\n\nexport const getThemeColor = (path: NewColor): string => {\n  return path.split('.').reduce((acc, key) => acc?.[key], designTokens as any)\n}\n\nexport const resolveToThemeColor = (color: NewColor | Color): string => {\n  return color in legacyColorMap\n    ? getThemeColor(legacyColorMap[color as keyof typeof legacyColorMap])\n    : getThemeColor(color as NewColor)\n}\n\n// a function that returns a flattened dot notation string path to access the color value\nexport const formatDesignTokenColor = (): string => {\n  const { color, extended1, thirdParty } = designTokens\n  const colors = { color, extended1, thirdParty }\n\n  if (colors === null) {\n    return ''\n  }\n\n  const result: string[] = []\n  const destructureNestedObject = (obj: any, currentPath: string) => {\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        const value = obj[key]\n        const newPath = currentPath ? `${currentPath}.${key}` : key\n        if (typeof value === 'object' && value !== null) {\n          destructureNestedObject(value, newPath)\n        } else {\n          result.push(newPath)\n        }\n      }\n    }\n  }\n  destructureNestedObject(colors, '')\n  return result.join(', ')\n}\n\n// old colour name â†’ new colour path // base token value\nexport const legacyColorMap: Record<Color, NewColor> = {\n  fairyFloss: 'color.surface.brand.100', // palette.primary.040\n  bubblegum: 'color.surface.brand.200', // palette.primary.060\n  marshmallowPink: 'color.surface.brand.300', // palette.primary.100\n  lollipop: 'color.surface.brand.400', // palatte.primary.120\n\n  // Core Secondary\n  chia: 'color.feedback.inactive.100', // palette.secondary.040\n  sesame: 'color.text.subtle', // palette.secondary.060\n  liquorice: 'color.text.base', // palette.secondary.100\n  boba: 'color.text.contrast', // palette.secondary.120\n\n  // Core Tertiary\n  cream: `color.surface.base.000`, // palette.neutral.000\n  coconut: 'color.surface.base.100', // palette.neutral.010\n  mascarpone: 'color.surface.base.200', // palette.neutral.020\n  custard: 'color.surface.base.300', // palette.neutral.040\n\n  // Brand Secondary\n  feijoa: 'color.illustration.accent1.100', // palette.brand1.060\n  spearmint: 'color.illustration.accent1.200', // palette.brand1.100\n  macaroon: 'color.illustration.accent2.100', // palette.brand2.060\n  blueberry: 'color.illustration.accent2.200', // palette.brand2.100\n  pistachio: 'color.illustration.accent3.200', // palette.brand3.100\n  matcha: 'color.illustration.accent3.100', // palette.brand3.060\n  caramel: 'color.illustration.accent4.200', // palette.brand4.100\n  peanut: 'color.illustration.accent4.100', // palette.brand4.060\n  marzipan: 'color.illustration.neutral.400', // palette.neutral.100\n  oatmeal: 'color.illustration.neutral.300', // palette.neutral.060\n  satsuma: 'extended1.20', // extended1.020\n\n  // Traffic light\n  watermelon: 'color.feedback.negative.100', // palette.negative.020\n  strawberry: 'color.feedback.negative.200', // palette.negative.100\n  apple: 'color.feedback.positive.200', // palette.positive.100\n  mint: 'color.feedback.positive.100', // palette.positive.020\n  lemon: 'color.feedback.notice.200', // palette.notice.100\n  sherbert: 'color.feedback.notice.100', // palette.notice.020\n  tangerine: 'extended1.100', // extended1.100\n\n  // Third-party brand colours\n  compareTheMarket: 'thirdParty.compareTheMarket',\n  confused: 'thirdParty.confusedCom',\n  onfido: 'thirdParty.onfido',\n  x: 'thirdParty.twitter', // x rebrand not yet reflected in foundations\n  premfina: 'thirdParty.premfina',\n  checkout: 'thirdParty.checkout',\n  meta: 'thirdParty.facebook', // Meta rebrand not yet reflected in foundations\n  stripe: 'thirdParty.stripe',\n  intercom: 'thirdParty.intercom',\n  ravelin: 'thirdParty.ravelin',\n  rac: 'thirdParty.rac',\n  hometree: 'thirdParty.hometree',\n} as const\n","import React, { FC, forwardRef, LabelHTMLAttributes, ReactNode } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../Box'\nimport { linkStyleOverride } from '../Link/Link'\nimport { MarginProps } from '../utils/space'\nimport { fontStyleMapping } from './fontMapping'\nimport {\n  ColorTypes,\n  NewColor,\n  getThemeColor,\n  legacyColorMap,\n} from '../ThemeProvider/utils/colourMap'\ninterface IText {\n  /** typography class name to apply predefined styles */\n  $typo: string\n  /** text-align  */\n  $align: string\n  /** color from the theme  */\n  $color: ColorTypes\n  $cursor: string\n}\n\nexport type Typo =\n  | 'hero-alternate'\n  | 'hero'\n  | 'heading-alternate'\n  | 'heading-large'\n  | 'heading-medium'\n  | 'heading-small'\n  | 'headline-regular'\n  | 'headline-small'\n  | 'body-standfirst'\n  | 'body-regular'\n  | 'body-small'\n  | 'caption'\n  | 'label'\n\ntype Props = {\n  children: ReactNode\n  tag?: any\n  className?: string\n  typo?: Typo\n  align?: string\n  color?: ColorTypes\n  cursor?: string\n  title?: string\n} & MarginProps\n\nexport type TextProps = Props & Omit<LabelHTMLAttributes<HTMLElement>, 'color'>\n\nexport const Text: FC<TextProps> = forwardRef<HTMLElement, TextProps>(\n  (\n    {\n      children,\n      typo = 'body-regular',\n      className = '',\n      tag = 'p',\n      align = 'left',\n      color = 'color.text.base',\n      cursor = 'inherit',\n      title = '',\n      ...props\n    },\n    ref,\n  ) => {\n    const resolvedColor =\n      color in legacyColorMap\n        ? getThemeColor(legacyColorMap[color as keyof typeof legacyColorMap])\n        : getThemeColor(color as NewColor)\n    return (\n      <Container\n        forwardedAs={tag}\n        className={className}\n        $typo={typo}\n        $align={align}\n        $color={resolvedColor}\n        cursor={cursor}\n        title={title}\n        {...props}\n        ref={ref}\n      >\n        {children}\n      </Container>\n    )\n  },\n)\n\nText.displayName = 'Text'\n\nconst isTypo = (value: string): value is Typo => {\n  return Object.keys(fontStyleMapping).includes(value)\n}\n\nconst Container = styled(Box)<IText>(\n  ({ $align, $color, $cursor, $typo }) => css`\n    /** TYPOGRAPHY STYLES */\n\n    ${isTypo($typo) && fontStyleMapping[$typo]}\n\n    text-align: ${$align};\n    cursor: ${$cursor};\n    color: ${$color};\n    ${linkStyleOverride({ color: $color })}\n  `,\n)\n"],"names":["cov_1ctv5wk04u","actualCoverage","darken","Link","href","onClick","openInNewTab","download","children","typo","highlight","b","iconToRender","isTrailingIcon","s","React","LinkWrapper","className","$typo","$highlight","rel","target","mt","Icon","custom","mr","render","size","color","ml","styled","theme","focusOutline","linkStyleOverride","cov_2qau8gq0t3","fontStyleMapping","cov_7qk2vlko6","designTokens","getThemeColor","path","split","f","acc","key","resolveToThemeColor","legacyColorMap","formatDesignTokenColor","extended1","thirdParty","obj","currentPath","prototype","newPath","value","destructureNestedObject","result","colors","join","confused","onfido","x","checkout","meta","intercom","ravelin","rac","hometree","cov_2lhehuucfy","Text","forwardRef","tag","align","cursor","title","props","resolvedColor","Container","$align","$color","ref","keys","Box","$cursor"],"mappings":"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"}