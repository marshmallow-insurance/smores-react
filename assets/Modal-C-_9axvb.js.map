{"version":3,"file":"Modal-C-_9axvb.js","sources":["../../src/Modal/Modal.tsx"],"sourcesContent":["import React, { FC, ReactNode, useRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport styled, { css } from 'styled-components'\nimport { theme } from '../theme'\n\nimport { Box } from '../Box'\nimport { IconStrict } from '../IconStrict'\nimport { Text, type TextProps } from '../Text'\nimport { useBodyScrollLock } from '../hooks/useBodyScrollLock'\n\ninterface IModalWrapper {\n  // showModal state\n  $showModal: boolean\n}\ninterface IModalContainer {\n  // drawer state\n  $drawer: boolean\n  // modal width\n  $width: string\n}\n\nexport type ModalProps = {\n  /**\n   * Title of the modal\n   * @default \"\" (empty string)\n   *\n   * @example\n   * ```tsx\n   * <Modal title=\"MultiCar Account\" />\n   * ```\n   *\n   * @example\n   * ```tsx\n   * <Modal title={{ typo: 'hero', children: 'MultiCar Account' }} />\n   * ```\n   */\n  title?: string | TitleProps\n  icon?: string\n  children?: ReactNode\n  rightPanel?: ReactNode\n  showModal?: boolean\n  handleClick: () => void\n  drawer?: boolean\n  cross?: boolean\n  width?: string\n  containerClass?: string\n  portalContainer?: Element | DocumentFragment\n  closeOnOverlayClick?: boolean\n}\n\nexport type TitleProps = TextProps\n\nconst getDefaultTitleProps = (title: string): TitleProps => ({\n  children: title,\n  tag: 'h2',\n  typo: 'heading-small',\n  align: 'left',\n})\n\nexport const Modal: FC<ModalProps> = ({\n  title = '',\n  children,\n  rightPanel,\n  showModal = false,\n  handleClick,\n  drawer = true,\n  cross = true,\n  width,\n  containerClass,\n  portalContainer = document.body,\n  closeOnOverlayClick = true,\n}) => {\n  const modalRef = useRef<HTMLDivElement>(null)\n\n  useBodyScrollLock({ node: modalRef.current, showModal })\n\n  const isTitleString = typeof title === 'string'\n  const titleProps = isTitleString ? getDefaultTitleProps(title) : title\n\n  return createPortal(\n    <Wrapper $showModal={showModal} ref={modalRef}>\n      <Overlay\n        onClick={() => closeOnOverlayClick && handleClick()}\n        $closeOnOverlayClick={closeOnOverlayClick}\n      />\n      <Container\n        $drawer={drawer}\n        $width={width || '460px'}\n        className={containerClass}\n      >\n        <Box\n          flex\n          alignItems=\"flex-start\"\n          justifyContent=\"space-between\"\n          mb=\"8px\"\n        >\n          <TitleElements flex direction=\"column\">\n            <Text {...titleProps} />\n          </TitleElements>\n          <Box flex alignItems=\"center\" gap={'8px'}>\n            {rightPanel}\n            {cross && (\n              <IconStrict\n                render=\"cross\"\n                backgroundColor=\"oatmeal\"\n                handleClick={handleClick}\n                size={36}\n              />\n            )}\n          </Box>\n        </Box>\n        <Box flex direction=\"column\">\n          {children}\n        </Box>\n      </Container>\n    </Wrapper>,\n    portalContainer,\n  )\n}\n\nconst Wrapper = styled(Box)<IModalWrapper>(\n  ({ $showModal }) => css`\n    display: ${$showModal ? 'flex' : 'none'};\n    position: absolute;\n    z-index: 999;\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100%;\n    justify-content: center;\n    align-items: center;\n  `,\n)\n\nconst Overlay = styled.div<{ $closeOnOverlayClick: boolean }>`\n  position: fixed;\n  background: ${theme.colors.liquorice};\n  cursor: ${(props) => (props.$closeOnOverlayClick ? 'pointer' : 'default')};\n  opacity: 0.4;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`\n\nconst Container = styled.div<IModalContainer>(\n  ({ $drawer, $width }) => css`\n    background: ${theme.colors.coconut};\n    box-sizing: border-box;\n    border-radius: 16px;\n    padding: 24px;\n    width: 100%;\n    max-width: ${$width};\n    position: fixed;\n    max-height: calc(100vh - 64px);\n    overflow: auto;\n    transition: all 0.3s ease-in-out;\n\n    ${$drawer === true &&\n    css`\n      @media (max-width: 768px) {\n        max-width: none;\n        border-radius: 16px 16px 0px 0px;\n        padding: 10% 24px;\n        max-height: 90vh;\n\n        position: fixed;\n        right: 0;\n        left: 0;\n        bottom: 0;\n      }\n    `}\n  `,\n)\n\nconst TitleElements = styled(Box)`\n  align-self: center;\n`\n"],"names":["cov_1fthp5m239","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","getDefaultTitleProps","title","f","children","tag","typo","align","Modal","b","rightPanel","showModal","handleClick","drawer","cross","width","containerClass","portalContainer","body","closeOnOverlayClick","modalRef","useRef","useBodyScrollLock","node","current","isTitleString","titleProps","createPortal","React","createElement","Wrapper","$showModal","ref","Overlay","onClick","$closeOnOverlayClick","Container","$drawer","$width","className","Box","flex","justifyContent","mb","TitleElements","direction","Text","alignItems","gap","IconStrict","render","backgroundColor","size","styled","css"],"mappings":"kaAyGgB,SAAAA,GAAA,CAAA,IAAAC,EAAA,kEAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,kEAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,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"}