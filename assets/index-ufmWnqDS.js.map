{"version":3,"file":"index-ufmWnqDS.js","sources":["../../src/utils/flex.tsx","../../src/Box/Box.tsx","../../src/Box/index.ts"],"sourcesContent":["import { resolveResponsiveProp, ResponsiveProp } from './responsiveProp'\nimport { resolveSpacing, SpacingProp } from './space'\nimport { TransientProps } from './utilTypes'\n\ntype FlexFN = (arg: TransientFlexProps) => string\n\nexport interface FlexProps {\n  direction?: ResponsiveProp<\n    'column' | 'column-reverse' | 'row' | 'row-reverse'\n  >\n  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse'\n  flex?: boolean\n  flow?: string\n  justifyContent?: ResponsiveProp<\n    | 'center'\n    | 'flex-end'\n    | 'flex-start'\n    | 'space-around'\n    | 'space-between'\n    | 'space-evenly'\n  >\n\n  alignItems?: ResponsiveProp<\n    'baseline' | 'center' | 'flex-end' | 'flex-start' | 'stretch'\n  >\n  alignContent?: ResponsiveProp<\n    | 'center'\n    | 'flex-end'\n    | 'flex-start'\n    | 'space-around'\n    | 'space-between'\n    | 'stretch'\n  >\n  gap?: ResponsiveProp<SpacingProp>\n  rowGap?: ResponsiveProp<SpacingProp>\n  columnGap?: ResponsiveProp<SpacingProp>\n}\n\nexport type TransientFlexProps = TransientProps<FlexProps>\n\nexport const flex: FlexFN = (props: TransientFlexProps) => {\n  const {\n    $flex,\n    $direction,\n    $wrap,\n    $flow,\n    $justifyContent,\n    $alignItems,\n    $alignContent,\n    $gap,\n    $columnGap,\n    $rowGap,\n  } = props\n\n  return `\n    ${$flex ? `display: flex;` : ''}\n    ${\n      $direction\n        ? resolveResponsiveProp(\n            $direction,\n            (value) => `flex-direction: ${value};`,\n          )\n        : ''\n    }\n    ${$wrap ? `flex-wrap: ${$wrap};` : ''}\n    ${$flow ? `flex-flow: ${$flow};` : ''}\n    ${\n      $justifyContent\n        ? resolveResponsiveProp(\n            $justifyContent,\n            (value) => `justify-content: ${value};`,\n          )\n        : ''\n    }\n    ${\n      $alignItems\n        ? resolveResponsiveProp(\n            $alignItems,\n            (value) => `align-items: ${value};`,\n          )\n        : ''\n    }\n    ${\n      $alignContent\n        ? resolveResponsiveProp(\n            $alignContent,\n            (value) => `align-content: ${value};`,\n          )\n        : ''\n    }\n    ${\n      $gap\n        ? resolveResponsiveProp(\n            $gap,\n            (value) => `gap: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $columnGap\n        ? resolveResponsiveProp(\n            $columnGap,\n            (value) => `column-gap: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $rowGap\n        ? resolveResponsiveProp(\n            $rowGap,\n            (value) => `row-gap: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n  `\n}\n","import React, { ElementType, HTMLAttributes, forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { FlexProps, TransientFlexProps, flex } from '../utils/flex'\nimport { MeasureProps, TransientMeasureProps, measure } from '../utils/measure'\nimport {\n  MarginProps,\n  PaddingProps,\n  TransientMarginProps,\n  TransientPaddingProps,\n  margin,\n  padding,\n} from '../utils/space'\n\nexport type BoxProps = MarginProps &\n  PaddingProps &\n  FlexProps &\n  MeasureProps &\n  HTMLAttributes<HTMLElement> & {\n    as?: ElementType\n    forwardedAs?: ElementType\n  }\n\nexport type TransientBoxProps = TransientMarginProps &\n  TransientPaddingProps &\n  TransientFlexProps &\n  TransientMeasureProps\n\nexport const Box = forwardRef<HTMLDivElement, BoxProps>(\n  ({ children, ...props }, ref) => {\n    const {\n      m,\n      mx,\n      my,\n      ml,\n      mr,\n      mt,\n      mb,\n      p,\n      px,\n      py,\n      pl,\n      pr,\n      pt,\n      pb,\n      direction,\n      wrap,\n      flex,\n      flow,\n      justifyContent,\n      alignItems,\n      alignContent,\n      gap,\n      rowGap,\n      columnGap,\n      width,\n      maxWidth,\n      minWidth,\n      height,\n      maxHeight,\n      minHeight,\n      ...otherProps\n    } = props\n\n    return (\n      <CustomBox\n        ref={ref}\n        $m={m}\n        $mx={mx}\n        $my={my}\n        $ml={ml}\n        $mr={mr}\n        $mt={mt}\n        $mb={mb}\n        $p={p}\n        $px={px}\n        $py={py}\n        $pl={pl}\n        $pr={pr}\n        $pt={pt}\n        $pb={pb}\n        $direction={direction}\n        $wrap={wrap}\n        $flex={flex}\n        $flow={flow}\n        $justifyContent={justifyContent}\n        $alignItems={alignItems}\n        $alignContent={alignContent}\n        $gap={gap}\n        $rowGap={rowGap}\n        $columnGap={columnGap}\n        $width={width}\n        $maxWidth={maxWidth}\n        $minWidth={minWidth}\n        $height={height}\n        $maxHeight={maxHeight}\n        $minHeight={minHeight}\n        {...otherProps}\n      >\n        {children}\n      </CustomBox>\n    )\n  },\n)\nBox.displayName = 'Box'\n\nexport const CustomBox = styled.div<TransientBoxProps>`\n  ${margin};\n  ${padding};\n  ${flex};\n  ${measure};\n`\n","export { Box } from './Box'\n"],"names":["cov_1sph7qwcpp","s","flex","props","f","$direction","$wrap","$flow","$alignItems","$alignContent","cov_2b8j7ajgca","path","hash","global","gcv","coverageData","coverage","actualCoverage","children","ref","m","mx","my","ml","mr","mt","mb","p","px","py","pl","pr","pt","pb","direction","wrap","flex2","flow","justifyContent","alignItems","alignContent","gap","rowGap","columnGap","width","maxWidth","minWidth","height","maxHeight","minHeight","otherProps","React","createElement","CustomBox","$m","$mx","$my","$ml","$mr","$mt","$mb","$p","$px","$py","$pl","$pr","$pt","$pb","$flex","$justifyContent","$gap","$rowGap","$columnGap","cov_2eqpexy6t5"],"mappings":"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"}