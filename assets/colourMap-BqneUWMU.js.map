{"version":3,"file":"colourMap-BqneUWMU.js","sources":["../../src/utils/getFromObject.ts","../../src/ThemeProvider/utils/colourMap.ts"],"sourcesContent":["interface Args {\n  obj: any\n  path: string\n  defaultValue?: string | number\n}\n\nexport const getFromObject = ({ obj, path, defaultValue }: Args) => {\n  const normalize = (seg: string) => {\n    // remove surrounding single or double quotes from a segment\n    const regex = /^[\"'](.*)[\"']$/\n    const match = regex.exec(seg)\n    return match ? match[1] : seg\n  }\n\n  const resolvePath = (regexp: RegExp) =>\n    String.prototype.split\n      .call(path, regexp)\n      .filter(Boolean)\n      .map(normalize)\n      .reduce((res, key) => (res != null ? res[key] : res), obj)\n\n  const result = resolvePath(/[,[\\]]+?/) || resolvePath(/[,[\\].]+?/)\n  return result === undefined || result === obj ? defaultValue : result\n}\n","import * as designTokens from '@mrshmllw/smores-foundations/build/web/variables.json'\nimport { Color } from '../../theme'\nimport { Theme } from '../ThemeProvider'\nimport { getFromObject } from '../../utils/getFromObject'\n\ntype Flatten<T, Prefix extends string = ''> = {\n  [K in keyof T & string]: T[K] extends Record<string, any>\n    ? Flatten<T[K], `${Prefix}${K}.`>\n    : `${Prefix}${K}`\n}[keyof T & string]\n\ntype Prettify<T> = {\n  [K in keyof T]: T[K]\n} & {}\n\nexport type NewColor = Prettify<\n  Flatten<Pick<typeof designTokens, 'color' | 'extended1' | 'thirdParty'>>\n>\n\nexport type ColorTypes = Color | NewColor\n\nexport const resolveToThemeColor = (\n  color: ColorTypes,\n  theme: Theme,\n): string => {\n  const colourPath = getColorPath(color)\n  return getFromObject({\n    obj: theme,\n    path: colourPath,\n  })\n}\n\n// a function that returns a flattened dot notation string path to access the color value\nexport const getColorPath = (color: ColorTypes) => {\n  return color in legacyColorMap\n    ? legacyColorMap[color as keyof typeof legacyColorMap]\n    : color\n}\n\n// a function that returns the design token color paths as a comma-separated string\nexport const formatDesignTokenColor = (): string => {\n  const { color, extended1, thirdParty } = designTokens\n  const colors = { color, extended1, thirdParty }\n\n  if (colors === null) {\n    return ''\n  }\n\n  const result: string[] = []\n  const destructureNestedObject = (obj: any, currentPath: string) => {\n    for (const key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        const value = obj[key]\n        const newPath = currentPath ? `${currentPath}.${key}` : key\n        if (typeof value === 'object' && value !== null) {\n          destructureNestedObject(value, newPath)\n        } else {\n          result.push(newPath)\n        }\n      }\n    }\n  }\n  destructureNestedObject(colors, '')\n  return result.join(', ')\n}\n\n// old colour name â†’ new colour path // base token value\nexport const legacyColorMap: Record<Color, NewColor> = {\n  fairyFloss: 'color.surface.brand.100', // palette.primary.040\n  bubblegum: 'color.surface.brand.200', // palette.primary.060\n  marshmallowPink: 'color.surface.brand.300', // palette.primary.100\n  lollipop: 'color.surface.brand.400', // palatte.primary.120\n\n  // Core Secondary\n  chia: 'color.feedback.inactive.100', // palette.secondary.040\n  sesame: 'color.text.subtle', // palette.secondary.060\n  liquorice: 'color.text.base', // palette.secondary.100\n  boba: 'color.text.contrast', // palette.secondary.120\n\n  // Core Tertiary\n  cream: `color.surface.base.000`, // palette.neutral.000\n  coconut: 'color.surface.base.100', // palette.neutral.010\n  mascarpone: 'color.surface.base.200', // palette.neutral.020\n  custard: 'color.surface.base.300', // palette.neutral.040\n\n  // Brand Secondary\n  feijoa: 'color.illustration.accent1.100', // palette.brand1.060\n  spearmint: 'color.illustration.accent1.200', // palette.brand1.100\n  macaroon: 'color.illustration.accent2.100', // palette.brand2.060\n  blueberry: 'color.illustration.accent2.200', // palette.brand2.100\n  pistachio: 'color.illustration.accent3.200', // palette.brand3.100\n  matcha: 'color.illustration.accent3.100', // palette.brand3.060\n  caramel: 'color.illustration.accent4.200', // palette.brand4.100\n  peanut: 'color.illustration.accent4.100', // palette.brand4.060\n  marzipan: 'color.illustration.neutral.400', // palette.neutral.100\n  oatmeal: 'color.illustration.neutral.300', // palette.neutral.060\n  satsuma: 'extended1.20', // extended1.020\n\n  // Traffic light\n  watermelon: 'color.feedback.negative.100', // palette.negative.020\n  strawberry: 'color.feedback.negative.200', // palette.negative.100\n  apple: 'color.feedback.positive.200', // palette.positive.100\n  mint: 'color.feedback.positive.100', // palette.positive.020\n  lemon: 'color.feedback.notice.200', // palette.notice.100\n  sherbert: 'color.feedback.notice.100', // palette.notice.020\n  tangerine: 'extended1.100', // extended1.100\n\n  // Third-party brand colours\n  compareTheMarket: 'thirdParty.compareTheMarket',\n  confused: 'thirdParty.confusedCom',\n  onfido: 'thirdParty.onfido',\n  x: 'thirdParty.twitter', // x rebrand not yet reflected in foundations\n  premfina: 'thirdParty.premfina',\n  checkout: 'thirdParty.checkout',\n  meta: 'thirdParty.facebook', // Meta rebrand not yet reflected in foundations\n  stripe: 'thirdParty.stripe',\n  intercom: 'thirdParty.intercom',\n  ravelin: 'thirdParty.ravelin',\n  rac: 'thirdParty.rac',\n  hometree: 'thirdParty.hometree',\n} as const\n"],"names":["cov_m5vnbwn5","getFromObject","path","defaultValue","s","normalize","seg","match","regex","resolvePath","regexp","String","prototype","res","key","obj","result","cov_7qk2vlko6","actualCoverage","designTokens","resolveToThemeColor","color","theme","colourPath","getColorPath","legacyColorMap","formatDesignTokenColor","extended1","thirdParty","currentPath","newPath","b","value","destructureNestedObject","colors","join","confused","onfido","x","checkout","meta","intercom","ravelin","rac","hometree"],"mappings":"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"}