{"version":3,"file":"SupportMessage-BPfzuRrG.js","sources":["../../src/SupportMessage/SupportMessage.tsx"],"sourcesContent":["import { darken } from 'polished'\nimport React, { FC, MouseEventHandler, ReactElement } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Icons } from '../Icon/iconsList'\n\nimport { Text } from '../Text'\nimport { Color, theme } from '../theme'\nimport { isReactElement } from '../utils/isReactElement'\nimport { MarginProps } from '../utils/space'\n\ntype StylesItem = {\n  iconColor: Color\n  backgroundColor: string\n  hoverBackgroundColor: string\n  icon: Icons\n}\n\nconst styles: Record<SupportMessageType, StylesItem> = {\n  info: {\n    iconColor: 'liquorice',\n    backgroundColor: theme.colors.custard,\n    hoverBackgroundColor: darken(0.1, theme.colors.custard),\n    icon: 'info',\n  },\n  fallbackStyle: {\n    iconColor: 'liquorice',\n    backgroundColor: theme.colors.coconut,\n    hoverBackgroundColor: darken(0.1, theme.colors.coconut),\n    icon: 'info',\n  },\n  alert: {\n    iconColor: 'tangerine',\n    backgroundColor: theme.colors.sherbert,\n    hoverBackgroundColor: darken(0.1, theme.colors.sherbert),\n    icon: 'alert',\n  },\n  warning: {\n    iconColor: 'strawberry',\n    backgroundColor: theme.colors.watermelon,\n    hoverBackgroundColor: darken(0.1, theme.colors.watermelon),\n    icon: 'warning',\n  },\n  success: {\n    iconColor: 'apple',\n    backgroundColor: theme.colors.mint,\n    hoverBackgroundColor: darken(0.1, theme.colors.mint),\n    icon: 'circle-tick',\n  },\n}\n\ntype SupportMessageType =\n  | 'info'\n  | 'fallbackStyle'\n  | 'alert'\n  | 'warning'\n  | 'success'\n\nexport type SupportMessageProps = {\n  className?: string\n  description: string | ReactElement\n  onClick?: MouseEventHandler\n  type: SupportMessageType\n  title?: string\n} & MarginProps\n\nexport const SupportMessage: FC<SupportMessageProps> = ({\n  className,\n  description,\n  onClick,\n  type = 'info',\n  title,\n  ...marginProps\n}) => {\n  return (\n    <Wrapper\n      className={className}\n      $type={type}\n      onClick={onClick}\n      {...marginProps}\n    >\n      <IconWrapper>\n        <Icon\n          size={20}\n          render={styles[type].icon}\n          color={styles[type].iconColor}\n        />\n      </IconWrapper>\n      <Box flex direction=\"column\" mx=\"8px\">\n        {title && <Title>{title}</Title>}\n        {isReactElement(description) ? (\n          <DescriptionBox>{description}</DescriptionBox>\n        ) : (\n          <Description tag=\"p\">{description}</Description>\n        )}\n      </Box>\n      {onClick && (\n        <Box ml={{ custom: 'auto' }}>\n          <Icon size={16} render=\"caret\" color=\"marzipan\" rotate={270} />\n        </Box>\n      )}\n    </Wrapper>\n  )\n}\n\ninterface IWrapper {\n  $type: SupportMessageType\n  onClick?: MouseEventHandler\n}\n\nconst IconWrapper = styled(Box)`\n  align-self: flex-start;\n`\n\nconst Wrapper = styled(Box)<IWrapper>(\n  ({ $type, onClick }) => css`\n    align-items: center;\n    background-color: ${styles[$type].backgroundColor};\n    border-radius: 16px;\n    ${onClick && `cursor: pointer`};\n    padding: 12px;\n    display: flex;\n    width: 100%;\n\n    &:hover,\n    &:active {\n      ${onClick && `background-color: ${styles[$type].hoverBackgroundColor};`};\n    }\n  `,\n)\n\nconst Title = styled.p`\n  font-size: 16px;\n  font-weight: ${theme.font.weight.medium};\n  color: ${theme.colors.liquorice};\n  line-height: 20.8px;\n  margin-bottom: 4px;\n`\n\nconst DescriptionBox = styled(Box)`\n  color: ${theme.colors.liquorice};\n  font-size: 14px;\n  line-height: 20px;\n`\n\nconst Description = styled(Text)`\n  color: ${theme.colors.liquorice};\n  font-size: 14px;\n  line-height: 20px;\n`\n"],"names":["cov_24w0ellwk6","path","hash","global","gcv","coverageData","coverage","actualCoverage","styles","s","info","iconColor","backgroundColor","theme","colors","custard","hoverBackgroundColor","darken","icon","fallbackStyle","coconut","alert","sherbert","warning","watermelon","success","mint","SupportMessage","className","description","onClick","type","b","title","marginProps","f","React","createElement","Wrapper","$type","IconWrapper","Icon","size","render","color","Box","flex","direction","mx","Title","isReactElement","DescriptionBox","Description","tag","ml","custom","rotate"],"mappings":"qaAsCA,SAAAA,GAAA,CAAA,IAAAC,EAAA,oFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,oFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,C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"}