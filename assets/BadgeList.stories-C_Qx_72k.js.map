{"version":3,"file":"BadgeList.stories-C_Qx_72k.js","sources":["../../src/BadgeList/BadgeList.tsx","../../src/BadgeList/BadgeList.stories.tsx"],"sourcesContent":["import React from 'react'\nimport { Badge, BadgeSize, type BadgeProps } from '../Badge/Badge'\nimport styled from 'styled-components'\nimport { Tooltip } from '../Tooltip'\nimport type { TooltipProps } from '../Tooltip/Tooltip'\nimport { Text } from '../Text'\nimport { theme } from '../theme'\n\ntype WithTooltip = Pick<TooltipProps, 'title' | 'content'> & {\n  position?: TooltipProps['position']\n}\n\nexport type BadgeListBadge = BadgeProps & { tooltip?: WithTooltip }\n\ntype Props = {\n  size?: BadgeProps['size']\n  limit?: number\n  badges: Omit<BadgeListBadge, 'zIndex'>[]\n}\n\n/**\n * ### A list of badges with optional tooltips\n *\n * @param limit - The maximum number of badges to display. If the number of badges exceeds the limit, a badge will be displayed indicating the number of hidden excess badges.\n *\n */\nexport function BadgeList({ badges, limit, size = BadgeSize.Lg }: Props) {\n  const badgeZIndexMax = badges.length\n  const limitExcess =\n    // TODO: off by one adjustments work, just hard to read, refactor for human eyes 👁️👄👁️\n    limit && (badges.length > limit ? badges.length - limit : 0)\n\n  const maxBadges = limit ? limit - 1 : undefined\n  const showExcessBadge = limitExcess !== undefined && Boolean(limitExcess)\n\n  return (\n    <Container $size={size}>\n      {badges\n        .slice(0, limitExcess ? maxBadges : undefined)\n        .map((badge, index) => (\n          <WithTooltip\n            key={typeof badge.src === 'string' ? badge.src : index}\n            badge={{\n              ...badge,\n              zIndex: badgeZIndexMax - index,\n              size,\n            }}\n          />\n        ))}\n\n      {showExcessBadge && (\n        <div\n          className=\"limit-badge\"\n          style={{ zIndex: badgeZIndexMax, marginLeft: '4px' }}\n        >\n          <Badge\n            title={`+${limitExcess}`}\n            borderColour=\"oatmeal\"\n            size={size}\n            src={<ExcessBadge excess={limitExcess + 1} />}\n            disabled\n          />\n        </div>\n      )}\n    </Container>\n  )\n}\n\ntype ExcessBadgeProps = {\n  excess: number\n}\n\nfunction ExcessBadge({ excess }: ExcessBadgeProps) {\n  return (\n    <ExcessBadgeContainer>\n      <Text typo=\"caption\" style={{ fontWeight: 'bold' }}>\n        +{excess}\n      </Text>\n    </ExcessBadgeContainer>\n  )\n}\n\nconst ExcessBadgeContainer = styled.div`\n  display: flex;\n  align-items: center;\n  place-content: center;\n  width: 100%;\n  height: 100%;\n  background-color: ${theme.colors.oatmeal};\n  pointer-events: none;\n`\n\ntype WithTooltipProps = {\n  badge: BadgeListBadge\n}\n\nconst WithTooltip = ({ badge: { tooltip, ...badge } }: WithTooltipProps) => {\n  if (tooltip) {\n    return (\n      <div style={{ zIndex: badge.zIndex }}>\n        <Tooltip\n          position={tooltip.position ?? 'bottom'}\n          title={tooltip?.title}\n          content={tooltip.content}\n        >\n          <Badge {...badge} />\n        </Tooltip>\n      </div>\n    )\n  }\n\n  return (\n    <div style={{ zIndex: badge.zIndex }}>\n      <Badge {...badge} />\n    </div>\n  )\n}\n\nconst marginRightMapping = {\n  [BadgeSize.Lg]: '-18px',\n  [BadgeSize.Md]: '-14px',\n  [BadgeSize.Sm]: '-11px',\n} satisfies Record<BadgeSize, string>\n\nconst Container = styled.div<{ $size: BadgeSize }>`\n  display: flex;\n\n  > * {\n    transition:\n      margin 0.2s ease-in-out,\n      padding 0.2s ease-in-out;\n    margin-right: ${(props) => marginRightMapping[props.$size]};\n\n    &:hover:not(:first-child):not(.limit-badge) {\n      padding-left: 10px;\n      &:not(:last-child) {\n        padding-right: 5px;\n      }\n    }\n  }\n`\n","import { Meta, StoryObj } from '@storybook/react'\nimport { BadgeList } from './BadgeList'\nimport { BadgeSize } from '../Badge/Badge'\nimport { getExampleImg } from '../Badge/storybook/exampleImg'\n\nconst meta: Meta<typeof BadgeList> = {\n  title: 'BadgeList',\n  component: BadgeList,\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof BadgeList>\n\nconst createTemplateBadge = () => {\n  const { name, src } = getExampleImg()\n\n  return {\n    src,\n    title: name,\n    tooltip: {\n      title: 'This is a tooltip',\n      content: 'This is the content of the tooltip',\n    },\n  }\n}\n\nexport const Primary: Story = {\n  args: {\n    badges: [\n      createTemplateBadge(),\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n    ],\n  },\n}\n\nexport const MediumSize: Story = {\n  args: {\n    size: BadgeSize.Md,\n    badges: [\n      createTemplateBadge(),\n      createTemplateBadge(),\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n    ],\n  },\n}\n\nexport const SmallSize: Story = {\n  args: {\n    size: BadgeSize.Sm,\n    badges: [\n      createTemplateBadge(),\n      createTemplateBadge(),\n      createTemplateBadge(),\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n    ],\n  },\n}\n\nexport const BadgeFallback: Story = {\n  args: {\n    limit: 5,\n    badges: [\n      { ...createTemplateBadge(), src: '' },\n      { ...createTemplateBadge(), src: 'example/404.jpg' },\n      createTemplateBadge(),\n      createTemplateBadge(),\n      createTemplateBadge(),\n      createTemplateBadge(),\n    ],\n  },\n}\n\nexport const BadgeLimit: Story = {\n  args: {\n    limit: 4,\n    badges: [\n      createTemplateBadge(),\n      { ...createTemplateBadge() },\n      { ...createTemplateBadge() },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n    ],\n  },\n}\n"],"names":["cov_1g2y71trl3","actualCoverage","badges","BadgeList","limit","size","BadgeSize","badgeZIndexMax","limitExcess","maxBadges","showExcessBadge","f","badge","index","s","src","zIndex","className","React","style","marginLeft","Badge","borderColour","ExcessBadge","disabled","excess","ExcessBadgeContainer","Text","fontWeight","WithTooltip","tooltip","position","Tooltip","title","content","Md","Sm","props","marginRightMapping","meta","component","createTemplateBadge","name","getExampleImg","Primary","args","MediumSize","SmallSize","BadgeFallback","BadgeLimit","parameters","docs","source","originalSource"],"mappings":"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"}