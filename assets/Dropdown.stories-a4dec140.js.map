{"version":3,"file":"Dropdown.stories-a4dec140.js","sources":["../../src/Dropdown/Dropdown.tsx","../../src/Dropdown/Collection.tsx"],"sourcesContent":["import React, {\n  FocusEvent,\n  FormEvent,\n  forwardRef,\n  ForwardedRef,\n  useMemo,\n} from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { theme } from '../theme'\nimport { Icon } from '../Icon'\nimport { Field } from '../fields/Field'\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\nimport { useUniqueId } from '../utils/id'\nimport { useControllableState } from '../utils/useControlledState'\nimport { Box } from '../Box'\nimport { StyledFrontIcon } from '../fields/components/CommonInput'\n\nexport type DropdownItem = {\n  optionGroupLabel?: string\n  label: string\n  value: string\n}\n\nexport interface Props extends CommonFieldProps {\n  placeholder?: string\n  name?: string\n  value?: string | null\n  defaultValue?: string\n  disabled?: boolean\n  list: DropdownItem[]\n  frontIcon?: string\n  fallbackStyle?: boolean\n  onSelect: (element: string) => void\n  onBlur?: (e: FocusEvent<HTMLSelectElement>) => void\n}\n\ntype TruncateProps =\n  | {\n      onSelect: (e: string) => void\n      onInputChange?: (e: FormEvent<HTMLSelectElement>) => void\n    }\n  | {\n      onSelect?: (e: string) => void\n      onInputChange: (e: FormEvent<HTMLSelectElement>) => void\n    }\n\nexport type DropdownProps = Props & TruncateProps\n\nexport const Dropdown = forwardRef(function Dropdown(\n  {\n    id: idProp,\n    placeholder,\n    name,\n    value: valueProp,\n    defaultValue,\n    disabled = false,\n    list,\n    onSelect,\n    error = false,\n    onInputChange,\n    onBlur,\n    frontIcon,\n    fallbackStyle,\n    ...fieldProps\n  }: DropdownProps,\n  ref: ForwardedRef<HTMLSelectElement>,\n) {\n  const [value, setValue] = useControllableState({\n    initialState: defaultValue,\n    stateProp: valueProp,\n  })\n  const id = useUniqueId(idProp)\n  const hasOptGroups = list.findIndex((item) => !!item.optionGroupLabel) !== -1\n\n  const dropdownItemsGroups = useMemo(() => {\n    const itemsPerGroupLabel = new Map<string, DropdownItem[]>()\n\n    list.forEach((item) => {\n      const key = item.optionGroupLabel ?? ''\n      const group = itemsPerGroupLabel.get(key) ?? []\n\n      group.push(item)\n      itemsPerGroupLabel.set(key, group)\n    })\n\n    return Array.from(itemsPerGroupLabel.values())\n  }, [list])\n\n  return (\n    <Field {...fieldProps} htmlFor={id} error={error}>\n      <Box flex alignItems=\"center\">\n        {frontIcon && (\n          <StyledFrontIcon\n            disabled={disabled}\n            render={frontIcon}\n            color=\"sesame\"\n          />\n        )}\n        <StyledSelect\n          id={id}\n          disabled={disabled || list.length < 1}\n          onChange={(event) => {\n            const value = event.currentTarget.value\n\n            onSelect?.(value)\n            onInputChange?.(event)\n            setValue(value)\n          }}\n          error={error}\n          ref={ref}\n          onBlur={onBlur}\n          name={name}\n          frontIcon={frontIcon}\n          fallbackStyle={fallbackStyle}\n          value={value ? value : ''}\n        >\n          {hasOptGroups ? (\n            <optgroup label={placeholder}>\n              <option value=\"\" hidden>\n                {placeholder}\n              </option>\n            </optgroup>\n          ) : (\n            <option value=\"\" hidden>\n              {placeholder}\n            </option>\n          )}\n\n          {dropdownItemsGroups.map((groupItems, i) =>\n            hasOptGroups ? (\n              <optgroup\n                key={i}\n                label={groupItems[0].optionGroupLabel ?? 'Other'}\n              >\n                {groupItems.map((el, j) => (\n                  <option key={`${i}-${j}`} value={el.value}>\n                    {el.label}\n                  </option>\n                ))}\n              </optgroup>\n            ) : (\n              groupItems.map((el, j) => (\n                <option key={j} value={el.value}>\n                  {el.label}\n                </option>\n              ))\n            ),\n          )}\n        </StyledSelect>\n        <Caret>\n          <Icon render=\"caret\" color=\"marzipan\" size={24} />\n        </Caret>\n      </Box>\n    </Field>\n  )\n})\n\nconst resetSelect = css`\n  border: none;\n  border-radius: 0;\n  font-size: 16px;\n  appearance: none; /* remove default arrow */\n  outline: none;\n`\n\ninterface SSelect {\n  error: boolean\n  frontIcon?: string\n  fallbackStyle?: boolean\n}\n\nconst StyledSelect = styled.select<SSelect>`\n  ${resetSelect}\n  width: 100%;\n  height: 32px;\n\n  cursor: pointer;\n  background-color: ${({ fallbackStyle }) =>\n    fallbackStyle ? theme.colors.custard : theme.colors.cream};\n\n  border-radius: 12px;\n  padding: 18px 14px;\n  border: 2px solid\n    ${({ error }) => (error ? theme.colors.strawberry : theme.colors.oatmeal)};\n  height: auto;\n\n  ${({ frontIcon }) =>\n    frontIcon &&\n    frontIcon != '' &&\n    `\n      padding-left: 42px;\n    `}\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  &:hover,\n  &:focus,\n  &:focus-visible,\n  &:checked {\n    border-color: ${({ error }) =>\n      error ? theme.colors.strawberry : theme.colors.marzipan};\n  }\n`\n\nconst Caret = styled.div`\n  position: absolute;\n  z-index: 1;\n  right: 15px;\n  pointer-events: none;\n  color: ${theme.colors.marzipan};\n`\n","import React, { FC, ReactNode } from 'react'\nimport styled from 'styled-components'\n\nimport { Text } from '../Text'\nimport { Box } from '../Box'\nimport { Dropdown, DropdownProps } from './Dropdown'\nimport { noop } from '../utils/noop'\n\nconst days = [\n  {\n    label: 'Monday',\n    value: 'MONDAY',\n  },\n  {\n    label: 'Tuesday',\n    value: 'TUESDAY',\n  },\n  {\n    label: 'Wednesday',\n    value: 'WEDNESDAY',\n  },\n  {\n    label: 'Thursday',\n    value: 'THURSDAY',\n  },\n  {\n    label: 'Friday',\n    value: 'FRIDAY',\n  },\n  {\n    label: 'Saturday',\n    value: 'SATURDAY',\n  },\n  {\n    label: 'Sunday',\n    value: 'SUNDAY',\n  },\n]\n\nconst variationList: DropdownProps[] = [\n  {\n    id: 'days',\n    list: days,\n    placeholder: 'Placeholder',\n    errorMsg: 'This field is required',\n    label: 'Days of the week',\n    onSelect: noop,\n  },\n]\n\nexport const CollectionPage: FC = () => {\n  return (\n    <Box flex direction=\"column\">\n      {variationList.map(\n        ({ id, list, placeholder, errorMsg, label, onSelect }) => {\n          return (\n            <Box key={id} flex direction=\"column\" mb=\"32px\">\n              <Title tag=\"span\" typo=\"header-medium\">\n                Dropdown variations\n              </Title>\n              <Row label=\"Generic\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  placeholder={placeholder}\n                  list={list}\n                  error={false}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"Fallback\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  placeholder={placeholder}\n                  list={list}\n                  fallbackStyle={true}\n                  error={false}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"Disabled\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  placeholder={placeholder}\n                  list={list}\n                  disabled={true}\n                  error={false}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"Leading Icon\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  placeholder={placeholder}\n                  frontIcon=\"iphone\"\n                  list={list}\n                  fallbackStyle={true}\n                  error={false}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"Required\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  required={true}\n                  placeholder={placeholder}\n                  list={list}\n                  error={false}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"Assistive text\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  placeholder={placeholder}\n                  assistiveText=\"Some assistive text\"\n                  list={list}\n                  error={false}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"Completed\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  placeholder={placeholder}\n                  list={list}\n                  error={false}\n                  completed={true}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"As title\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  renderAsTitle={true}\n                  placeholder={placeholder}\n                  list={list}\n                  error={false}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"Error\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  placeholder={placeholder}\n                  assistiveText=\"Some assistive text\"\n                  list={list}\n                  error={true}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n              <Row label=\"Fallback Error\">\n                <Dropdown\n                  id={id}\n                  label={label}\n                  placeholder={placeholder}\n                  assistiveText=\"Some assistive text\"\n                  list={list}\n                  fallbackStyle={true}\n                  error={true}\n                  errorMsg={errorMsg}\n                  onSelect={onSelect}\n                />\n              </Row>\n            </Box>\n          )\n        },\n      )}\n    </Box>\n  )\n}\n\nconst Row: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <RowWrapper mt=\"32px\">\n      <Box width=\"140px\">\n        <Text tag=\"span\" typo=\"label-large\">\n          {label}\n        </Text>\n      </Box>\n      {children}\n    </RowWrapper>\n  )\n}\n\nconst RowWrapper = styled(Box)`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n`\n\nconst LABEL_WIDTH = '140px'\n\nconst Title = styled(Text)`\n  margin-bottom: 12px;\n  font-size: 18px;\n  line-height: 20px;\n  margin-left: ${LABEL_WIDTH};\n`\n"],"names":["Dropdown","forwardRef","idProp","placeholder","name","valueProp","defaultValue","disabled","list","onSelect","error","onInputChange","onBlur","frontIcon","fallbackStyle","fieldProps","ref","value","setValue","useControllableState","id","useUniqueId","hasOptGroups","item","dropdownItemsGroups","useMemo","itemsPerGroupLabel","key","group","jsx","Field","jsxs","Box","StyledFrontIcon","StyledSelect","event","value2","groupItems","i","el","j","Caret","Icon","resetSelect","css","styled","theme","days","variationList","noop","CollectionPage","errorMsg","label","Title","Row","children","RowWrapper","Text","LABEL_WIDTH"],"mappings":"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"}