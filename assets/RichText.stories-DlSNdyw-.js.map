{"version":3,"file":"RichText.stories-DlSNdyw-.js","sources":["../../src/RichText/RichText.tsx","../../src/RichText/storybook/Collection.tsx","../../src/RichText/storybook/Example.tsx","../../src/RichText/storybook/RichText.stories.tsx"],"sourcesContent":["import domPurify from 'dompurify'\nimport React, { ForwardedRef, forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { theme } from '../theme'\nimport { MarginProps } from '../utils/space'\n\nexport interface RichTextProps extends MarginProps {\n  htmlString: string\n}\n\nexport const RichText = forwardRef(function RichText(\n  { htmlString, ...props }: RichTextProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const sanitisedHtml = domPurify.sanitize(htmlString)\n\n  if (!domPurify.isSupported) {\n    return (\n      <Box {...props}>\n        <WarningText>\n          <Icon render=\"warning\" />\n          Your browser is not supported, please upgrade to a newer version\n        </WarningText>\n        {htmlString}\n      </Box>\n    )\n  } else {\n    return (\n      <HtmlBox\n        ref={ref}\n        {...props}\n        dangerouslySetInnerHTML={{ __html: sanitisedHtml }}\n      />\n    )\n  }\n})\n\nconst WarningText = styled(Box)`\n  background-color: ${theme.colors.sherbert};\n  padding: 16px;\n  border-radius: 16px;\n  width: fit-content;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  margin-bottom: 16px;\n`\n\nconst HtmlBox = styled(Box)`\n  * {\n    all: revert;\n  }\n`\n","import React, { FC, ReactNode } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../../Box'\nimport { Text } from '../../Text'\nimport { RichText } from '../RichText'\n\nexport const CollectionPage: FC = () => {\n  return (\n    <Box flex direction=\"column\">\n      <Box flex direction=\"column\" mb=\"32px\">\n        <Title tag=\"span\" typo=\"header-medium\">\n          RichText variations\n        </Title>\n        <Row label=\"Email\">\n          <RichText\n            htmlString={\n              '<div dir=\"ltr\"><div>Testing some features of the rich text viewer. This is an example of an email sent from gmail.<br></div><div><ul><li style=\"margin-left:15px\">bullet</li><li style=\"margin-left:15px\">points<br></li></ul><div><ol><li style=\"margin-left:15px\">numbered</li><li style=\"margin-left:15px\">list</li></ol><div><font size=\"4\">Different</font> <b><i>text</i></b> <u style=\"background-color:rgb(200,200,0)\">formatting</u></div></div></div><div><br></div><span class=\"gmail_signature_prefix\">-- </span><br><div dir=\"ltr\" class=\"gmail_signature\" data-smartmail=\"gmail_signature\"><div dir=\"ltr\"><span style=\"color:rgb(100,100,100);font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif\"><font size=\"4\"><b>Liam Piesley</b></font></span><div style=\"color:rgb(100,100,100);font-family:Roboto,RobotoDraft,Helvetica,Arial,sans-serif;font-size:12.8px\"><div>Software Engineer</div><div>Marshmallow</div><div><a href=\"http://www.marshmallow.com/\" rel=\"noreferrer\" style=\"color:rgb(17,85,204)\" target=\"_blank\">www.marshmallow.com</a></div><div><br></div><div><img src=\"https://i.imgur.com/psgAauI.png\" alt=\"marshmallow-logo\" width=\"200\" height=\"39\" style=\"height: 39px;\"><br></div></div></div></div></div>\\r\\n'\n            }\n          />\n        </Row>\n      </Box>\n    </Box>\n  )\n}\n\nconst Row: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <RowWrapper mt=\"32px\">\n      <Box width=\"140px\">\n        <Text tag=\"span\" typo=\"label-large\">\n          {label}\n        </Text>\n      </Box>\n      {children}\n    </RowWrapper>\n  )\n}\n\nconst RowWrapper = styled(Box)`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n`\n\nconst LABEL_WIDTH = '140px'\n\nconst Title = styled(Text)`\n  margin-bottom: 12px;\n  font-size: 18px;\n  line-height: 20px;\n  margin-left: ${LABEL_WIDTH};\n`\n","import React from 'react'\n\nimport { RichText } from '../RichText'\n\nexport const Example = () => {\n  return (\n    <RichText\n      htmlString={`\n        <h1>H1 Header</h1>\n        <h2>H2 Header</h2>\n        <h3>H3 Header</h3>\n        <h4>H4 Header</h4>\n        <h5>H5 Header</h5>\n        <h6>H6 Header</h6>\n        <hr />\n        <h3>Image</h3>\n        <img src=\"https://www.gstatic.com/webp/gallery/1.sm.webp\" alt=\"mountain-img\" />\n        <h3>Paragraph</h3>\n        <p>Paragraph of text with <b>bold text</b>, <i>italic text</i>, <u>underlined text</u> and a  <a href='https://liamp.uk'>link</a>\n        <h3>List</h3>\n        <ul>\n          <li>Item 1</li>\n          <li>Item 2</li>\n          <li>Item 3</li>\n        </ul>\n        <h3>Table</h3>\n        <table style=\"border-collapse: collapse;\">\n          <tr>\n            <th style=\"padding: 8px; border: 1px solid black;\">heading 1</th>\n            <th style=\"padding: 8px; border: 1px solid black;\">heading 2</th>\n          </tr>\n          <tr>\n            <td style=\"padding: 8px; border: 1px solid black;\">cell 1</td>\n            <td style=\"padding: 8px; border: 1px solid black;\">cell 2</td>\n          </tr>\n          <tr>\n            <td style=\"padding: 8px; border: 1px solid black;\">cell 3</td>\n            <td style=\"padding: 8px; border: 1px solid black;\">cell 4</td>\n          </tr>\n        </table>\n        <h3>Dangerous html</h3>\n        <p><a href='javascript:alert(0)'>sanitised string with dangerous javascript</a></p>\n      `}\n      m=\"16px\"\n    />\n  )\n}\n","import React from 'react'\nimport { RichText, RichTextProps } from '../RichText'\nimport { CollectionPage } from './Collection'\nimport { Example } from './Example'\n\nexport default {\n  title: 'Rich Text',\n  component: RichText,\n}\n\nconst Template = (props: RichTextProps) => <RichText {...props} />\n\nexport const Default = Template.bind({})\n\nDefault.args = {\n  htmlString:\n    '<h1>Header</h1><h2>Subheader</h2><p>A paragraph of text with a <a href=\"https://liamp.uk\">link</a></p>',\n}\n\nexport const Collection = CollectionPage.bind({})\n\nconst WorkingExampleTemplate = () => <Example />\n\nexport const WorkingExample = WorkingExampleTemplate.bind({})\n"],"names":["cov_2rp4ddcx41","path","hash","global","gcv","coverageData","coverage","actualCoverage","RichText","s","forwardRef","htmlString","props","ref","f","sanitisedHtml","domPurify","sanitize","isSupported","b","React","createElement","HtmlBox","dangerouslySetInnerHTML","__html","Box","WarningText","Icon","render","cov_1z2edcolmj","CollectionPage","flex","direction","mb","Title","tag","typo","Row","label","children","cov_cc2g6h1wq","Example","m","RichText_stories","title","component","Template","Default","bind","args","Collection","WorkingExampleTemplate","WorkingExample","parameters","docs","source","originalSource"],"mappings":"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"}