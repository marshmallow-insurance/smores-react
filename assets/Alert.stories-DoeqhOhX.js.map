{"version":3,"file":"Alert.stories-DoeqhOhX.js","sources":["../../src/Alert/Alert.tsx","../../src/Alert/storyboox/Alert.stories.tsx"],"sourcesContent":["import React, { FC, ReactElement, useState } from 'react'\nimport styled, { css, useTheme } from 'styled-components'\n\nimport { MarginProps } from 'utils/space'\nimport { NewColor, resolveToThemeColor } from '../ThemeProvider/utils/colourMap'\n\nimport { Box } from '../Box'\nimport { IconStrict } from '../IconStrict'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { Icons } from '../Icon/iconsList'\nimport { Button } from '../Button'\nimport { Link } from '../Link'\n\ntype AlertType = 'info' | 'fallback' | 'notice' | 'negative' | 'positive'\n\ntype CtaProps =\n  | {\n      ctaType: 'button'\n      ctaAction: () => void\n      ctaLabel: string\n    }\n  | {\n      ctaType: 'link'\n      ctaAction: string\n      ctaLabel: string\n    }\n  | {\n      ctaType?: undefined\n      ctaAction?: undefined\n      ctaLabel?: undefined\n    }\n\ntype AlertProps = {\n  type?: AlertType\n  title?: string\n  message: string | ReactElement<unknown>\n  isDismissible?: boolean\n  maxWidth?: string\n} & CtaProps &\n  MarginProps\n\ntype AlertTypeConfig = {\n  backgroundColor: NewColor\n  accentColor: NewColor\n  icon: Icons\n}\n\nconst typeConfig: Record<AlertType, AlertTypeConfig> = {\n  info: {\n    backgroundColor: 'color.feedback.informative.100',\n    accentColor: 'color.feedback.informative.200',\n    icon: 'circle-info-filled',\n  },\n  fallback: {\n    backgroundColor: 'color.surface.base.100',\n    accentColor: 'color.surface.base.400',\n    icon: 'circle-info-filled',\n  },\n  notice: {\n    backgroundColor: 'color.feedback.notice.100',\n    accentColor: 'color.feedback.notice.200',\n    icon: 'triangle-exclamation-solid',\n  },\n  negative: {\n    backgroundColor: 'color.feedback.negative.100',\n    accentColor: 'color.feedback.negative.200',\n    icon: 'warning-circle',\n  },\n  positive: {\n    backgroundColor: 'color.feedback.positive.100',\n    accentColor: 'color.feedback.positive.200',\n    icon: 'included',\n  },\n}\n\nexport const Alert: FC<AlertProps> = ({\n  type = 'info',\n  title,\n  message,\n  isDismissible = false,\n  ctaType,\n  ctaAction,\n  ctaLabel,\n  maxWidth = '512px',\n  ...marginProps\n}) => {\n  const theme = useTheme()\n\n  const backgroundColor = resolveToThemeColor(\n    typeConfig[type].backgroundColor,\n    theme,\n  )\n  const accentColor = resolveToThemeColor(typeConfig[type].accentColor, theme)\n  const [alertClosed, setAlertClosed] = useState(false)\n\n  return (\n    <StyledAlert\n      $backgroundColor={backgroundColor}\n      $accentColor={accentColor}\n      $alertClosed={alertClosed}\n      $maxWidth={maxWidth}\n      {...marginProps}\n    >\n      <Icon\n        render={typeConfig[type].icon}\n        size={16}\n        m={{ custom: 2 }}\n        color=\"liquorice\"\n      />\n      <Box\n        flex\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"flex-start\"\n        width=\"100%\"\n        gap=\"8px\"\n      >\n        <Box maxWidth=\"512px\">\n          {title && (\n            <Text mb={{ custom: '4px' }} typo=\"headline-regular\">\n              {title}\n            </Text>\n          )}\n          {typeof message === 'string' ? (\n            <Text typo=\"body-small\" mb={ctaType && '8px'}>\n              {message}\n            </Text>\n          ) : (\n            message\n          )}\n          {ctaType === 'button' && typeof ctaAction === 'function' && (\n            <Button smallButton fallbackStyle onClick={() => ctaAction()}>\n              {ctaLabel}\n            </Button>\n          )}\n          {ctaType === 'link' && typeof ctaAction === 'string' && (\n            <Link href={ctaAction}>{ctaLabel}</Link>\n          )}\n        </Box>\n        {isDismissible && (\n          <IconStrict\n            render=\"cross\"\n            size={16}\n            color=\"liquorice\"\n            onClick={() => setAlertClosed(true)}\n          />\n        )}\n      </Box>\n    </StyledAlert>\n  )\n}\n\ninterface IStyledAlert {\n  $backgroundColor: string\n  $accentColor: string\n  $alertClosed: boolean\n  $maxWidth?: string\n}\n\nconst StyledAlert = styled(Box)<IStyledAlert>(\n  ({ $backgroundColor, $accentColor, $alertClosed, $maxWidth }) => css`\n    display: flex;\n    width: 100%;\n    max-width: ${$maxWidth};\n    min-width: min-content;\n    padding: 12px 12px 12px 20px;\n    align-items: flex-start;\n    gap: 8px;\n    border-radius: 8px 16px 16px 8px;\n    background: ${$backgroundColor};\n    position: relative;\n    display: ${$alertClosed ? 'none' : 'flex'};\n\n    &:before {\n      width: 8px;\n      height: 100%;\n      position: absolute;\n      background: ${$accentColor};\n      content: '';\n      top: 0;\n      left: 0;\n      border-radius: 16px 0 0 16px;\n    }\n  `,\n)\n","import type { Meta, StoryObj } from '@storybook/react'\nimport { Alert } from '../Alert'\nimport React from 'react'\nimport { Link } from '../../Link'\nimport { Text } from '../../Text'\n\nconst Meta = {\n  title: 'Alert',\n  component: Alert,\n  args: {\n    message: 'This is an alert message',\n    type: 'info',\n  },\n  argTypes: {\n    type: {\n      control: 'select',\n      options: ['info', 'fallback', 'notice', 'positive', 'negative'],\n    },\n    ctaType: {\n      control: 'radio',\n      options: ['button', 'link', undefined],\n    },\n    ctaLabel: { control: 'text' },\n    ctaAction: { control: 'object' },\n  },\n} as Meta<typeof Alert>\n\nexport default Meta\n\ntype Story = StoryObj<typeof Alert>\n\nexport const Info: Story = {\n  args: {\n    type: 'info',\n    title: 'Information Alert',\n    message: 'This is an info alert message.',\n    isDismissible: true,\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const Fallback: Story = {\n  args: {\n    type: 'fallback',\n    title: 'Fallback Alert',\n    message: 'This is a fallback alert message.',\n    isDismissible: true,\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const Notice: Story = {\n  args: {\n    type: 'notice',\n    title: 'Notice Alert',\n    message: 'This is a notice alert message.',\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const Negative: Story = {\n  args: {\n    type: 'negative',\n    title: 'Negative Alert',\n    message: 'This is a negative alert message.',\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const Positive: Story = {\n  args: {\n    type: 'positive',\n    title: 'Positive Alert',\n    message: 'This is a positive alert message.',\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const WithButtonCTA: Story = {\n  args: {\n    type: 'info',\n    title: 'Alert with Button CTA',\n    message: 'This alert has a call-to-action button.',\n    ctaType: 'button',\n    ctaLabel: 'Click Me',\n    ctaAction: () => alert('Button CTA clicked!'),\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const WithLinkCTA: Story = {\n  args: {\n    type: 'info',\n    title: 'Alert with Link CTA',\n    message: 'This alert has a call-to-action link.',\n    ctaType: 'link',\n    ctaLabel: 'Visit Marshmallow',\n    ctaAction: 'https://marshmallow.com',\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const WithLongerMessage: Story = {\n  args: {\n    type: 'notice',\n    title: 'Alert with Longer Message and Max Width of 100%',\n    message:\n      'This is a longer alert message to demonstrate how the alert component handles more text content. The Text container has a max-width of 512px, even if the component width is flexible. It should properly wrap and maintain readability across different screen sizes.',\n    maxWidth: '100%',\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const WithReactNode: Story = {\n  args: {\n    type: 'notice',\n    title: 'Alert with React Element Message',\n    message: (\n      <Text>\n        Custom react element, with a <Link href={''}>Link</Link>\n      </Text>\n    ),\n  },\n  render: (args) => <Alert {...args} />,\n}\n\nexport const WithoutTitle: Story = {\n  args: {\n    type: 'info',\n    message: 'This alert does not have a title.',\n  },\n  render: (args) => <Alert {...args} />,\n}\n"],"names":["cov_1e9r91fbnh","actualCoverage","info","typeConfig","backgroundColor","accentColor","icon","fallback","notice","negative","positive","Alert","title","message","isDismissible","ctaType","ctaAction","ctaLabel","maxWidth","marginProps","useTheme","resolveToThemeColor","type","theme","setAlertClosed","useState","StyledAlert","$accentColor","$alertClosed","alertClosed","$maxWidth","render","Icon","size","m","custom","color","flex","React","Box","direction","justifyContent","alignItems","width","gap","mb","Text","typo","smallButton","Button","fallbackStyle","onClick","s","href","IconStrict","$backgroundColor","styled","Meta","component","args","argTypes","control","options","undefined","Info","Fallback","Notice","Negative","Positive","WithButtonCTA","alert","WithLinkCTA","WithLongerMessage","WithReactNode","Link","WithoutTitle","parameters","docs","source","originalSource"],"mappings":"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"}