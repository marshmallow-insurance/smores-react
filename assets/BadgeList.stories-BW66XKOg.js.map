{"version":3,"file":"BadgeList.stories-BW66XKOg.js","sources":["../../src/BadgeList/BadgeList.tsx","../../src/BadgeList/BadgeList.stories.tsx"],"sourcesContent":["import React from 'react'\nimport { Badge, BadgeSize, type BadgeProps } from '../Badge/Badge'\nimport styled from 'styled-components'\nimport { Tooltip } from '../Tooltip'\nimport type { TooltipProps } from '../Tooltip/Tooltip'\nimport { Text } from '../Text'\nimport { theme } from '../theme'\n\ntype WithTooltip = Pick<TooltipProps, 'title' | 'content'> & {\n  position?: TooltipProps['position']\n}\n\nexport type BadgeListBadge = BadgeProps & { tooltip?: WithTooltip }\n\ntype Props = {\n  size?: BadgeProps['size']\n  limit?: number\n  badges: Omit<BadgeListBadge, 'zIndex'>[]\n}\n\n/**\n * ### A list of badges with optional tooltips\n *\n * @param limit - The maximum number of badges to display. If the number of badges exceeds the limit, a badge will be displayed indicating the number of hidden excess badges.\n *\n */\nexport function BadgeList({ badges, limit, size = BadgeSize.Lg }: Props) {\n  const badgeZIndexMax = badges.length\n  const limitExcess =\n    // TODO: off by one adjustments work, just hard to read, refactor for human eyes 👁️👄👁️\n    limit && (badges.length > limit ? badges.length - limit : 0)\n\n  const maxBadges = limit ? limit - 1 : undefined\n  const showExcessBadge = limitExcess !== undefined && Boolean(limitExcess)\n\n  return (\n    <Container $size={size}>\n      {badges\n        .slice(0, limitExcess ? maxBadges : undefined)\n        .map((badge, index) => (\n          <WithTooltip\n            key={typeof badge.src === 'string' ? badge.src : index}\n            badge={{\n              ...badge,\n              zIndex: badgeZIndexMax - index,\n              size,\n            }}\n          />\n        ))}\n\n      {showExcessBadge && (\n        <div\n          className=\"limit-badge\"\n          style={{ zIndex: badgeZIndexMax, marginLeft: '4px' }}\n        >\n          <Badge\n            title={`+${limitExcess}`}\n            borderColour=\"oatmeal\"\n            size={size}\n            src={<ExcessBadge excess={limitExcess + 1} />}\n            disabled\n          />\n        </div>\n      )}\n    </Container>\n  )\n}\n\ntype ExcessBadgeProps = {\n  excess: number\n}\n\nfunction ExcessBadge({ excess }: ExcessBadgeProps) {\n  return (\n    <ExcessBadgeContainer>\n      <Text typo=\"caption\" style={{ fontWeight: 'bold' }}>\n        +{excess}\n      </Text>\n    </ExcessBadgeContainer>\n  )\n}\n\nconst ExcessBadgeContainer = styled.div`\n  display: flex;\n  align-items: center;\n  place-content: center;\n  width: 100%;\n  height: 100%;\n  background-color: ${theme.colors.oatmeal};\n  pointer-events: none;\n`\n\ntype WithTooltipProps = {\n  badge: BadgeListBadge\n}\n\nconst WithTooltip = ({ badge: { tooltip, ...badge } }: WithTooltipProps) => {\n  if (tooltip) {\n    return (\n      <div style={{ zIndex: badge.zIndex }}>\n        <Tooltip\n          position={tooltip.position ?? 'bottom'}\n          title={tooltip?.title}\n          content={tooltip.content}\n        >\n          <Badge {...badge} />\n        </Tooltip>\n      </div>\n    )\n  }\n\n  return (\n    <div style={{ zIndex: badge.zIndex }}>\n      <Badge {...badge} />\n    </div>\n  )\n}\n\nconst marginRightMapping = {\n  [BadgeSize.Lg]: '-18px',\n  [BadgeSize.Md]: '-14px',\n  [BadgeSize.Sm]: '-11px',\n} satisfies Record<BadgeSize, string>\n\nconst Container = styled.div<{ $size: BadgeSize }>`\n  display: flex;\n\n  > * {\n    transition:\n      margin 0.2s ease-in-out,\n      padding 0.2s ease-in-out;\n    margin-right: ${(props) => marginRightMapping[props.$size]};\n\n    &:hover:not(:first-child):not(.limit-badge) {\n      padding-left: 10px;\n      &:not(:last-child) {\n        padding-right: 5px;\n      }\n    }\n  }\n`\n","import { Meta, StoryObj } from '@storybook/react'\nimport { BadgeList } from './BadgeList'\nimport { BadgeSize } from '../Badge/Badge'\nimport { getExampleImg } from '../Badge/storybook/exampleImg'\n\nconst meta: Meta<typeof BadgeList> = {\n  title: 'BadgeList',\n  component: BadgeList,\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof BadgeList>\n\nconst createTemplateBadge = () => {\n  const { name, src } = getExampleImg()\n\n  return {\n    src,\n    title: name,\n    tooltip: {\n      title: 'This is a tooltip',\n      content: 'This is the content of the tooltip',\n    },\n  }\n}\n\nexport const Primary: Story = {\n  args: {\n    badges: [\n      createTemplateBadge(),\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n    ],\n  },\n}\n\nexport const MediumSize: Story = {\n  args: {\n    size: BadgeSize.Md,\n    badges: [\n      createTemplateBadge(),\n      createTemplateBadge(),\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n    ],\n  },\n}\n\nexport const SmallSize: Story = {\n  args: {\n    size: BadgeSize.Sm,\n    badges: [\n      createTemplateBadge(),\n      createTemplateBadge(),\n      createTemplateBadge(),\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n    ],\n  },\n}\n\nexport const BadgeFallback: Story = {\n  args: {\n    limit: 5,\n    badges: [\n      { ...createTemplateBadge(), src: '' },\n      { ...createTemplateBadge(), src: 'example/404.jpg' },\n      createTemplateBadge(),\n      createTemplateBadge(),\n      createTemplateBadge(),\n      createTemplateBadge(),\n    ],\n  },\n}\n\nexport const BadgeLimit: Story = {\n  args: {\n    limit: 4,\n    badges: [\n      createTemplateBadge(),\n      { ...createTemplateBadge() },\n      { ...createTemplateBadge() },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n      { ...createTemplateBadge(), disabled: true },\n    ],\n  },\n}\n"],"names":["cov_1g2y71trl3","actualCoverage","BadgeList","limit","size","BadgeSize","badgeZIndexMax","limitExcess","maxBadges","badges","showExcessBadge","f","badge","index","s","React","WithTooltip","zIndex","className","style","marginLeft","Badge","borderColour","src","ExcessBadge","disabled","excess","ExcessBadgeContainer","Text","fontWeight","tooltip","position","title","content","marginRightMapping","Md","Sm","props","meta","component","createTemplateBadge","name","getExampleImg","Primary","args","MediumSize","SmallSize","BadgeFallback","BadgeLimit","parameters","docs","source","originalSource"],"mappings":"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"}