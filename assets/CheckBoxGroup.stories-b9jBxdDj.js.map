{"version":3,"file":"CheckBoxGroup.stories-b9jBxdDj.js","sources":["../../src/CheckBoxGroup/CheckBoxGroup.tsx","../../src/CheckBoxGroup/storybook/CheckBoxGroup.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../Box'\nimport { CheckBox } from '../CheckBox'\nimport { MarginProps } from '../utils/space'\n\ntype Item = {\n  id: number\n  label: string\n  checked: boolean\n  value?: string | number\n}\n\ntype CheckBoxGroupProps = {\n  list: Item[]\n  onToggle: (id: number) => void\n  isColumn?: boolean\n} & MarginProps\n\nexport const CheckBoxGroup: FC<CheckBoxGroupProps> = ({\n  list,\n  onToggle,\n  isColumn = true,\n  ...marginProps\n}) => (\n  <Container isColumn={isColumn}>\n    {list.map((item) => (\n      <CheckBox\n        key={item.id}\n        id={String(item.id)}\n        checked={item.checked}\n        toggle={() => onToggle(item.id)}\n        {...marginProps}\n      >\n        {item.label}\n      </CheckBox>\n    ))}\n  </Container>\n)\n\nconst Container = styled(Box)<{ isColumn: boolean }>`\n  display: flex;\n  flex-direction: ${(p) => (p.isColumn ? 'column' : 'row')};\n  gap: 16px;\n`\n","import React, { useState } from 'react'\nimport { CheckBoxGroup } from '../../CheckBoxGroup'\n\nconst options = [\n  {\n    id: 0,\n    label: 'Apples',\n    checked: false,\n  },\n  {\n    id: 1,\n    label: 'Oranges',\n    checked: false,\n  },\n  {\n    id: 2,\n    label: 'Grapes',\n    checked: false,\n  },\n  {\n    id: 3,\n    label: 'Bananas',\n    checked: false,\n  },\n]\n\nconst Group = () => {\n  const [list, setList] = useState(options)\n\n  const toggleCheck = (id: number) => {\n    const newList = [...list]\n    newList[id].checked = !list[id].checked\n\n    setList(newList)\n  }\n\n  return <CheckBoxGroup list={list} onToggle={toggleCheck} />\n}\n\nexport default {\n  title: 'Checkbox Group',\n  component: CheckBoxGroup,\n}\n\nconst Template = () => <Group />\n\nexport const Default = Template.bind({})\n"],"names":["CheckBoxGroup","list","onToggle","isColumn","cov_1glagmkg2y","b","marginProps","options","id","label","checked","Group","setList","useState","toggleCheck","newList","React","CheckBoxGroup_stories","title","component","Template","Default","bind","parameters","docs","source","originalSource"],"mappings":"2hHAyCM,MAAAA,EAAsBA,CAAA,CAAAC,KAAAA,EAAAC,SAAAA,EAE8BC,SAAAA,GAAAC,EAAA,EAAAC,EAAA,CAAA,EAAA,CAAA,IAAA,IAAA,GAAAC;;;;;;;;;sqXCxC1D,MAAMC,EAAU,CACd,CACEC,GAAI,EACJC,MAAO,SACPC,QAAS,EACX,EACA,CACEF,GAAI,EACJC,MAAO,UACPC,QAAS,EACX,EACA,CACEF,GAAI,EACJC,MAAO,SACPC,QAAS,EACX,EACA,CACEF,GAAI,EACJC,MAAO,UACPC,QAAS,EACX,CAAC,EAGGC,EAAQA,IAAM,CAClB,KAAM,CAACV,EAAMW,CAAO,EAAIC,WAASN,CAAO,EAElCO,EAAeN,GAAe,CAC5BO,MAAAA,EAAU,CAAC,GAAGd,CAAI,EACxBc,EAAQP,CAAE,EAAEE,QAAU,CAACT,EAAKO,CAAE,EAAEE,QAEhCE,EAAQG,CAAO,CAAA,EAGjB,OAAQC,EAAA,cAAAhB,EAAA,CAAc,KAAAC,EAAY,SAAUa,CAAe,CAAA,CAC7D,EAEAG,EAAA,CACEC,MAAO,iBACPC,UAAWnB,CAAa,EAGpBoB,EAAWA,IAAMJ,EAAA,cAACL,EAAQ,IAAA,EAEnBU,EAAUD,EAASE,KAAK,EAAE,YAACD,EAAAE,WAAA,CAAA,GAAAF,EAAAE,WAAAC,KAAA,CAAA,IAAAH,EAAAA,EAAAE,aAAAF,YAAAA,EAAAG,KAAAC,OAAA,CAAAC,eAAA,kBAAA,IAAAL,GAAAA,EAAAA,EAAAE,aAAAF,YAAAA,EAAAG,OAAAH,YAAAA,EAAAI,MAAA,CAAA,CAAA"}