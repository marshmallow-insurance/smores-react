{"version":3,"file":"CheckBox-Dnx3ivqx.js","sources":["../../src/CheckBox/CheckBox.tsx"],"sourcesContent":["import React, { forwardRef, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { focusOutline } from '../utils/focusOutline'\n\nimport { Text } from '../Text'\nimport { theme } from '../theme'\nimport { useUniqueId } from '../utils/id'\n\nexport type CheckBoxProps = {\n  id?: string\n  checked: boolean\n  children: ReactNode\n  toggle: () => void\n  error?: boolean\n  errorMsg?: string\n}\n\nexport const CheckBox = forwardRef<HTMLInputElement, CheckBoxProps>(\n  function CheckBox(\n    { id: idProp, checked, children, toggle, error, errorMsg },\n    ref,\n  ) {\n    const id = useUniqueId(idProp)\n    return (\n      <>\n        <BoxContainer id={id}>\n          <Text\n            tag=\"span\"\n            typo=\"base\"\n            color={error ? 'strawberry' : 'liquorice'}\n          >\n            {children}\n          </Text>\n\n          <input\n            ref={ref}\n            type=\"checkbox\"\n            checked={checked}\n            onChange={toggle}\n          />\n          <Checkmark $error={error} />\n        </BoxContainer>\n        {error && errorMsg && <ErrorBox>{errorMsg}</ErrorBox>}\n      </>\n    )\n  },\n)\n\nconst Checkmark = styled.span<{ $error?: boolean }>`\n  position: absolute;\n  left: 0;\n  width: 24px;\n  height: 24px;\n  border: ${({ $error }) =>\n    $error\n      ? `solid 2px ${theme.colors.strawberry}`\n      : `solid 2px ${theme.colors.liquorice}`};\n  box-sizing: border-box;\n  border-radius: 1px;\n\n  &:before {\n    content: '';\n    position: absolute;\n    display: none;\n    top: 9px;\n    left: 5px;\n    width: 3px;\n    height: 8px;\n    border-radius: 4px;\n    background-color: ${theme.colors.cream};\n    -webkit-transform: rotate(316deg);\n    -ms-transform: rotate(316deg);\n    transform: rotate(316deg);\n  }\n\n  &:after {\n    content: '';\n    position: absolute;\n    display: none;\n    top: 3px;\n    left: 11px;\n    width: 3px;\n    height: 15px;\n    border-radius: 4px;\n    background-color: ${theme.colors.cream};\n    -webkit-transform: rotate(43deg);\n    -ms-transform: rotate(43deg);\n    transform: rotate(43deg);\n  }\n`\n\nconst BoxContainer = styled.label`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  padding-left: 32px;\n  user-select: none;\n  cursor: pointer;\n\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    background-color: ${theme.colors.cream};\n\n    &:checked ~ ${Checkmark} {\n      background-color: ${theme.colors.liquorice};\n      border: solid 2px ${theme.colors.liquorice};\n    }\n\n    &:checked ~ ${Checkmark}:before {\n      display: block;\n    }\n\n    &:checked ~ ${Checkmark}:after {\n      display: block;\n    }\n\n    ${focusOutline({ selector: `&:focus-visible ~ ${Checkmark}` })}\n  }\n\n  &:hover {\n    ${Checkmark} {\n      background-color: ${theme.colors.coconut};\n      border: solid 2px ${theme.colors.liquorice};\n    }\n  }\n\n  @media (min-width: 768px) {\n    padding-left: 32px;\n  }\n\n  span {\n    border-radius: 6px;\n  }\n`\n\nconst ErrorBox = styled.span`\n  padding-top: 8px;\n  font-size: 12px;\n  color: ${theme.colors.strawberry};\n`\n"],"names":["cov_1yb30oby34","path","hash","global","gcv","coverageData","coverage","actualCoverage","CheckBox","s","forwardRef","id","idProp","checked","children","toggle","error","errorMsg","ref","f","useUniqueId","React","createElement","Fragment","BoxContainer","Text","tag","typo","color","b","type","onChange","Checkmark","$error","ErrorBox","styled","span","theme","colors","strawberry","liquorice","cream","label"],"mappings":"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"}