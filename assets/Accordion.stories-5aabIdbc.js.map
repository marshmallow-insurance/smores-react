{"version":3,"file":"Accordion.stories-5aabIdbc.js","sources":["../../src/Accordion/Accordion.tsx","../../src/Accordion/storybook/Collection.tsx"],"sourcesContent":["import React, { FC, ReactNode, useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { theme } from '../theme'\nimport { MarginProps } from '../utils/space'\n\nexport type AccordionProps = {\n  title: string\n  subTitle?: string\n  filledBackground?: boolean\n  borderTop?: boolean\n  borderColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  fullBorder?: boolean\n  backgroundColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  onToggle?: (isOpen: boolean) => void\n  children: ReactNode\n  defaultIsOpen?: boolean\n} & MarginProps\n\nexport const Accordion: FC<AccordionProps> = ({\n  title,\n  children,\n  onToggle,\n  filledBackground,\n  defaultIsOpen = false,\n  borderTop = false,\n  borderColor = 'oatmeal',\n  backgroundColor = 'custard',\n  subTitle,\n  fullBorder = false,\n  ...marginProps\n}) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const px = fullBorder ? '16px' : '0'\n\n  const handleToggle = () => {\n    const nextOpenState = !isOpen\n    onToggle?.(nextOpenState)\n    setIsOpen(nextOpenState)\n  }\n\n  return (\n    <Wrapper\n      $borderTop={borderTop}\n      $fullBorder={fullBorder}\n      $filledBackground={filledBackground}\n      $borderColor={borderColor}\n      $backgroundColor={backgroundColor}\n      {...marginProps}\n    >\n      <TopContainer\n        flex\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        onClick={handleToggle}\n        py=\"16px\"\n        pr=\"16px\"\n        pl={px}\n      >\n        <TitleContainer>\n          <Text tag=\"h2\" typo=\"headline-regular\" color=\"liquorice\">\n            {title}\n          </Text>\n          {subTitle && (\n            <Text tag=\"label\" color=\"liquorice\" typo=\"label\" mt={{ custom: 4 }}>\n              {subTitle}\n            </Text>\n          )}\n        </TitleContainer>\n\n        <CaretIcon\n          render=\"caret\"\n          size={24}\n          color=\"marzipan\"\n          $isOpen={isOpen}\n          $borderTop={borderTop}\n        />\n      </TopContainer>\n      {isOpen && (\n        <Box pt=\"12px\" pb=\"16px\" px={px}>\n          {children}\n        </Box>\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)<\n  TransientProps<\n    Pick<\n      AccordionProps,\n      | 'borderTop'\n      | 'fullBorder'\n      | 'filledBackground'\n      | 'borderColor'\n      | 'backgroundColor'\n    >\n  >\n>(\n  ({\n    $borderTop,\n    $fullBorder,\n    $filledBackground,\n    $borderColor = 'oatmeal',\n    $backgroundColor = 'custard',\n  }) => css`\n    border-bottom: 1px solid ${theme.colors[$borderColor]};\n    ${$borderTop && `border-top: 1px solid ${theme.colors[$borderColor]};`}\n\n    ${$fullBorder &&\n    css`\n      border: 1px solid ${theme.colors[$borderColor]};\n      border-radius: 16px;\n    `}\n\n    ${$filledBackground &&\n    css`\n      background-color: ${theme.colors[$backgroundColor]};\n    `}\n  `,\n)\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst TopContainer = styled(Box)`\n  cursor: pointer;\n`\n\nconst CaretIcon = styled(Icon)<\n  TransientProps<Pick<AccordionProps, 'borderTop'>> & { $isOpen: boolean }\n>(\n  ({ $isOpen }) => css`\n    transform: ${$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n    transition: transform 0.6s ease;\n  `,\n)\n","import React, { FC, ReactNode } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../../Box'\nimport { Text } from '../../Text'\nimport { Accordion, AccordionProps } from '../Accordion'\n\nconst accordionList: Array<AccordionProps> = [\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    subTitle: 'subtitle',\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    filledBackground: true,\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    subTitle: 'subtitle',\n    filledBackground: true,\n  },\n]\n\nexport const CollectionPage: FC = () => {\n  return (\n    <Wrapper>\n      <Section label=\"Default\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} />\n        ))}\n      </Section>\n      <Section label=\"Border Top\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} borderTop={true} />\n        ))}\n      </Section>\n      <Section label=\"Full Border\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} fullBorder={true} />\n        ))}\n      </Section>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 40px;\n  width: 100%;\n`\n\nconst Section: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <Box width=\"100%\" mb=\"16px\">\n      <Box mb=\"16px\">\n        <Text tag=\"span\" typo=\"header-small\">\n          {label}\n        </Text>\n      </Box>\n      <Column>{children}</Column>\n    </Box>\n  )\n}\n\nconst Column = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`\n"],"names":["cov_9t57suemo","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","Accordion","title","children","onToggle","filledBackground","defaultIsOpen","b","borderTop","borderColor","backgroundColor","subTitle","fullBorder","marginProps","f","isOpen","setIsOpen","useState","px","handleToggle","nextOpenState","React","createElement","Wrapper","$borderTop","$fullBorder","$filledBackground","$borderColor","$backgroundColor","TopContainer","flex","alignItems","justifyContent","onClick","py","pr","pl","TitleContainer","Text","tag","typo","color","mt","custom","CaretIcon","render","size","$isOpen","Box","pt","pb","styled","cov_1qmm6dom8b","accordionList","CollectionPage","Section","label","map","props","index","key"],"mappings":"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KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA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AAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,eAAA,CAAA,QAAA,EAAA,KAAA,KAAA,QAAA,CAAA,oFAAA,EAAA,MAAA,CAAA,EAAA,SAAA,g+BAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAE,EAAAD,EAAAL,CAAA,EAAA2D,OAAAA,EAAA,UAAA,CAAA,OAAArD,CAAA,EAAAA,CAAAqD,CAAAA,EAlBA,EAQA,MAAAC,GAAAD,EAAA,EAAApD,EACA,CAAA,IAAA,CAAA,CACAG,SAAA,+DACAD,MACA,cAAA,EACA,CACAC,SACAD,+DAAAA,qBACAS,SAAA,UACA,EACA,CACAR,SAAA,+DACAD,MAAA,eACAG,iBAAA,EACA,EACA,CACAF,SAAA,+DACAD,MACAS,eAAAA,SAEAN,WAAAA,iBAEA,EAAA,CAAA,GACA+C,EAAA,EAAApD,EAAA,CAAA,IAqBAsD,MAAAA,EAAAA,KAAAF,EAAA,EAAAtC,EAAA,CAAA,IAAAsC,EAAA,EAAApD,EAAA,CAAA,IAAAqB,EAAAC,cAAAC,EAAA,KAAAF,EAAAC,cAAAiC,EAAA,CAAAC,MAAA,SAAA,EAAAH,EAAAI,IAAAC,CAAAA,EAAAC,KAAAP,EAAA,EAAAtC,EAAA,CAAA,IAAAsC,IAAApD,EAAA,CAAA,IAAAqB,EAAAC,cAAArB,EAAA2D,CAAAA,IAAAD,EAAA,GAAAD,CAAA,CAAA,EAAA,CAQA,EAAArC,EAAAC,cAAAiC,EAAA,CAAAC,MAAA,YAAA,EACAH,EAAAI,IAAA,CAAAC,EAAAC,KAEAP,EAAA,EAAAtC,EAAAsC,CAAAA,IAAAA,EAAApD,EAAAA,EAAAqB,CAAAA,IAAAA,EAAAC,cAAArB,EAAA,CAAA2D,IAAAD,EAAA,GAAAD,EAAAlD,UAAA,EAAA,CAAA,EACA,CAUA,EAEAa,EAAAC,cAAAiC,EAAAC,CAAAA,MAAAH,aAAAA,EAAAA,EAAAI,KAAAC,EAAAC,KAAAP,IAAAtC,EAAAsC,CAAAA,IAAAA,EAAApD,EAAAA,EAAAqB,CAAAA,IAAAA,EAAAC,cAAArB,EAAA,CAAA2D,IAAAD,EAAA,GAAAD,EAAA9C,WAAA,EAAA,CAAA,EAAA,CAAA;;;;;;;;;;;;"}