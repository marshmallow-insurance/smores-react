{"version":3,"file":"Textarea.stories-9716f4da.js","sources":["../../src/Textarea/Textarea.tsx","../../src/Textarea/Container.tsx"],"sourcesContent":["import React, { FocusEvent, FormEvent, ForwardedRef, forwardRef } from 'react'\nimport styled from 'styled-components'\n\nimport { theme } from '../theme'\nimport { useUniqueId } from '../utils/id'\nimport { Field } from '../fields/Field'\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\nimport { MarginProps } from '../utils/space'\n\ntype BaseProps = {\n  id?: string\n  placeholder?: string\n  name?: string\n  value: string\n  error?: boolean\n  errorMsg?: string\n  resize?: 'none' | 'both'\n  disabled?: boolean\n  maxLength?: number\n  onBlur?: (e: FocusEvent<HTMLTextAreaElement>) => void\n  rows?: number\n  fallbackStyle?: boolean\n} & CommonFieldProps &\n  MarginProps\n\ntype TruncateProps =\n  | {\n      onChange: (e: string) => void\n      onInputChange?: (e: FormEvent<HTMLTextAreaElement>) => void\n    }\n  | {\n      onChange?: (e: string) => void\n      onInputChange: (e: FormEvent<HTMLTextAreaElement>) => void\n    }\n\nexport type TextareaProps = BaseProps & TruncateProps\n\nexport const Textarea = forwardRef(function Textarea(\n  {\n    id: idProp,\n    name,\n    value,\n    onChange,\n    onInputChange,\n    resize = 'none',\n    error = false,\n    placeholder,\n    disabled = false,\n    maxLength,\n    onBlur,\n    rows = 4,\n    fallbackStyle,\n    ...fieldProps\n  }: TextareaProps,\n  ref: ForwardedRef<HTMLTextAreaElement>,\n) {\n  const id = useUniqueId(idProp)\n  return (\n    <Field {...fieldProps} htmlFor={id} error={error}>\n      <StyledTextArea\n        ref={ref}\n        error={error}\n        id={id}\n        name={name}\n        disabled={disabled}\n        resize={resize}\n        fallbackStyle={fallbackStyle}\n        placeholder={placeholder}\n        value={value}\n        onChange={(e: FormEvent<HTMLTextAreaElement>) => {\n          onChange?.(e.currentTarget.value)\n          onInputChange?.(e)\n        }}\n        maxLength={maxLength}\n        onBlur={onBlur}\n        rows={rows}\n      />\n    </Field>\n  )\n})\n\ninterface TextArea {\n  resize: 'none' | 'both'\n  disabled: boolean\n  error: boolean\n  value: string\n  fallbackStyle?: boolean\n}\n\nconst StyledTextArea = styled.textarea<TextArea>`\n  font-size: 16px;\n  font: inherit;\n  line-height: 20px;\n  background: ${({ fallbackStyle }) =>\n    fallbackStyle ? theme.colors.custard : theme.colors.cream};\n  border: 2px solid ${theme.colors.oatmeal};\n  box-sizing: border-box;\n  border-radius: 12px;\n  width: 100%;\n  padding: 18px 14px;\n  color: ${theme.colors.liquorice};\n  resize: ${({ resize }) => resize};\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'text')};\n  opacity: ${({ disabled }) => (disabled ? '0.5' : '1')};\n  border-color: ${({ error }) =>\n    theme.colors[`${error ? 'strawberry' : 'oatmeal'}`]};\n  outline: none;\n\n  &:hover,\n  &:focus,\n  &:focus-visible {\n    border-color: ${({ error }) =>\n      error ? theme.colors.strawberry : theme.colors.marzipan};\n  }\n`\n","import React, { useState } from 'react'\n\nimport { Textarea } from './Textarea'\n\nexport const Container = () => {\n  const [value, setValue] = useState('')\n\n  return (\n    <form>\n      <Textarea\n        id=\"textarea_id\"\n        label=\"Textarea label\"\n        value={value}\n        resize=\"both\"\n        onChange={setValue}\n        assistiveText=\"This is some assistive text\"\n        disabled={false}\n        error={value.length > 255}\n        errorMsg={`Your text is ${value.length} characters long. The maximum is 255 characters. Please make it shorter`}\n        placeholder=\"Here is some placeholder text.\"\n      />\n    </form>\n  )\n}\n"],"names":["Textarea","forwardRef","idProp","name","value","onChange","onInputChange","resize","error","placeholder","disabled","maxLength","onBlur","rows","fallbackStyle","fieldProps","ref","id","useUniqueId","jsx","Field","StyledTextArea","e","styled","theme","Container","setValue","useState"],"mappings":"gcAqCO,MAAAA,EAAAC,EAAAA,WAAA,SAAA,CACL,GAAAC,EACM,KAAAC,EACJ,MAAAC,EACA,SAAAC,EACA,cAAAC,EACA,OAAAC,EAAA,OACS,MAAAC,EAAA,GACD,YAAAC,EACR,SAAAC,EAAA,GACW,UAAAC,EACX,OAAAC,EACA,KAAAC,EAAA,EACO,cAAAC,EACP,GAAAC,CAEF,EAAAC,EAAA,CAGA,MAAAC,EAAAC,EAAAhB,CAAA,EACA,OAAAiB,EAAAC,EAAA,CAAA,GAAAL,EAAA,QAAAE,EAAA,MAAAT,EAAA,SAAAW,EAEIE,EAAC,CAAA,IAAAL,EACC,MAAAR,EACA,GAAAS,EACA,KAAAd,EACA,SAAAO,EACA,OAAAH,EACA,cAAAO,EACA,YAAAL,EACA,MAAAL,EACA,SAAAkB,GAAA,CAEEjB,GAAA,MAAAA,EAAAiB,EAAA,cAAA,OACAhB,GAAA,MAAAA,EAAAgB,EAAiB,EACnB,UAAAX,EACA,OAAAC,EACA,KAAAC,CACA,CAAA,CAAA,CAAA,CAIR,CAAA,EAUAQ,EAAAE,EAAA;AAAA;AAAA;AAAA;AAAA,gBAA8B,CAAA,CAAA,cAAAT,CAAA,IAAAA,EAAAU,EAAA,OAAA,QAAAA,EAAA,OAAA,KAAA;AAAA,sBAK+BA,EAAA,OAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACnBA,EAAA,OAAA,SAAA;AAAA,YAKT,CAAA,CAAA,OAAAjB,CAAA,IAAAA,CAAA;AAAA,YACC,CAAA,CAAA,SAAAG,CAAA,IAAAA,EAAA,cAAA,MAAA;AAAA,aAC+B,CAAA,CAAA,SAAAA,CAAA,IAAAA,EAAA,MAAA,GAAA;AAAA,kBACV,CAAA,CAAA,MAAAF,KAAAgB,EAAA,OAAA,GAAAhB,EAAA,aAAA,SAAA,EAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,CAAA,CAAA,MAAAA,CAAA,IAAAA,EAAAgB,EAAA,OAAA,WAAAA,EAAA,OAAA,QAAA;AAAA;AAAA,ooGCrGhD,MAAMC,EAAY,IAAM,CAC7B,KAAM,CAACrB,EAAOsB,CAAQ,EAAIC,WAAS,EAAE,EAErC,SACG,OACC,CAAA,SAAAR,EAACnB,EAAA,CACC,GAAG,cACH,MAAM,iBACN,MAAAI,EACA,OAAO,OACP,SAAUsB,EACV,cAAc,8BACd,SAAU,GACV,MAAOtB,EAAM,OAAS,IACtB,SAAU,gBAAgBA,EAAM,MAAM,0EACtC,YAAY,gCAAA,CAEhB,CAAA,CAAA,CAEJ"}