{"version":3,"file":"InternalField-BEznC0bD.js","sources":["../../src/fields/components/InternalField.tsx"],"sourcesContent":["import React, { ReactNode } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../../Box'\nimport { Icon } from '../../Icon'\nimport { Text } from '../../Text'\nimport { CommonFieldProps } from '../commonFieldTypes'\n\ninterface InternalFieldProps extends CommonFieldProps {\n  children: ReactNode\n  className?: string\n  htmlFor?: string\n  fieldType: 'field' | 'fieldset'\n}\n\nexport const InternalField = ({\n  children,\n  fieldType,\n  renderAsTitle,\n  htmlFor,\n  className,\n  label,\n  assistiveText,\n  error,\n  errorMsg,\n  required,\n  completed,\n  ...marginProps\n}: InternalFieldProps) => {\n  const labelTag = fieldType === 'field' ? 'label' : 'legend'\n\n  return (\n    <Container\n      forwardedAs={fieldType === 'field' ? 'div' : 'fieldset'}\n      className={className}\n      {...marginProps}\n    >\n      {label && (\n        <>\n          {renderAsTitle ? (\n            <Box mb=\"16px\">\n              <Text tag={labelTag} typo=\"heading-small\" htmlFor={htmlFor}>\n                {label}\n              </Text>\n\n              {assistiveText && (\n                <Text tag=\"p\" color=\"sesame\" mt={{ custom: 4 }}>\n                  {assistiveText}\n                </Text>\n              )}\n            </Box>\n          ) : (\n            <Text\n              tag={labelTag}\n              typo=\"label\"\n              color={error ? 'strawberry' : 'sesame'}\n              htmlFor={htmlFor}\n              mb={{ custom: 4 }}\n            >\n              {label}\n              {required && (\n                <Text tag=\"span\" typo=\"body-small\" color=\"strawberry\">\n                  *\n                </Text>\n              )}\n            </Text>\n          )}\n        </>\n      )}\n\n      <Box>{children}</Box>\n      {fieldType === 'field' && assistiveText && !renderAsTitle && (\n        <Text\n          tag={labelTag}\n          typo=\"caption\"\n          color={error ? 'strawberry' : 'sesame'}\n          mt={{ custom: 4 }}\n        >\n          {assistiveText}\n        </Text>\n      )}\n\n      {error &&\n        errorMsg &&\n        (typeof errorMsg === 'string' ? (\n          <Box flex alignItems=\"center\" mt=\"8px\" gap={{ custom: 4 }}>\n            <Icon render=\"warning\" size={16} color=\"strawberry\" />\n            <Text tag=\"span\" typo=\"caption\" color=\"strawberry\">\n              {errorMsg}\n            </Text>\n          </Box>\n        ) : (\n          <Box mt=\"8px\">{errorMsg}</Box>\n        ))}\n\n      {/* When completed is false, whitespace is rendered */}\n      {completed !== undefined && (\n        <AnimationWrapper\n          $displayStatus={completed}\n          $isError={!!(error && errorMsg)}\n        >\n          <StatusWrapper mt={'8px'}>\n            <Icon render=\"included\" size={16} color=\"apple\" />\n            <Text typo=\"caption\" color=\"apple\">\n              Complete\n            </Text>\n          </StatusWrapper>\n        </AnimationWrapper>\n      )}\n    </Container>\n  )\n}\n\nconst AnimationWrapper = styled(Box)<{\n  $displayStatus: boolean\n  $isError: boolean\n}>`\n  width: 0;\n  overflow: hidden;\n\n  ${({ $displayStatus }) =>\n    $displayStatus &&\n    css`\n      transition: width 0.6s ease-in;\n      width: 100%;\n    `}\n\n  /* This enables animation to appear when previous state is error */\n  ${({ $isError }) =>\n    $isError &&\n    css`\n      height: 0;\n    `}\n`\n\nconst StatusWrapper = styled(Box)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`\n\nconst Container = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n\n  // In case, the element is a 'fieldset', we remove the border\n  border: 0;\n`\n"],"names":["cov_2aglyl4l22","actualCoverage","InternalField","fieldType","renderAsTitle","htmlFor","className","label","assistiveText","error","errorMsg","required","completed","marginProps","Container","mb","React","Box","tag","Text","typo","color","mt","custom","children","flex","alignItems","gap","render","Icon","size","$displayStatus","AnimationWrapper","$isError","StatusWrapper","s"],"mappings":"krNAyBE,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAAD,CAzBFA,IAeOA,IAAM,EAAA,CAAA,IACX,MAAAE,EAAA,CAAA,CACAC,SAAAA,EACAC,UAAAA,EACAC,cAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,MAAAA,EACAC,cAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,SAAAA,EACA,UAAAA,EACwB,GAAAC,CAAAb,IAAAA,CAClBA,EAAAA,EAAAA,EAAAA,CAAAA,IAA6CA,MAAAA,GAAAA,IAAA,EAAA,CAAA,IAAAG,IAAA,SAAAH,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,UAAAA,IAAA,EAAA,CAAA,EAAA,CAAA,IAAA,WAGjD,OAAAA,EAAA,EAAA,EAAA,CAAA,IACeG,EAAc,cAAAW,EAAA,CAC3BR,YAAAH,IAAA,SAAAH,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,QAAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,YACC,UAAAM,EAEA,GAAAO,CAGUE,GAAAf,EAAG,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAO,IAAAP,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAgB,EAAA,cAAAA,EAAA,SAAA,KAAAZ,GAAAJ,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAgB,EAAA,cAAAC,EAAA,UACAC,EAAeF,EAAA,cAAAG,EAAA,CAAAC,MAAqBf,KAAAA,gBACvC,QAAAA,CAIKa,EAAAA,CAAI,GAAAlB,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAQ,IAAAR,IAAA,EAAA,CAAA,EAAA,CAAA,IAAAgB,EAAA,cAAAG,EAAA,CAAIE,IAAM,IAASC,MAAI,SAAEC,GAAAA,CAAU,OAAA,CAC1C,CAMLL,EAAAA,CAAK,GAAA,IAAAlB,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAgB,EAAA,cAAAG,EAAA,CACLC,MACAC,KAAOZ,QACPJ,MAAAI,GAAAT,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,eAAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,UACAe,QAAAA,EAAMQ,GAAAA,CAAU,OAAA,EAIRL,EAAAA,sDAAWE,WAAkBC,KAAM,aAAA,MAMjD,YAMEH,EAAAA,MAAK,EAAA,IAAAF,EAAA,cAAAC,EAAA,KAAAO,CAAA,GAAAxB,IAAA,EAAA,CAAA,EAAA,CAAA,IAAAG,IAAA,UAAAH,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAQ,KAAAR,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,CAAAI,KAAAJ,IAAA,EAAA,CAAA,EAAA,CAAA,IAAAgB,EAAA,cAAAG,EAAA,CACLC,MACAC,KAAOZ,UACPa,MAAIb,GAAAT,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,eAAAA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,UAAEuB,GAAAA,CAAU,OAAA,CAAA,CASXE,EAAAA,CAAI,KAAAzB,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAS,IAAAT,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAU,KAAAV,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,OAAAU,GAAA,UAAAV,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAAgB,EAAA,cAAAC,EAAA,CAACS,KAAAA,GAAoBJ,oBAASK,GAAK,MAAEJ,IAAAA,CAAU,OAAA,CAAA,CAChDK,EAAiBZ,EAAA,cAAAa,EAAA,CAAAC,iBAAUT,KAAM,SACtCL,YAAKE,CAAAA,EAAWF,EAAA,cAAAG,EAAA,CAAAC,WAAeC,KAAM,UACnCX,MAAAA,YAIAY,EAAAA,CAAG,CAAA,IAAAtB,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAAgB,EAAA,cAAAC,EAAA,IAAgB,KAMxBc,EAAAA,CAAAA,QAAgB,EAAA,EAAA,EAAA,EAAA,CAAA,IAAAnB,IAAA,SAAAZ,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAAgB,EAAA,cAAAgB,EAAA,CAChBC,2BAEAjB,EAAA,EAAA,EAAA,EAAA,iCAAeM,EAAIN,EAAA,cAAAkB,EAAA,SACXN,qBAAkBE,OAAM,WAAIT,KAAM,GAAQ,aAC1CD,CAAAA,qBAAeC,KAAM,UAAO,MAAA,OAQ9C,EAAA,UAAA,CAAA,CAAA,GAAA,CAEA;;;;IAOOU,CAAAA,CACH,eAAAA,CAAA/B,KAAAA,IAAAmC,EAAA,CAAA,IAAAnC,EAAAA,EAAAA,EAAAA,CAAAA;;;;;;IAOGiC,CAAAA,CACH,SAAAA,CAAAjC,KAAAA,IAAAmC,EAAA,CAAA,IAAAnC,EAAAA,EAAAA,EAAAA,CAAAA;;OAGC;AAAA;;;;;;;;;;;;"}