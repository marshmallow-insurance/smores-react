{"version":3,"file":"SegmentedControl.stories-CjxOHk13.js","sources":["../../src/SegmentedControl/ToggleButton.tsx","../../src/SegmentedControl/SegmentedControl.tsx","../../src/SegmentedControl/storybook/Container.tsx","../../src/SegmentedControl/storybook/SegmentedControl.stories.tsx"],"sourcesContent":["import React, { ReactNode } from 'react'\nimport styled, { css } from 'styled-components'\nimport { Box } from '../Box'\n\ntype ToggleButtonProps<Value> = {\n  name: string\n  value: Value\n  onChange: (value: Value) => void\n  isSelected: boolean\n  isDisabled?: boolean\n  children: ReactNode\n}\n\nexport const ToggleButton = <Value,>({\n  name,\n  value,\n  onChange,\n  isSelected,\n  isDisabled = false,\n  children,\n}: ToggleButtonProps<Value>) => {\n  return (\n    <Wrapper\n      as=\"label\"\n      data-testId={`value-toggle-${String(value)}`}\n      isDisabled={isDisabled}\n    >\n      <VisuallyHiddenInput\n        type=\"radio\"\n        name={name}\n        checked={isSelected}\n        onClick={() => onChange(value)}\n        onChange={() => onChange(value)}\n      />\n      {children}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)<{ isDisabled: boolean }>`\n  cursor: pointer;\n  ${({ isDisabled }) =>\n    isDisabled &&\n    css`\n      pointer-events: none;\n      opacity: 0.5;\n    `}\n  padding: 10px 14px;\n  transition: color 0.1s linear;\n  height: fit-content;\n  width: 100%;\n  align-content: center;\n  z-index: 3;\n`\n\nconst VisuallyHiddenInput = styled.input`\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n","import styled from 'styled-components'\n\nimport { Color, theme } from '../theme'\nimport { Box } from '../Box'\nimport { Tag } from '../Tag'\nimport { Text } from '../Text'\nimport React from 'react'\nimport { ToggleButton } from './ToggleButton'\n\nexport type SegmentedControlOption<T = string | number> = {\n  label: string\n  /** value needs to be number or string */\n  value: T\n  /** optional tag able to show in the toggle if showTag prop is passed */\n  tag?: string\n  isDisabled?: boolean\n}\n\ntype StylingOptions = {\n  toggle?: Color\n  background?: Color\n  text?: Color\n  selectedText?: Color\n  tagBg?: Color\n  tagBorder?: Color\n  tagText?: Color\n}\n\nexport type SegmentedControlProps<T> = {\n  /** you can pass more than 2 options */\n  options: SegmentedControlOption<T>[]\n  value: T\n  onChange: (value: T) => void\n  /**  pass this prop if you want to show the tag in the toggle */\n  showTag?: boolean\n  /** pass a StylingOptions object with the needed styles if you want to style the SegmentedControl */\n  styles?: StylingOptions\n}\n\n/**\n * ### How do I pass state to the `SegmentedControl` component?\n * We recommend pulling the state up to at least the component that renders `SegmentedControl` up to at least the component that renders `SegmentedControl`, this should make it easier to pass state to the `SegmentedControl` component\n */\nexport const SegmentedControl = <T,>({\n  options,\n  value,\n  onChange,\n  showTag,\n  styles: {\n    tagBorder = 'marshmallowPink',\n    tagText = 'cream',\n    tagBg = 'marshmallowPink',\n    selectedText = 'cream',\n    text = 'liquorice',\n    background,\n    toggle,\n  } = {},\n}: SegmentedControlProps<T>) => {\n  return (\n    <ToggleWrapper backgroundColor={background}>\n      <IndicatorWrapper backgroundColor={background}>\n        {options.map((option) => {\n          return (\n            <ToggleButton\n              key={option.label}\n              name=\"toggle-version-button\"\n              value={option.value}\n              onChange={onChange}\n              isSelected={option.value === value}\n              isDisabled={option.isDisabled}\n            >\n              <StyledWrapper>\n                {showTag && option.tag && (\n                  <StyledTag\n                    bgColor={tagBg}\n                    borderColor={tagBorder}\n                    color={tagText}\n                    label={option.tag}\n                  />\n                )}\n                <StyledText\n                  isSelected={option.value === value}\n                  selectedTextColor={selectedText}\n                  color={text}\n                >\n                  {option.label}\n                </StyledText>\n              </StyledWrapper>\n            </ToggleButton>\n          )\n        })}\n\n        <ToggleIndicator\n          selectedIndex={options.findIndex((option) => option.value === value)}\n          sections={options.length}\n          toggleColor={toggle}\n        />\n      </IndicatorWrapper>\n    </ToggleWrapper>\n  )\n}\n\nconst BORDER_RADIUS = 25\n\nconst StyledWrapper = styled(Box)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n`\n\nconst StyledTag = styled(Tag)`\n  border-radius: 100px;\n`\n\nconst StyledText = styled(Text)<{\n  isSelected: boolean\n  selectedTextColor: Color\n}>`\n  font-weight: ${theme.font.weight.medium};\n  ${({ isSelected, selectedTextColor }) =>\n    isSelected && `color: ${theme.colors[selectedTextColor]};`}\n  padding: 2px 0px;\n`\n\nconst ToggleWrapper = styled(Box)<{ backgroundColor?: Color }>`\n  padding: 4px;\n  background-color: ${(p) => theme.colors[p.backgroundColor ?? 'custard']};\n  border-radius: ${BORDER_RADIUS}px;\n`\n\nconst IndicatorWrapper = styled(Box)<{ backgroundColor?: Color }>`\n  position: relative;\n  display: flex;\n  background-color: ${(p) => theme.colors[p.backgroundColor ?? 'custard']};\n  border-radius: ${BORDER_RADIUS}px;\n`\n\nconst ToggleIndicator = styled(Box)<{\n  selectedIndex: number\n  sections: number\n  toggleColor?: Color\n}>`\n  background-color: ${(p) => theme.colors[p.toggleColor ?? 'liquorice']};\n  border-radius: ${BORDER_RADIUS}px;\n  position: absolute;\n  z-index: 1;\n  height: 100%;\n  width: ${(p) => `calc(100% / ${p.sections})`};\n  transition: transform 0.4s;\n  transform: ${(p) => `translateX(${p.selectedIndex * 100}%)`};\n`\n","import { Box } from '../../Box'\nimport { SegmentedControl, SegmentedControlProps } from '../SegmentedControl'\nimport React, { ReactNode } from 'react'\n\nexport const Container = <T,>(props: SegmentedControlProps<T>) => {\n  const [value, setValue] = React.useState(props.value)\n\n  return (\n    <>\n      <SegmentedControl {...props} value={value} onChange={setValue} />\n      <Box p={'16px'}>\n        <p>Selected value: {value as ReactNode}</p>\n      </Box>\n    </>\n  )\n}\n","import type { Meta, StoryObj } from '@storybook/react'\nimport React from 'react'\nimport { SegmentedControl, SegmentedControlProps } from '../SegmentedControl'\nimport { Container } from './Container'\n\ntype StoryMeta = Meta<typeof SegmentedControl>\ntype Story = StoryObj<typeof SegmentedControl>\n\nconst meta: StoryMeta = {\n  title: 'SegmentedControl',\n  component: SegmentedControl,\n}\nexport default meta\n\nconst Template = <T,>(props: SegmentedControlProps<T>) => (\n  <Container {...props} />\n)\nexport const Default: Story = {\n  render: Template,\n  args: {\n    options: [\n      { label: 'Option 1', value: 'option1' },\n      { label: 'Option 2', value: 'option2', tag: 'tag 2' },\n    ],\n    value: 'option1',\n    showTag: false,\n  },\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          {\n            //disabling these until we sync with design on this\n            id: 'color-contrast',\n            enabled: false,\n          },\n        ],\n      },\n    },\n  },\n}\n\nexport const Custom: Story = {\n  render: Template,\n  args: {\n    options: [\n      { label: 'Option 1', value: 1 },\n      { label: 'Option 2', value: 2, tag: 'tag 2' },\n      { label: 'Option 3', value: 3, tag: 'tag 3', isDisabled: true },\n    ],\n    value: 2,\n    showTag: true,\n    styles: {\n      tagText: 'liquorice',\n      tagBorder: 'liquorice',\n      tagBg: 'cream',\n      selectedText: 'liquorice',\n      text: 'liquorice',\n      background: 'marshmallowPink',\n      toggle: 'cream',\n    },\n  },\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          {\n            //disabling these until we sync with design on this\n            id: 'color-contrast',\n            enabled: false,\n          },\n        ],\n      },\n    },\n  },\n}\n"],"names":["cov_6f342n0lw","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","ToggleButton","name","value","onChange","isSelected","isDisabled","b","children","f","React","createElement","Wrapper","as","String","VisuallyHiddenInput","type","checked","onClick","styled","Box","css","cov_2itvshnmy0","SegmentedControl","options","showTag","styles","tagBorder","tagText","tagBg","selectedText","text","background","toggle","ToggleWrapper","backgroundColor","IndicatorWrapper","map","option","key","label","StyledWrapper","tag","StyledTag","bgColor","borderColor","color","StyledText","selectedTextColor","ToggleIndicator","selectedIndex","findIndex","sections","length","toggleColor","cov_o7z1um1mm","Container","props","meta","title","component","Template","Default","render","args","parameters","a11y","config","rules","id","enabled","Custom","docs","source","originalSource"],"mappings":"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,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,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"}