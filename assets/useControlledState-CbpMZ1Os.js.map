{"version":3,"file":"useControlledState-CbpMZ1Os.js","sources":["../../src/utils/useControlledState.ts"],"sourcesContent":["import type { SetStateAction } from 'react'\nimport { useCallback, useState } from 'react'\n\nexport const useControllableState = <StateType>({\n  initialState,\n  stateProp,\n}: {\n  initialState: StateType\n  stateProp: StateType | undefined\n}) => {\n  const [state, setState] = useState(initialState)\n\n  const returnedState = stateProp !== undefined ? stateProp : state\n  const returnedSetState = useCallback<\n    (state: SetStateAction<StateType>) => void\n  >(\n    (nextState) => {\n      if (stateProp !== undefined) {\n        return\n      }\n\n      setState(nextState)\n    },\n    [state, stateProp],\n  )\n\n  return [returnedState, returnedSetState] as const\n}\n"],"names":["cov_kt7uhmh7z","s","useControllableState","initialState","stateProp","f","state","setState","useState","returnedState","b","returnedSetState","useCallback","nextState"],"mappings":"inEAGgDA,EAAA,EAAAC,EAAA,CAAA,IAE9C,MAAAC,EAAAA,CAAA,CAIIC,aAAAA,EACJC,UAAAA,CAEA,IAKI,CAAAJ,EAAA,EAAAK,EAAA,CAAA,IACE,KAAA,CAAAC,EAAAC,CAAA,GAAAP,EAAA,EAAAC,EAAA,CAAA,IAAAO,EAAA,SAAAL,CAAA,GAGFM,GAAAT,EAAAC,EAAAA,OAAkBG,IAAA,QAAAJ,EAAA,EAAAU,EAAAN,CAAAA,EAAAA,CAAAA,IAAAA,IAAAJ,EAAA,EAAAU,EAAA,CAAA,EAAA,CAAA,IAAAJ,IACpBK,GAAAX,EAAA,EAAAC,EAAA,CAAA,IAAAW,EAAA,YAIKC,IACT,oBAAA,CAAA,IAAAT,IAAA,OAAA,CAAAJ,EAAA,EAAAU,EAAAV,CAAAA,EAAAA,CAAAA,IAAAA,EAAA,EAAAC"}