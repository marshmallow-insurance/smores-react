{"version":3,"file":"TextInput-CYM6sFY7.js","sources":["../../src/TextInput/TextInput.tsx"],"sourcesContent":["import React, {\n  FocusEvent,\n  FormEvent,\n  ForwardedRef,\n  forwardRef,\n  HTMLInputAutoCompleteAttribute,\n} from 'react'\n\nimport { Box } from '../Box'\nimport { Field } from '../fields/Field'\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\nimport {\n  Input,\n  StyledFrontIcon,\n  StyledTrailingIcon,\n} from '../fields/components/CommonInput'\nimport { useUniqueId } from '../utils/id'\n\ninterface Props extends CommonFieldProps {\n  type?: 'text' | 'email' | 'password' | 'time' | 'date' | 'tel'\n  placeholder: string\n  name?: string\n  value: string\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void\n  /**\n   * Triggers after animation end (animation duration is 2s),\n   * the animation starts when a user selects or hovers over an autofill option\n   */\n  onAutoFill?: () => void\n}\n\ntype InputMode = 'text' | 'email' | 'numeric'\n\n/** on change or on input required */\ntype InputProps = (\n  | {\n      /** on change is required and on input optional */\n      onChange: (e: string) => void\n      onInputChange?: (e: FormEvent<HTMLInputElement>) => void\n    }\n  | {\n      /** on input is required and on change optional */\n      onChange?: (e: string) => void\n      onInputChange: (e: FormEvent<HTMLInputElement>) => void\n    }\n) & {\n  autoCompleteAttr?: HTMLInputAutoCompleteAttribute\n  inputModeAttr?: InputMode\n}\n\nexport type TextInputProps = Props & InputProps\n\n/**\n * A reusable TextInput component that supports various input types, custom styling, icons,\n * and autofill detection.\n *\n * ### Caveats:\n * - `onAutoFill` triggers after animation end (animation duration is 2s),\n * the animation starts when a user selects or hovers over an autofill option\n */\nexport const TextInput = forwardRef(function TextInput(\n  {\n    id: idProp,\n    type = 'text',\n    placeholder,\n    name,\n    value,\n    error = false,\n    onBlur,\n    onChange,\n    onInputChange,\n    onAutoFill,\n    disabled = false,\n    frontIcon,\n    trailingIcon,\n    fallbackStyle,\n    autoCompleteAttr = 'off',\n    inputModeAttr,\n    ...fieldProps\n  }: TextInputProps,\n  ref: ForwardedRef<HTMLInputElement>,\n) {\n  const id = useUniqueId(idProp)\n\n  const handleAnimationEnd = (e: React.AnimationEvent<HTMLInputElement>) => {\n    if (e.animationName === 'onAutoFillStart' && onAutoFill && !!value) {\n      onAutoFill()\n    }\n  }\n\n  return (\n    <Field {...fieldProps} htmlFor={id} error={error}>\n      <Box flex alignItems=\"center\" justifyContent=\"flex-start\">\n        {frontIcon && (\n          <StyledFrontIcon\n            $disabled={disabled}\n            render={frontIcon}\n            color=\"sesame\"\n          />\n        )}\n        <Input\n          disabled={disabled}\n          type={type}\n          id={id}\n          name={name}\n          ref={ref}\n          onAnimationEnd={handleAnimationEnd}\n          placeholder={placeholder}\n          value={value}\n          $error={error}\n          $frontIcon={frontIcon}\n          $fallbackStyle={fallbackStyle}\n          autoComplete={autoCompleteAttr}\n          onChange={(e: FormEvent<HTMLInputElement>) => {\n            onChange && onChange(e.currentTarget.value)\n            onInputChange && onInputChange(e)\n          }}\n          onBlur={onBlur}\n          inputMode={inputModeAttr}\n        />\n        {trailingIcon && (\n          <StyledTrailingIcon\n            $disabled={disabled}\n            render={trailingIcon}\n            color=\"sesame\"\n          />\n        )}\n      </Box>\n    </Field>\n  )\n})\n"],"names":["cov_1ig37uwd6k","actualCoverage","forwardRef","TextInput","type","idProp","placeholder","name","value","error","onBlur","onChange","onInputChange","onAutoFill","disabled","frontIcon","trailingIcon","fallbackStyle","autoCompleteAttr","inputModeAttr","useUniqueId","handleAnimationEnd","e","s","b","React","Field","htmlFor","flex","Box","alignItems","justifyContent","$disabled","StyledFrontIcon","render","color","Input","id","ref","onAnimationEnd","$error","$frontIcon","$fallbackStyle","autoComplete","inputMode","StyledTrailingIcon"],"mappings":"iuJAiEI,OAAAA,EAAA,UAAA,CAAA,OAAAC,CAAA,EAAAA,CAAAD,CAjEJA,EAIEE,EA0DM,MAAAC,GAAAH,EAAA,EAAA,EAAA,CAAA,IAAAE,EAAAA,WAAA,SAAA,CACJE,GAAAC,EACAC,KAAAA,GAAAN,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,QACAO,YAAAA,EACAC,KAAAA,EACAC,MAAAA,EACAC,MAAAA,GAAAV,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,IACAW,OAAAA,EACAC,SAAAA,EACAC,cAAAA,EACAC,WAAAA,EACAC,SAAAA,GAAAf,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,IACAgB,UAAAA,EACAC,aAAAA,EACAC,cAAAA,EACAC,iBAAAA,GAAAnB,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,OACA,cAAAmB,EACF,IAEAnB,EAAAA,EAAAA,CACMA,EAAA,EAAA,EAAA,CAAA,IAAuBA,MAAAA,GAAAA,EAAA,EAAA,EAAA,CAAA,IAAAoB,EAAAf,CAAA,GAEvBL,EAAAqB,EAAAA,EAAAA,CAAAA,IAAoErB,MAAAA,EAAAsB,GAAA,CAAAtB,IAAAuB,EAAA,CAAA,IACxEvB,MAAI,CAAAwB,IAAgExB,EAAAwB,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAF,EAAA,gBAAA,oBAAAtB,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAa,KAAAb,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAAAQ,IAAAR,IAAAuB,EAAA,CAAA,EAAA,CAAA,IACvDV,EAAA,EAAA,EAAA,CAAA,IACbA,EAAA,GAAAb,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,GACFA,EAEA,OAAAA,EAAA,EAAA,EAAA,CAAA,IACayB,EAAA,cAAAC,EAAA,CAAYC,GAAAA,EAAalB,QAAAA,SAC7BmB,EAAKH,EAAA,cAAAI,EAAA,CAAAC,KAAAA,GAAoBC,WAAAA,wBAC3B,YAEGC,GAAAA,EAAW,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAjB,IAAAf,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAyB,EAAA,cAAAQ,EAAA,CACXC,UAAQpB,EACRqB,OAAMpB,EAGV,MAAAU,aACEA,EAAA,cAAAW,EAAA,CACAhC,SAAAA,EACAiC,KAAAA,EACA9B,GAAAA,EACA+B,KAAAA,EACAC,IAAAA,EACAjC,eAAAe,EACAb,YAAAA,EACAgC,MAAAA,EACAC,OAAAA,EACAC,WAAAA,EACAC,eAAc1B,EACdN,aAA8CO,EAAAlB,SAAAA,GAAAA,CAAAA,IAAAuB,EAAA,CAAA,IAChCvB,EAAAwB,EAAAA,EAAA,CAAAb,IAA8BX,EAAAuB,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAZ,IAAAX,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAW,EAAAW,EAAA,cAAA,KAAA,GAC1CtB,EAAA,EAAA,EAAA,CAAA,IACFA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAY,IAAAZ,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAY,EAAAU,CAAA,EACA,EACAsB,OAAAA,aAIEZ,CAAAA,GAAAA,IAAW,EAAA,CAAA,EAAA,CAAA,IAAAhB,IAAAhB,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAyB,EAAA,cAAAoB,EAAA,CACXX,UAAQpB,EACRqB,OAAMnB,EAGZ,MACF,QAEH,CAAA,GAAA,CAAA,CAAAhB,CAAAA;;;;;;"}