{"version":3,"file":"RadioGroup.stories-22b951b6.js","sources":["../../src/utils/visuallyHidden.ts","../../src/RadioGroup/RadioElement.tsx","../../src/RadioGroup/constants.ts","../../src/RadioGroup/RadioItem.tsx","../../src/RadioGroup/RadioGroup.tsx","../../src/RadioGroup/assets/radio-visual.svg"],"sourcesContent":["/**\n * Hide element visually but still have it accessible for assitive device\n * @link https://www.a11yproject.com/posts/how-to-hide-content/\n */\nexport const visuallyHidden = `\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n","import React, { forwardRef } from 'react'\nimport styled from 'styled-components'\n\nimport { theme } from '../theme'\nimport { MarginProps } from '../utils/space'\nimport { visuallyHidden } from '../utils/visuallyHidden'\nimport { focusOutline } from '../utils/focusOutline'\n\nimport { Box } from '../Box'\nimport { BaseValueType } from './types'\n\ntype RadioElementProps = {\n  name: string\n  id: string\n  value: BaseValueType\n  checked: boolean\n  onChange: (value: BaseValueType) => void\n  isError: boolean\n} & MarginProps\n\nexport const RadioElement = forwardRef<HTMLInputElement, RadioElementProps>(\n  function RadioElement(\n    { name, id, value, checked, onChange, isError, ...marginProps },\n    ref,\n  ) {\n    return (\n      <>\n        <StyledInput\n          ref={ref}\n          type=\"radio\"\n          name={name}\n          id={id}\n          value={`${value}`}\n          checked={checked}\n          onChange={() => onChange(value)}\n        />\n        <RadioCircle isError={isError} checked={checked} {...marginProps} />\n      </>\n    )\n  },\n)\n\nconst StyledInput = styled.input`\n  ${visuallyHidden}\n`\n\nconst RADIO_SIZE = 24\n\nconst RadioCircle = styled(Box)<{ isError: boolean; checked: boolean }>`\n  flex-shrink: 0;\n  width: ${RADIO_SIZE}px;\n  height: ${RADIO_SIZE}px;\n  border-radius: ${RADIO_SIZE}px;\n  background-color: ${theme.colors.cream};\n  border: 2px solid\n    ${({ isError }) =>\n      isError ? theme.colors.strawberry : theme.colors.sesame};\n\n  ${({ checked, isError }) =>\n    !checked &&\n    !isError &&\n    `\n    &:hover {\n      border: 2px solid ${theme.colors.liquorice};\n    }\n  `}\n\n  ${({ checked, isError }) =>\n    checked &&\n    `border: 8px solid ${\n      isError ? theme.colors.strawberry : theme.colors.liquorice\n    };`}\n\n  ${focusOutline({ selector: `${StyledInput}:focus-visible + &` })}\n`\n","export const ITEM_GAP = 12\n","import React, { forwardRef } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { useUniqueId } from '../utils/id'\nimport { theme } from '../theme'\n\nimport { RadioElement } from './RadioElement'\nimport { Text } from '../Text'\nimport { BaseValueType, DisplayType, IconPosition } from './types'\nimport { ITEM_GAP } from './constants'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\n\ntype RadioItemProps = {\n  name: string\n  visual?: string\n  icon?: string\n  iconPosition?: IconPosition\n  value: BaseValueType\n  label: string\n  checked: boolean\n  onChange: (value: BaseValueType) => void\n  displayType: DisplayType\n  isError: boolean\n  fallbackStyle?: boolean\n  bodyCopy?: string\n}\n\nexport const RadioItem = forwardRef<HTMLInputElement, RadioItemProps>(\n  function RadioItem(\n    {\n      name,\n      visual,\n      icon,\n      iconPosition = 'center',\n      label,\n      value,\n      checked,\n      onChange,\n      displayType,\n      isError,\n      fallbackStyle,\n      bodyCopy,\n    },\n    ref,\n  ) {\n    const id = useUniqueId()\n    return (\n      <Wrapper\n        htmlFor={id}\n        checked={checked}\n        displayType={displayType}\n        data-testid={value}\n        isError={isError}\n        fallbackStyle={fallbackStyle}\n      >\n        {visual && !icon && (\n          <VisualWrapper>\n            <Visual visualUrl={visual} />\n          </VisualWrapper>\n        )}\n        {!visual && icon && (\n          <IconWrapper iconPosition={iconPosition}>\n            <Icon render={icon} size={24} />\n          </IconWrapper>\n        )}\n        <Box flex alignItems=\"center\">\n          <RadioElement\n            ref={ref}\n            name={name}\n            id={id}\n            value={value}\n            checked={checked}\n            onChange={onChange}\n            isError={isError}\n            mr=\"8px\"\n          />\n          <Box>\n            <RadioText isError={isError}>{label}</RadioText>\n            {bodyCopy && (\n              <Box>\n                <Text typo=\"caption\">{bodyCopy}</Text>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Wrapper>\n    )\n  },\n)\n\nconst VisualWrapper = styled.div`\n  width: 100%;\n  max-width: 120px;\n  margin: 0 auto 8px;\n`\n\nconst IconWrapper = styled.div<{ iconPosition?: IconPosition }>`\n  display: flex;\n  padding-bottom: 12px;\n\n  ${({ iconPosition }) =>\n    iconPosition === 'center' &&\n    css`\n      justify-content: center;\n    `}\n\n  ${({ iconPosition }) =>\n    iconPosition === 'start' &&\n    css`\n      justify-content: flex-start;\n    `}\n`\n\nconst Visual = styled.div<{ visualUrl: string }>`\n  width: 100%;\n  padding-top: 100%;\n  background-image: url('${(p) => p.visualUrl}');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`\n\nconst Wrapper = styled.label<\n  Pick<RadioItemProps, 'displayType' | 'checked' | 'isError' | 'fallbackStyle'>\n>`\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n\n  ${({ displayType, checked, isError, fallbackStyle }) => css`\n    ${(displayType === 'horizontal-card' || displayType === 'vertical-card') &&\n    css`\n      border-radius: 12px;\n      background-color: ${fallbackStyle\n        ? theme.colors.cream\n        : theme.colors.custard};\n      padding: ${checked ? '10px' : '12px'};\n      border: ${checked &&\n      (isError\n        ? `2px solid ${theme.colors.strawberry}`\n        : `2px solid ${theme.colors.liquorice}`)};\n\n      &:hover {\n        background-color: ${fallbackStyle\n          ? theme.colors.coconut\n          : theme.colors.oatmeal};\n      }\n    `}\n    ${displayType === 'horizontal-card' &&\n    css`\n      width: 100%;\n      justify-content: center;\n\n      @media (min-width: 420px) {\n        width: calc(50% - ${ITEM_GAP / 2}px);\n      }\n\n      @media (min-width: 768px) {\n        width: 201px;\n      }\n    `}\n  `}\n`\n\nconst RadioText = styled.span<{ isError: boolean }>`\n  line-height: 16px;\n  font-size: 16px;\n  font-weight: ${theme.font.weight.medium};\n  color: ${({ isError }) =>\n    isError ? theme.colors.strawberry : theme.colors.liquorice};\n  margin-top: 4px;\n`\n","import React, {\n  ForwardedRef,\n  forwardRef,\n  ReactElement,\n  RefObject,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { useUniqueId } from '../utils/id'\n\nimport { Fieldset } from '../fields/Fieldset'\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\nimport { RadioItem } from './RadioItem'\nimport { BaseValueType, DisplayType, IconPosition } from './types'\nimport { ITEM_GAP } from './constants'\n\nexport type RadioGroupProps<Value extends BaseValueType = BaseValueType> = {\n  options: Array<{\n    visual?: string\n    icon?: string\n    iconPosition?: IconPosition\n    label: string\n    value: Value\n    bodyCopy?: string\n  }>\n  onChange: (value: Value) => void\n  value: Value\n  displayType?: DisplayType\n  fallbackStyle?: boolean\n} & CommonFieldProps\n\nexport type RadioGroupElement = {\n  focus: VoidFunction\n}\n\nconst RadioGroupComponent = <Value extends BaseValueType>(\n  {\n    options,\n    onChange,\n    value,\n    displayType = 'normal',\n    renderAsTitle = false,\n    error = false,\n    fallbackStyle = false,\n    ...fieldProps\n  }: RadioGroupProps<Value>,\n  ref: ForwardedRef<RadioGroupElement>,\n) => {\n  const name = useUniqueId()\n\n  const optionRefs = useRef<RefObject<HTMLInputElement>[]>([])\n  useImperativeHandle(ref, () => {\n    return {\n      focus: () => {\n        const selectedIndex = options.findIndex((item) => item.value === value)\n\n        const elementToFocus = selectedIndex === -1 ? 0 : selectedIndex\n        optionRefs.current[elementToFocus].current?.focus()\n      },\n    }\n  })\n\n  return (\n    <Fieldset renderAsTitle={renderAsTitle} error={error} {...fieldProps}>\n      <RadioItemList displayType={displayType}>\n        {options.map((option, index) => {\n          const isSelected = option.value === value\n\n          return (\n            <RadioItem\n              ref={(radioOptionRef) => {\n                optionRefs.current[index] = {\n                  current: radioOptionRef,\n                }\n              }}\n              key={`${option.value}`}\n              name={name}\n              visual={option.visual}\n              icon={option.icon}\n              iconPosition={option.iconPosition}\n              label={option.label}\n              value={option.value}\n              checked={isSelected}\n              onChange={onChange}\n              displayType={displayType}\n              isError={error}\n              fallbackStyle={fallbackStyle}\n              bodyCopy={option.bodyCopy}\n            />\n          )\n        })}\n      </RadioItemList>\n    </Fieldset>\n  )\n}\n\nexport const RadioGroup = forwardRef(RadioGroupComponent) as <\n  Value extends BaseValueType = BaseValueType,\n>(\n  p: RadioGroupProps<Value> & React.RefAttributes<HTMLInputElement>,\n) => ReactElement | null\n\nconst RadioItemList = styled.div<Pick<RadioGroupProps, 'displayType'>>`\n  display: flex;\n  gap: ${ITEM_GAP}px;\n\n  ${({ displayType }) => {\n    if (displayType === 'horizontal-card') {\n      return `\n        flex-direction: row;\n        flex-wrap: wrap;\n      `\n    }\n\n    return `flex-direction: column;`\n  }}\n`\n","export default \"__VITE_ASSET__b77856de__\""],"names":["visuallyHidden","RadioElement","forwardRef","name","id","value","checked","onChange","isError","marginProps","ref","jsxs","Fragment","jsx","StyledInput","RadioCircle","styled","RADIO_SIZE","Box","theme","focusOutline","ITEM_GAP","RadioItem","visual","icon","iconPosition","label","displayType","fallbackStyle","bodyCopy","useUniqueId","Wrapper","VisualWrapper","Visual","IconWrapper","Icon","RadioText","Text","css","p","RadioGroupComponent","options","renderAsTitle","error","fieldProps","optionRefs","useRef","useImperativeHandle","selectedIndex","item","elementToFocus","_a","Fieldset","RadioItemList","option","index","isSelected","radioOptionRef","RadioGroup","visualSvg"],"mappings":"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"}