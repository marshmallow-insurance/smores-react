{"version":3,"file":"CurrencyInput.stories-lK7szKY9.js","sources":["../../src/CurrencyInput/CurrencyInput.tsx","../../src/CurrencyInput/storybook/Collection.tsx","../../src/CurrencyInput/storybook/Example.tsx"],"sourcesContent":["import React, {\n  FocusEvent,\n  FormEvent,\n  ForwardedRef,\n  WheelEvent,\n  forwardRef,\n} from 'react'\n\nimport { Box } from '../Box'\nimport { Field } from '../fields/Field'\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\n\nimport { Input, StyledFrontIcon } from '../fields/components/CommonInput'\nimport { useUniqueId } from '../utils/id'\n\nexport interface Props extends CommonFieldProps {\n  placeholder: string\n  name?: string\n  value: string\n  decimalNumber?: boolean\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void\n  min?: number\n  max?: number\n}\n\n/** on change or on input required */\ntype InputProps =\n  | {\n      /** on change is required and on input optional */\n      onChange: (e: string) => void\n      onInputChange?: (e: FormEvent<HTMLInputElement>) => void\n    }\n  | {\n      /** on input is required and on change optional */\n      onChange?: (e: string) => void\n      onInputChange: (e: FormEvent<HTMLInputElement>) => void\n    }\n\nexport type CurrencyInputProps = Props & InputProps\n\nexport const CurrencyInput = forwardRef(function CurrencyInput(\n  {\n    id: idProp,\n    placeholder,\n    name,\n    value,\n    decimalNumber = true,\n    onChange,\n    onInputChange,\n    onBlur,\n    min,\n    max,\n    disabled = false,\n    error = false,\n    fallbackStyle,\n    ...fieldProps\n  }: CurrencyInputProps,\n  ref: ForwardedRef<HTMLInputElement>,\n) {\n  const id = useUniqueId(idProp)\n  const frontIcon = 'pound-regular'\n\n  const formatCurrency = (value: string) => {\n    const decimalIndex = value.indexOf('.')\n\n    if (!decimalNumber) {\n      return Math.trunc(Number(value)).toString()\n    }\n\n    if (decimalIndex >= 0 && value.length > decimalIndex + 1) {\n      const fractionalString = value.substring(decimalIndex + 1).substring(0, 2)\n      return `${value.substring(0, decimalIndex)}.${fractionalString}`\n    } else {\n      return value\n    }\n  }\n\n  const applyMinMax = (value: string) => {\n    const numberValue = Number(value)\n    if (min && numberValue < min) return min.toString()\n    if (max && numberValue > max) return max.toString()\n    return value\n  }\n\n  const handleChange = (value: string) => {\n    if (onChange === undefined) return\n    const EMPTY_INPUT = ''\n\n    if (value === EMPTY_INPUT) {\n      onChange(value)\n    } else {\n      const amount = formatCurrency(value)\n      const normalisedValue = applyMinMax(amount)\n\n      onChange(normalisedValue)\n    }\n  }\n\n  return (\n    <Field {...fieldProps} htmlFor={id} error={error}>\n      <Box flex alignItems=\"center\" justifyContent=\"flex-start\">\n        <StyledFrontIcon\n          $disabled={disabled}\n          render={frontIcon}\n          color=\"sesame\"\n        />\n        <Input\n          ref={ref}\n          $error={error}\n          disabled={disabled}\n          type=\"number\"\n          id={id}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          $frontIcon={frontIcon}\n          $fallbackStyle={fallbackStyle}\n          onChange={(e: FormEvent<HTMLInputElement>) => {\n            onChange && handleChange(e.currentTarget.value)\n            onInputChange && onInputChange(e)\n          }}\n          onWheel={(e: WheelEvent<HTMLInputElement>) => e.currentTarget.blur()}\n          onBlur={onBlur}\n        />\n      </Box>\n    </Field>\n  )\n})\n","import React, { FC, ReactNode, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../../Box'\nimport { SupportMessage } from '../../SupportMessage'\nimport { Text } from '../../Text'\nimport { noop } from '../../utils/noop'\nimport { CurrencyInput, CurrencyInputProps } from '../CurrencyInput'\n\nconst variationList: CurrencyInputProps[] = [\n  {\n    id: 'days',\n    placeholder: '200',\n    errorMsg: 'This field is required',\n    label: 'Amount',\n    onChange: noop,\n    onInputChange: noop,\n    onBlur: noop,\n    value: '',\n  },\n]\n\nexport const CollectionPage: FC = () => {\n  const [, setValue] = useState('')\n\n  return (\n    <Box flex direction=\"column\">\n      {variationList.map(({ id, placeholder, errorMsg, label }) => {\n        return (\n          <Box key={id} flex direction=\"column\" mb=\"32px\">\n            <Title tag=\"span\" typo=\"header-medium\">\n              CurrencyInput variations\n            </Title>\n            <Row label=\"Generic\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Fallback\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                fallbackStyle={true}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Disabled\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                disabled={true}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Required\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                required={true}\n                placeholder={placeholder}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Assistive text\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                assistiveText=\"Some assistive text\"\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Completed\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                error={false}\n                completed={true}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"As title\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                renderAsTitle={true}\n                placeholder={placeholder}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Error\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                required={true}\n                placeholder={placeholder}\n                assistiveText=\"Some assistive text\"\n                error={true}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"React element error\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                required={true}\n                value=\"\"\n                placeholder={placeholder}\n                error={true}\n                errorMsg={\n                  <SupportMessage type=\"warning\" description=\"error!!\" />\n                }\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Fallback Error\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                required={true}\n                value=\"\"\n                placeholder={placeholder}\n                fallbackStyle={true}\n                error={true}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nconst Row: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <RowWrapper mt=\"32px\">\n      <Box width=\"140px\">\n        <Text tag=\"span\" typo=\"label-large\">\n          {label}\n        </Text>\n      </Box>\n      {children}\n    </RowWrapper>\n  )\n}\n\nconst RowWrapper = styled(Box)`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n`\n\nconst LABEL_WIDTH = '140px'\n\nconst Title = styled(Text)`\n  margin-bottom: 12px;\n  font-size: 18px;\n  line-height: 20px;\n  margin-left: ${LABEL_WIDTH};\n`\n","import React, { useState } from 'react'\n\nimport { CurrencyInput } from '../CurrencyInput'\n\nexport const Example = () => {\n  const [value, setValue] = useState('')\n\n  return (\n    <form>\n      <CurrencyInput\n        id=\"numberInput\"\n        label=\"Amount paid\"\n        name=\"numberInput\"\n        onChange={(e) => setValue(e)}\n        placeholder=\"100.00\"\n        value={value}\n        min={-200}\n        max={200}\n        required\n      />\n    </form>\n  )\n}\n"],"names":["cov_qo0f1wvub","path","hash","global","gcv","coverageData","coverage","actualCoverage","CurrencyInput","s","forwardRef","CurrencyInput2","id","idProp","placeholder","name","value","decimalNumber","b","onChange","onInputChange","onBlur","min","max","disabled","error","fallbackStyle","fieldProps","ref","f","useUniqueId","frontIcon","formatCurrency","value2","decimalIndex","indexOf","Math","trunc","Number","toString","length","fractionalString","substring","applyMinMax","numberValue","cov_28daeqm5i5","variationList","errorMsg","label","noop","CollectionPage","setValue","useState","React","createElement","Box","flex","direction","map","key","mb","Title","tag","typo","Row","required","assistiveText","completed","renderAsTitle","SupportMessage","type","description","cov_1u9doyz17l","Example","e"],"mappings":"2tBA2FA,SAAAA,GAAA,CAAA,IAAAC,EAAA,kFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,kFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA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,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OA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"}