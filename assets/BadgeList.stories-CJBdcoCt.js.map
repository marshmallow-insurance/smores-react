{"version":3,"file":"BadgeList.stories-CJBdcoCt.js","sources":["../../src/BadgeList/BadgeList.tsx"],"sourcesContent":["import React from 'react'\nimport { Badge, type BadgeProps } from '../Badge/Badge'\nimport { Box } from '../Box'\nimport styled from 'styled-components'\nimport { Tooltip } from '../Tooltip'\nimport type { TooltipProps } from '../Tooltip/Tooltip'\n\ntype WithTooltip = Pick<TooltipProps, 'title' | 'content'> & {\n  position?: TooltipProps['position']\n}\n\nexport type BadgeListBadge = BadgeProps & { tooltip?: WithTooltip }\n\ntype Props = {\n  badges: Omit<BadgeListBadge, 'zIndex'>[]\n}\n\nexport function BadgeList({ badges }: Props) {\n  const badgeZIndexMax = badges.length * 10 + 10\n\n  return (\n    <Container flex>\n      {badges.map((badge, index) => (\n        <WithTooltip\n          key={badge.src}\n          badge={{ ...badge, zIndex: badgeZIndexMax - index * 10 }}\n        />\n      ))}\n    </Container>\n  )\n}\n\ntype WithTooltipProps = {\n  badge: BadgeListBadge\n}\n\nconst WithTooltip = ({ badge: { tooltip, ...badge } }: WithTooltipProps) => {\n  if (tooltip) {\n    return (\n      <div style={{ zIndex: badge.zIndex }}>\n        <Tooltip\n          position={tooltip.position ?? 'bottom'}\n          title={tooltip?.title}\n          content={tooltip.content}\n        >\n          <Badge key={badge.src} {...badge} />\n        </Tooltip>\n      </div>\n    )\n  }\n\n  return <Badge key={badge.src} {...badge} />\n}\n\nconst Container = styled(Box)`\n  & > * {\n    transition: margin-right 0.2s ease-in-out;\n    margin-right: -10px;\n  }\n\n  &:hover {\n    & > * {\n      margin-right: 5px;\n    }\n  }\n`\n"],"names":["cov_1g2y71trl3","path","hash","global","gcv","coverageData","coverage","actualCoverage","BadgeList","badges","f","badgeZIndexMax","s","length","React","createElement","Container","flex","map","badge","index","WithTooltip","key","src","zIndex","tooltip","b","style","Tooltip"],"mappings":"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"}