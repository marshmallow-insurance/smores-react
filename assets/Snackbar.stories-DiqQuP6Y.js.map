{"version":3,"file":"Snackbar.stories-DiqQuP6Y.js","sources":["../../src/Snackbar/SnackbarItem.tsx","../../src/Snackbar/SnackbarContainer.tsx","../../src/Snackbar/hooks.ts","../../src/Snackbar/storybook/Snackbar.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Box } from '../Box'\nimport { useTimeout } from '../hooks'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { Snackbar } from './types'\n\ninterface Props extends Snackbar {\n  deleteSnack: (id: string) => void\n}\n\nexport const SnackbarItem: FC<Props> = ({\n  autoCloseTime = 4,\n  id,\n  message,\n  leadingIcon,\n  canManuallyClose,\n  showCloseIcon,\n  deleteSnack,\n}) => {\n  useTimeout(() => deleteSnack(id), autoCloseTime * 1000)\n\n  return (\n    <SnackItem p=\"16px\" key={id} mt=\"16px\" flex justifyContent=\"space-between\">\n      <Box flex alignItems=\"center\">\n        {leadingIcon && (\n          <Icon mr=\"12px\" render={leadingIcon} size={24} color=\"mascarpone\" />\n        )}\n        <Text typo=\"body-small\" color=\"mascarpone\">\n          {message}\n        </Text>\n      </Box>\n      {canManuallyClose && (\n        <CloseButton\n          onClick={() => deleteSnack(id)}\n          aria-label={`close snackbar ${message}`}\n        >\n          {showCloseIcon ? (\n            <Icon render=\"cross\" size={16} color=\"mascarpone\" />\n          ) : (\n            <UnderlinedText tag=\"span\" typo=\"headline-small\" color=\"mascarpone\">\n              Dismiss\n            </UnderlinedText>\n          )}\n        </CloseButton>\n      )}\n    </SnackItem>\n  )\n}\n\nconst SnackItem = styled(Box)`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.color.surface.base[900]};\n`\n\nconst CloseButton = styled.button`\n  cursor: pointer;\n`\n\nconst UnderlinedText = styled(Text)`\n  text-decoration: underline;\n`\n","import React, {\n  createContext,\n  FC,\n  useCallback,\n  useContext,\n  useRef,\n  useState,\n} from 'react'\nimport { createPortal } from 'react-dom'\nimport styled from 'styled-components'\nimport { SnackbarItem } from './SnackbarItem'\nimport {\n  CreateSnack,\n  Snackbar,\n  SnackbarContextType,\n  SnackbarContainerProps,\n} from './types'\n\nexport const SnackbarContext = createContext<SnackbarContextType>({\n  addSnackbar: () => {\n    throw new Error('Please add the SnackbarContainer to your application')\n  },\n})\n\nexport const useSnackbarContext = () => useContext(SnackbarContext)\n\nexport const SnackbarContainer: FC<SnackbarContainerProps> = ({\n  children,\n  portalContainer = document.body,\n}) => {\n  const snackbarIdRef = useRef(0)\n  const [snackbars, setSnackbars] = useState<Snackbar[]>([])\n\n  // create snackbar unique ID\n  const newSnackId = useCallback(() => {\n    const newId = `MM_SNACKBAR_${snackbarIdRef.current}`\n    snackbarIdRef.current = +1\n    return newId\n  }, [])\n\n  const addSnackbar = useCallback((snackbar: CreateSnack) => {\n    const newSnack = {\n      ...snackbar,\n      id: newSnackId(),\n    }\n    setSnackbars([...snackbars, newSnack])\n  }, [])\n\n  const deleteSnackbar = (id: string) => {\n    setSnackbars(snackbars.filter((snackbar) => snackbar.id !== id))\n  }\n\n  return (\n    <SnackbarContext.Provider\n      value={{\n        addSnackbar,\n      }}\n    >\n      {children}\n      {createPortal(\n        <SnackbarWrapper>\n          {snackbars.map((snackbar) => (\n            <SnackbarItem\n              key={snackbar.id}\n              {...snackbar}\n              deleteSnack={deleteSnackbar}\n            />\n          ))}\n        </SnackbarWrapper>,\n        portalContainer,\n      )}\n    </SnackbarContext.Provider>\n  )\n}\n\nconst SnackbarWrapper = styled.div`\n  position: fixed;\n  bottom: 35px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  width: 90%;\n  max-width: 875px;\n  z-index: 1000;\n`\n","import { useSnackbarContext } from './SnackbarContainer'\n\nexport const useSnackbar = () => {\n  const { addSnackbar } = useSnackbarContext()\n\n  return { addSnackbar }\n}\n","import { Meta, StoryObj } from '@storybook/react'\nimport React, { FC, useState } from 'react'\nimport { Button } from '../../Button'\nimport { Modal } from '../../Modal'\nimport { Text } from '../../Text'\nimport { SnackbarContainer } from '../SnackbarContainer'\nimport { useSnackbar } from '../hooks'\n\n/**\n *\n * The Snackbar component is used to display short, non-disruptive messages to users.\n *\n * ## Implementation Details\n *\n * The Snackbar component uses React Portal to render outside the normal DOM hierarchy. This allows it to properly overlay all other components, including Modals, that also use portals.\n *\n * ## Usage\n *\n * ```tsx\n * import { SnackbarContainer, useSnackbar } from '@mrshmllw/smores-react'\n *\n * // Wrap your application with the SnackbarContainer\n * const App = () => {\n *   return (\n *     <SnackbarContainer>\n *       <YourAppContent />\n *     </SnackbarContainer>\n *   )\n * }\n * ```\n *\n * ## Working with Modals\n *\n * Snackbars now properly overlay Modals thanks to the React Portal implementation. The Snackbar will appear centered directly over the modal content. Here's an example showing both components together:\n *\n * ```tsx\n * import { SnackbarContainer, useSnackbar, Modal, Button, Text } from '@mrshmllw/smores-react'\n * import { useState } from 'react'\n *\n * const App = () => (\n *   <SnackbarContainer>\n *     <PageWithModalAndSnackbar />\n *   </SnackbarContainer>\n * )\n *\n * const PageWithModalAndSnackbar = () => {\n *   const { addSnackbar } = useSnackbar()\n *   const [showModal, setShowModal] = useState(false)\n *\n *   return (\n *     <>\n *       <Button primary onClick={() => setShowModal(true)} mr=\"16px\">\n *         Open Modal\n *       </Button>\n *       <Button\n *         secondary\n *         onClick={() => {\n *           // This snackbar will appear centered directly over the modal\n *           addSnackbar({\n *             leadingIcon: 'warning',\n *             message: 'Important notification!',\n *             canManuallyClose: true,\n *           })\n *         }}\n *       >\n *         Show Snackbar\n *       </Button>\n *\n *       <Modal\n *         title=\"Sample Modal\"\n *         showModal={showModal}\n *         handleClick={() => setShowModal(false)}\n *       >\n *         <Text>\n *           Click the \"Show Snackbar\" button to see how the snackbar\n *           appears centered directly over this modal.\n *         </Text>\n *       </Modal>\n *     </>\n *   )\n * }\n * ```\n */\nconst meta: Meta<typeof SnackbarContainer> = {\n  title: 'Snackbar',\n  component: SnackbarContainer,\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '64px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof SnackbarContainer>\n\nconst ChildComponent: FC = () => {\n  const { addSnackbar } = useSnackbar()\n\n  return (\n    <>\n      <Button\n        primary\n        onClick={() => {\n          addSnackbar({\n            leadingIcon: 'tick',\n            message: 'Hello there general Kenobi',\n            canManuallyClose: true,\n          })\n        }}\n      >\n        Click me to add a snack!\n      </Button>\n    </>\n  )\n}\n\nexport const Default: Story = {\n  render: () => (\n    <SnackbarContainer>\n      <ChildComponent />\n    </SnackbarContainer>\n  ),\n}\n\nconst WithModalComponent: FC = () => {\n  const { addSnackbar } = useSnackbar()\n  const [showModal, setShowModal] = useState(false)\n\n  return (\n    <>\n      <Button primary onClick={() => setShowModal(true)} mr=\"16px\">\n        Open Modal\n      </Button>\n\n      <Modal\n        title=\"Test Modal\"\n        showModal={showModal}\n        handleClick={() => setShowModal(false)}\n      >\n        <Text mb=\"16px\">\n          This is a test modal. Try clicking the \"Add Snackbar\" button to see\n          how the snackbar appears centered directly over this modal content.\n        </Text>\n        <Button\n          secondary\n          onClick={() => {\n            addSnackbar({\n              leadingIcon: 'warning',\n              message: 'This snackbar appears centered over the modal!',\n              canManuallyClose: true,\n              autoCloseTime: 10,\n            })\n          }}\n        >\n          Add Snackbar\n        </Button>\n      </Modal>\n    </>\n  )\n}\n\nexport const WithModal: Story = {\n  render: () => (\n    <SnackbarContainer>\n      <WithModalComponent />\n    </SnackbarContainer>\n  ),\n}\n"],"names":["cov_21sm2q5wpa","actualCoverage","SnackbarItem","autoCloseTime","id","message","leadingIcon","canManuallyClose","showCloseIcon","deleteSnack","s","useTimeout","React","SnackItem","key","mt","flex","justifyContent","Box","alignItems","mr","Icon","render","size","color","typo","Text","onClick","CloseButton","tag","UnderlinedText","theme","surface","cov_1sn98x8w8z","addSnackbar","createContext","f","Error","useSnackbarContext","useContext","SnackbarContext","SnackbarContainer","children","portalContainer","snackbarIdRef","setSnackbars","newSnackId","useCallback","useState","current","newId","snackbar","snackbars","newSnack","deleteSnackbar","SnackbarWrapper","cov_29t2fklua7","useSnackbar","meta","title","component","decorators","Story","margin","parameters","docs","description","ChildComponent","Button","Default","WithModalComponent","showModal","setShowModal","Modal","WithModal","source","originalSource"],"mappings":"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"}