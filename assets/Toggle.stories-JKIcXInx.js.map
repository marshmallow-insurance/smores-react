{"version":3,"file":"Toggle.stories-JKIcXInx.js","sources":["../../src/Toggle/Toggle.tsx","../../src/Toggle/storybook/Toggle.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../Box'\nimport { theme } from '../theme'\nimport { focusOutline } from '../utils/focusOutline'\nimport { MarginProps } from '../utils/space'\n\nexport type Props = {\n  /** unique ID */\n  id?: string\n  /** checked flag  */\n  checked: boolean\n  disabled?: boolean\n  /** onToggle listener  */\n  onToggle: () => void\n} & MarginProps\n\nexport const Toggle: FC<Props> = ({\n  id,\n  checked,\n  onToggle,\n  disabled,\n  ...marginProps\n}) => {\n  return (\n    <Switch forwardedAs=\"label\" htmlFor={id} {...marginProps}>\n      <Checkbox\n        id={id}\n        disabled={disabled}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onToggle}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            onToggle()\n          }\n        }}\n        aria-label=\"toggle\"\n      />\n      <Slider $disabled={disabled} />\n    </Switch>\n  )\n}\n\nconst Switch = styled(Box)`\n  position: relative;\n  display: inline-block;\n  width: 56px;\n  height: 32px;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n`\n\nconst Slider = styled.span<{ $disabled?: boolean }>`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${theme.colors.oatmeal};\n  border: none;\n  border-radius: 28px;\n  transition: 0.2s background-color;\n  outline: none;\n\n  &:before {\n    position: absolute;\n    content: '';\n    height: 24px;\n    width: 24px;\n    left: 4px;\n    bottom: 4px;\n    background-color: ${theme.colors.mascarpone};\n    transition: 0.2s transform;\n    border-radius: 50%;\n  }\n\n  ${({ $disabled }) =>\n    $disabled\n      ? css`\n          cursor: not-allowed;\n        `\n      : css`\n          &:hover {\n            background-color: ${theme.colors.marzipan};\n          }\n        `}\n`\n\nconst Checkbox = styled.input`\n  ${focusOutline({ selector: `&:focus-visible + ${Slider}` })}\n\n  &:checked + ${Slider} {\n    background-color: ${theme.colors.pistachio};\n    border: none;\n  }\n\n  &:checked + ${Slider}:before {\n    transform: translateX(24px);\n  }\n`\n","import { useArgs } from '@storybook/preview-api'\nimport { Meta, StoryObj } from '@storybook/react'\nimport { expect, fn, userEvent, waitFor, within } from '@storybook/test'\nimport React from 'react'\nimport { Props, Toggle } from '../Toggle'\n\nconst Render = (args: Props) => {\n  const [{ checked }, updateArgs] = useArgs<Props>()\n\n  function onChange() {\n    args.onToggle()\n    updateArgs({ checked: !checked })\n  }\n\n  return <Toggle {...args} onToggle={onChange} checked={checked} />\n}\n\nconst meta: Meta<typeof Toggle> = {\n  title: 'Toggle',\n  component: Toggle,\n  args: {\n    checked: true,\n  },\n  render: Render,\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof Toggle>\n\nexport const Primary: Story = {\n  args: {\n    onToggle: fn(),\n    checked: true,\n  },\n  render: Render,\n  play: async ({ args, canvasElement }) => {\n    const canvas = within(canvasElement)\n    const checkbox = canvas.getByRole('checkbox', { name: 'toggle' })\n    await userEvent.click(checkbox)\n    await waitFor(() => expect(args.onToggle).toHaveBeenCalled())\n  },\n}\n\nexport const Disabled: Story = {\n  render: Render,\n  args: {\n    checked: false,\n    disabled: true,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement)\n    const checkbox = canvas.getByRole('checkbox', { name: 'toggle' })\n    await userEvent.click(checkbox)\n    await expect(checkbox).toBeDisabled()\n  },\n}\n"],"names":["cov_2bed1qo1sj","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","Toggle","id","checked","onToggle","disabled","marginProps","f","React","createElement","Switch","forwardedAs","htmlFor","Checkbox","type","onChange","onKeyDown","e","key","b","Slider","$disabled","styled","Box","span","theme","colors","oatmeal","mascarpone","css","useArgs","Render","args","updateArgs","meta","title","component","render","Primary","fn","play","canvasElement","checkbox","within","getByRole","name","userEvent","click","waitFor","expect","toHaveBeenCalled","Disabled","toBeDisabled","parameters","docs","source","originalSource"],"mappings":"qXA2CA,SAAAA,GAAA,CAAA,IAAAC,EAAA,oEAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,oEAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,eAAA,CAAA,QAAA,EAAA,KAAA,KAAA,QAAA,CAAA,mEAAA,EAAA,MAAA,CAAA,EAAA,SAAA,+9BAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAE,EAAAD,EAAAL,CAAA,EAAAD,OAAAA,YAAA,CAAA,OAAAO,CAAA,EAAAA,CAAAP,CAAAA,EA3CA,EAkBkCA,EAAA,EAAAQ,EAAA,CAAA,UAa1BC,EAAAA,CAAA,CAAAC,GAAAA,EAEAC,QAAAA,EACMC,SAAAA,EACOC,SAAAA,EACX,GAAAC,CAAA,KACFd,EAAA,EAAAe,OAAAf,EAAA,EAAAQ,EAAA,CAAA,IACWQ,EAAAC,cAAAC,EAAA,CAAAC,YAAA,QAAAC,QAAAV,EAAA,GAAAI,CAAA,EAEbE,EAAAC,cAAAI,EAGNX,CAAAA,GAAAA,EAEMG,SAAAA,EAAmBS,KAAA,WAAAX,QAAAA,EAAAY,SAAAX,EAAAY,UAAAC,GAAA,CAAAzB,EAAA,EAAAe,EAAA,CAAA,IAAAf,EAAAQ,EAAAA,EAAA,CAAA,IAAAiB,EAAAC,MAAA,SAAA1B,EAAA2B,EAAAA,EAAA3B,CAAAA,EAAAA,CAAAA,IAAAA,IAAAQ,EAAA,CAAA,IAAAI,EAAA,GAAAZ,EAAA2B,EAAAA,SAAA,EAAA,aAAA,SAAA,EAAAX,EAAAC,cAAAW,GAAAC,UAAAhB,CAAA,CAAA,CAazB,GAAsBK,GAAAlB,EAAA,EAAAQ,EAAAsB,CAAAA,IAAAA,EAAAC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOoBH,GAAA5B,IAAAQ,EAAA,CAAA,IAAAsB,EAAAE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,sBAaKC,EAAAC,OAAAC,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAqBvBF,EAAMC,OAAOE,UAAS;AAAA;AAAA;AAAA;AAAA;AAAA,IAIxB,CAAA,CAAAP,UAAAA,CAAA,KAAA7B,EAAA,EAAAe,EAAA,CAAA,IAAAf,IAAAQ,OAAAqB,GAAA7B,EAAA2B,EAAAA,UAAAU;AAAAA;AAAAA,YAAArC,EAAA,EAAA2B,EAAA,CAAA,EAAA,CAAA;;;;;;;;;;;;;;;;w3VCvGtB,KAAA,CAAA,QAAAW,CAAwB,EAAA,iCAMlBC,EAAUC,GAAgB,CAC9B,KAAM,CAAC,CAAE7B,QAAAA,CAAAA,EAAW8B,CAAU,EAAIH,EAAe,EAEjD,SAASf,GAAW,CAClBiB,EAAK5B,SAAS,EACH6B,EAAA,CAAE9B,QAAS,CAACA,CAAAA,CAAS,CAAA,CAGlC,uBAAQF,MAAW+B,EAAM,SAAUjB,EAAU,QAAAZ,EAAmB,CAClE,EAEM+B,EAA4B,CAChCC,MAAO,SACPC,UAAWnC,EACX+B,KAAM,CACJ7B,QAAS,EACX,EACAkC,OAAQN,CACV,EAMaO,EAAiB,CAC5BN,KAAM,CACJ5B,SAAUmC,EAAG,EACbpC,QAAS,EACX,EACAkC,OAAQN,EACRS,KAAM,MAAO,CAAER,KAAAA,EAAMS,cAAAA,CAAAA,IAAoB,CAEjCC,MAAAA,EADSC,EAAOF,CAAa,EACXG,UAAU,WAAY,CAAEC,KAAM,QAAA,CAAU,EAC1DC,MAAAA,EAAUC,MAAML,CAAQ,EAC9B,MAAMM,EAAQ,IAAMC,EAAOjB,EAAK5B,QAAQ,EAAE8C,kBAAkB,CAAA,CAEhE,EAEaC,EAAkB,CAC7Bd,OAAQN,EACRC,KAAM,CACJ7B,QAAS,GACTE,SAAU,EACZ,EACAmC,KAAM,MAAO,CAAEC,cAAAA,CAAAA,IAAoB,CAE3BC,MAAAA,EADSC,EAAOF,CAAa,EACXG,UAAU,WAAY,CAAEC,KAAM,QAAA,CAAU,EAC1DC,MAAAA,EAAUC,MAAML,CAAQ,EACxBO,MAAAA,EAAOP,CAAQ,EAAEU,aAAa,CAAA,CAExC,YAAAd,EAAAe,WAAA,CAAA,GAAAf,EAAAe,WAAAC,KAAA,CAAA,IAAAhB,EAAAA,EAAAe,aAAAf,YAAAA,EAAAgB,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAlB,GAAAA,EAAAA,EAAAe,aAAAf,YAAAA,EAAAgB,OAAAhB,YAAAA,EAAAiB,MAAAA,CAAA,CAAA,YAAAJ,EAAAE,WAAA,CAAA,GAAAF,EAAAE,WAAAC,KAAA,CAAA,IAAAH,EAAAA,EAAAE,aAAAF,YAAAA,EAAAG,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAL,GAAAA,EAAAA,EAAAE,aAAAF,YAAAA,EAAAG,OAAAH,YAAAA,EAAAI,MAAAA,CAAA,CAAA"}