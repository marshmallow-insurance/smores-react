{"version":3,"file":"Snackbar.stories-HCPMsCac.js","sources":["../../src/Snackbar/SnackbarItem.tsx","../../src/Snackbar/SnackbarContainer.tsx","../../src/Snackbar/hooks.ts","../../src/Snackbar/storybook/Snackbar.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { Box } from '../Box'\nimport { useTimeout } from '../hooks'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { theme } from '../theme'\nimport { Snackbar } from './types'\n\ninterface Props extends Snackbar {\n  deleteSnack: (id: string) => void\n}\n\nexport const SnackbarItem: FC<Props> = ({\n  autoCloseTime = 4,\n  id,\n  message,\n  leadingIcon,\n  canManuallyClose,\n  showCloseIcon,\n  deleteSnack,\n}) => {\n  useTimeout(() => deleteSnack(id), autoCloseTime * 1000)\n\n  return (\n    <SnackItem p=\"16px\" key={id} mt=\"16px\" flex justifyContent=\"space-between\">\n      <Box flex alignItems=\"center\">\n        {leadingIcon && (\n          <Icon mr=\"12px\" render={leadingIcon} size={24} color=\"mascarpone\" />\n        )}\n        <Text typo=\"body-small\" color=\"mascarpone\">\n          {message}\n        </Text>\n      </Box>\n      {canManuallyClose && (\n        <CloseButton\n          onClick={() => deleteSnack(id)}\n          aria-label={`close snackbar ${message}`}\n        >\n          {showCloseIcon ? (\n            <Icon render=\"cross\" size={16} color=\"mascarpone\" />\n          ) : (\n            <UnderlinedText tag=\"span\" typo=\"headline-small\" color=\"mascarpone\">\n              Dismiss\n            </UnderlinedText>\n          )}\n        </CloseButton>\n      )}\n    </SnackItem>\n  )\n}\n\nconst SnackItem = styled(Box)`\n  border-radius: 16px;\n  background-color: ${theme.colors.liquorice};\n`\n\nconst CloseButton = styled.button`\n  cursor: pointer;\n`\n\nconst UnderlinedText = styled(Text)`\n  text-decoration: underline;\n`\n","import React, {\n  createContext,\n  FC,\n  useCallback,\n  useContext,\n  useRef,\n  useState,\n} from 'react'\nimport { createPortal } from 'react-dom'\nimport styled from 'styled-components'\nimport { SnackbarItem } from './SnackbarItem'\nimport {\n  CreateSnack,\n  Snackbar,\n  SnackbarContextType,\n  SnackbarContainerProps,\n} from './types'\n\nexport const SnackbarContext = createContext<SnackbarContextType>({\n  addSnackbar: () => {\n    throw new Error('Please add the SnackbarContainer to your application')\n  },\n})\n\nexport const useSnackbarContext = () => useContext(SnackbarContext)\n\nexport const SnackbarContainer: FC<SnackbarContainerProps> = ({\n  children,\n  portalContainer = document.body,\n}) => {\n  const snackbarIdRef = useRef(0)\n  const [snackbars, setSnackbars] = useState<Snackbar[]>([])\n\n  // create snackbar unique ID\n  const newSnackId = useCallback(() => {\n    const newId = `MM_SNACKBAR_${snackbarIdRef.current}`\n    snackbarIdRef.current = +1\n    return newId\n  }, [])\n\n  const addSnackbar = useCallback((snackbar: CreateSnack) => {\n    const newSnack = {\n      ...snackbar,\n      id: newSnackId(),\n    }\n    setSnackbars([...snackbars, newSnack])\n  }, [])\n\n  const deleteSnackbar = (id: string) => {\n    setSnackbars(snackbars.filter((snackbar) => snackbar.id !== id))\n  }\n\n  return (\n    <SnackbarContext.Provider\n      value={{\n        addSnackbar,\n      }}\n    >\n      {children}\n      {createPortal(\n        <SnackbarWrapper>\n          {snackbars.map((snackbar) => (\n            <SnackbarItem\n              key={snackbar.id}\n              {...snackbar}\n              deleteSnack={deleteSnackbar}\n            />\n          ))}\n        </SnackbarWrapper>,\n        portalContainer,\n      )}\n    </SnackbarContext.Provider>\n  )\n}\n\nconst SnackbarWrapper = styled.div`\n  position: fixed;\n  bottom: 35px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  width: 90%;\n  max-width: 875px;\n  z-index: 1000;\n`\n","import { useSnackbarContext } from './SnackbarContainer'\n\nexport const useSnackbar = () => {\n  const { addSnackbar } = useSnackbarContext()\n\n  return { addSnackbar }\n}\n","import { Meta, StoryObj } from '@storybook/react'\nimport React, { FC, useState } from 'react'\nimport { Button } from '../../Button'\nimport { Modal } from '../../Modal'\nimport { Text } from '../../Text'\nimport { SnackbarContainer } from '../SnackbarContainer'\nimport { useSnackbar } from '../hooks'\n\n/**\n *\n * The Snackbar component is used to display short, non-disruptive messages to users.\n *\n * ## Implementation Details\n *\n * The Snackbar component uses React Portal to render outside the normal DOM hierarchy. This allows it to properly overlay all other components, including Modals, that also use portals.\n *\n * ## Usage\n *\n * ```tsx\n * import { SnackbarContainer, useSnackbar } from '@mrshmllw/smores-react'\n *\n * // Wrap your application with the SnackbarContainer\n * const App = () => {\n *   return (\n *     <SnackbarContainer>\n *       <YourAppContent />\n *     </SnackbarContainer>\n *   )\n * }\n * ```\n *\n * ## Working with Modals\n *\n * Snackbars now properly overlay Modals thanks to the React Portal implementation. The Snackbar will appear centered directly over the modal content. Here's an example showing both components together:\n *\n * ```tsx\n * import { SnackbarContainer, useSnackbar, Modal, Button, Text } from '@mrshmllw/smores-react'\n * import { useState } from 'react'\n *\n * const App = () => (\n *   <SnackbarContainer>\n *     <PageWithModalAndSnackbar />\n *   </SnackbarContainer>\n * )\n *\n * const PageWithModalAndSnackbar = () => {\n *   const { addSnackbar } = useSnackbar()\n *   const [showModal, setShowModal] = useState(false)\n *\n *   return (\n *     <>\n *       <Button primary onClick={() => setShowModal(true)} mr=\"16px\">\n *         Open Modal\n *       </Button>\n *       <Button\n *         secondary\n *         onClick={() => {\n *           // This snackbar will appear centered directly over the modal\n *           addSnackbar({\n *             leadingIcon: 'warning',\n *             message: 'Important notification!',\n *             canManuallyClose: true,\n *           })\n *         }}\n *       >\n *         Show Snackbar\n *       </Button>\n *\n *       <Modal\n *         title=\"Sample Modal\"\n *         showModal={showModal}\n *         handleClick={() => setShowModal(false)}\n *       >\n *         <Text>\n *           Click the \"Show Snackbar\" button to see how the snackbar\n *           appears centered directly over this modal.\n *         </Text>\n *       </Modal>\n *     </>\n *   )\n * }\n * ```\n */\nconst meta: Meta<typeof SnackbarContainer> = {\n  title: 'Snackbar',\n  component: SnackbarContainer,\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '64px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof SnackbarContainer>\n\nconst ChildComponent: FC = () => {\n  const { addSnackbar } = useSnackbar()\n\n  return (\n    <>\n      <Button\n        primary\n        onClick={() => {\n          addSnackbar({\n            leadingIcon: 'tick',\n            message: 'Hello there general Kenobi',\n            canManuallyClose: true,\n          })\n        }}\n      >\n        Click me to add a snack!\n      </Button>\n    </>\n  )\n}\n\nexport const Default: Story = {\n  render: () => (\n    <SnackbarContainer>\n      <ChildComponent />\n    </SnackbarContainer>\n  ),\n}\n\nconst WithModalComponent: FC = () => {\n  const { addSnackbar } = useSnackbar()\n  const [showModal, setShowModal] = useState(false)\n\n  return (\n    <>\n      <Button primary onClick={() => setShowModal(true)} mr=\"16px\">\n        Open Modal\n      </Button>\n\n      <Modal\n        title=\"Test Modal\"\n        showModal={showModal}\n        handleClick={() => setShowModal(false)}\n      >\n        <Text mb=\"16px\">\n          This is a test modal. Try clicking the \"Add Snackbar\" button to see\n          how the snackbar appears centered directly over this modal content.\n        </Text>\n        <Button\n          secondary\n          onClick={() => {\n            addSnackbar({\n              leadingIcon: 'warning',\n              message: 'This snackbar appears centered over the modal!',\n              canManuallyClose: true,\n              autoCloseTime: 10,\n            })\n          }}\n        >\n          Add Snackbar\n        </Button>\n      </Modal>\n    </>\n  )\n}\n\nexport const WithModal: Story = {\n  render: () => (\n    <SnackbarContainer>\n      <WithModalComponent />\n    </SnackbarContainer>\n  ),\n}\n"],"names":["cov_21sm2q5wpa","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","SnackbarItem","autoCloseTime","b","id","message","leadingIcon","canManuallyClose","showCloseIcon","deleteSnack","f","useTimeout","React","createElement","SnackItem","p","key","mt","flex","justifyContent","Box","alignItems","Icon","mr","render","size","color","CloseButton","cov_1sn98x8w8z","createContext","addSnackbar","Error","useSnackbarContext","useContext","SnackbarContext","SnackbarContainer","children","portalContainer","document","body","useRef","snackbars","setSnackbars","useState","newSnackId","useCallback","newId","snackbarIdRef","current","snackbar","newSnack","deleteSnackbar","filter","Provider","value","createPortal","SnackbarWrapper","map","cov_29t2fklua7","useSnackbar","meta","title","component","decorators","Story","margin","parameters","docs","description","ChildComponent","Button","Default","WithModalComponent","showModal","setShowModal","Modal","Text","WithModal","source","originalSource"],"mappings":"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A,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAA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"}