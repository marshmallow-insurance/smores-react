{"version":3,"file":"BadgeList.stories-BFUpiEfK.js","sources":["../../src/BadgeList/BadgeList.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Badge, type BadgeProps } from '../Badge/Badge'\nimport { Box } from '../Box'\nimport styled from 'styled-components'\nimport { Tooltip } from '../Tooltip'\nimport type { TooltipProps } from '../Tooltip/Tooltip'\nimport { Text } from '../Text'\nimport { theme } from '../theme'\n\ntype WithTooltip = Pick<TooltipProps, 'title' | 'content'> & {\n  position?: TooltipProps['position']\n}\n\nexport type BadgeListBadge = BadgeProps & { tooltip?: WithTooltip }\n\ntype Props = {\n  size?: BadgeProps['size']\n  limit?: number\n  badges: Omit<BadgeListBadge, 'zIndex'>[]\n}\n\nexport function BadgeList({ badges, limit, size }: Props) {\n  const badgeZIndexMax = badges.length * 10 + 10\n  const limitExcess =\n    // TODO: off by one adjustments work, just hard to read, refactor for human eyes 👁️👄👁️\n    limit && (badges.length + 1 > limit ? badges.length - limit + 1 : 0)\n\n  const maxBadges = limit ? limit - 1 : undefined\n\n  return (\n    <Container flex>\n      {badges.slice(0, maxBadges).map((badge, index) => (\n        <WithTooltip\n          key={typeof badge.src === 'string' ? badge.src : index}\n          badge={{\n            ...badge,\n            zIndex: badgeZIndexMax - index * 10,\n            size,\n          }}\n        />\n      ))}\n\n      {limitExcess !== undefined && Boolean(limitExcess) && (\n        <Badge\n          title={`+${limitExcess}`}\n          borderColour=\"oatmeal\"\n          size={size}\n          src={<ExcessBadge excess={limitExcess} />}\n          zIndex={badgeZIndexMax}\n          disabled\n        />\n      )}\n    </Container>\n  )\n}\n\ntype ExcessBadgeProps = {\n  excess: number\n}\n\nfunction ExcessBadge({ excess }: ExcessBadgeProps) {\n  return (\n    <ExcessBadgeContainer>\n      <Text typo=\"caption\" style={{ fontWeight: 'bold' }}>\n        +{excess}\n      </Text>\n    </ExcessBadgeContainer>\n  )\n}\n\nconst ExcessBadgeContainer = styled.div`\n  display: flex;\n  align-items: center;\n  place-content: center;\n  width: 100%;\n  height: 100%;\n  background-color: ${theme.colors.oatmeal};\n  pointer-events: none;\n`\n\ntype WithTooltipProps = {\n  badge: BadgeListBadge\n}\n\nconst WithTooltip = ({ badge: { tooltip, ...badge } }: WithTooltipProps) => {\n  const [hovered, setHover] = useState(false)\n\n  const handleMouseEnter = () => setHover(true)\n  const handleMouseLeave = () => setHover(false)\n\n  const classNames = [hovered ? 'hovered' : ''].join(' ')\n\n  if (tooltip) {\n    return (\n      <div\n        className={classNames}\n        style={{ zIndex: badge.zIndex }}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n      >\n        <Tooltip\n          position={tooltip.position ?? 'bottom'}\n          title={tooltip?.title}\n          content={tooltip.content}\n        >\n          <Badge {...badge} />\n        </Tooltip>\n      </div>\n    )\n  }\n\n  return (\n    <div\n      className={classNames}\n      style={{ zIndex: badge.zIndex }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <Badge {...badge} />\n    </div>\n  )\n}\n\nconst Container = styled(Box)`\n  & > * {\n    transition:\n      margin 0.2s ease-in-out,\n      padding 0.2s ease-in-out;\n    margin-right: -15px;\n  }\n\n  &:hover > *.hovered:not(:first-child) {\n    padding-left: 10px;\n    &:not(:last-child) {\n      padding-right: 0px;\n    }\n  }\n`\n"],"names":["cov_1g2y71trl3","path","hash","global","gcv","coverageData","coverage","actualCoverage","BadgeList","badges","limit","size","f","badgeZIndexMax","s","length","limitExcess","b","maxBadges","React","createElement","Container","flex","slice","map","badge","index","WithTooltip","key","src","zIndex","Boolean","Badge","title","borderColour","ExcessBadge","excess","disabled","ExcessBadgeContainer","Text","typo","style","fontWeight","styled","div","theme","colors","oatmeal","tooltip","hovered","setHover","useState","handleMouseEnter","handleMouseLeave","classNames","join","className","onMouseEnter","onMouseLeave"],"mappings":"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AAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EA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"}