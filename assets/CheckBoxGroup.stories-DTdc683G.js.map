{"version":3,"file":"CheckBoxGroup.stories-DTdc683G.js","sources":["../../src/CheckBoxGroup/CheckBoxGroup.tsx","../../src/CheckBoxGroup/storybook/CheckBoxGroup.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../Box'\nimport { CheckBox } from '../CheckBox'\nimport { MarginProps } from '../utils/space'\n\ntype Item = {\n  id: number\n  label: string\n  checked: boolean\n  value?: string | number\n}\n\ntype CheckBoxGroupProps = {\n  list: Item[]\n  onToggle: (id: number) => void\n  isColumn?: boolean\n} & MarginProps\n\nexport const CheckBoxGroup: FC<CheckBoxGroupProps> = ({\n  list,\n  onToggle,\n  isColumn = true,\n  ...marginProps\n}) => (\n  <Container isColumn={isColumn}>\n    {list.map((item) => (\n      <CheckBox\n        key={item.id}\n        id={String(item.id)}\n        checked={item.checked}\n        toggle={() => onToggle(item.id)}\n        {...marginProps}\n      >\n        {item.label}\n      </CheckBox>\n    ))}\n  </Container>\n)\n\nconst Container = styled(Box)<{ isColumn: boolean }>`\n  display: flex;\n  flex-direction: ${(p) => (p.isColumn ? 'column' : 'row')};\n  gap: 16px;\n`\n","import { Meta, StoryObj } from '@storybook/react'\nimport React, { useState } from 'react'\nimport { CheckBoxGroup } from '../../CheckBoxGroup'\n\nconst meta: Meta<typeof CheckBoxGroup> = {\n  title: 'Checkbox Group',\n  component: CheckBoxGroup,\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '64px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof CheckBoxGroup>\n\nconst options = [\n  {\n    id: 0,\n    label: 'Apples',\n    checked: false,\n  },\n  {\n    id: 1,\n    label: 'Oranges',\n    checked: false,\n  },\n  {\n    id: 2,\n    label: 'Grapes',\n    checked: false,\n  },\n  {\n    id: 3,\n    label: 'Bananas',\n    checked: false,\n  },\n]\n\nexport const Default: Story = {\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [list, setList] = useState(options)\n\n    const toggleCheck = (id: number) => {\n      const newList = [...list]\n      newList[id].checked = !list[id].checked\n      setList(newList)\n    }\n\n    return <CheckBoxGroup list={options} onToggle={toggleCheck} />\n  },\n}\n"],"names":["CheckBoxGroup","list","onToggle","isColumn","cov_1glagmkg2y","b","marginProps","meta","title","component","decorators","Story","React","margin","options","id","label","checked","Default","render","setList","useState","toggleCheck","newList","parameters","docs","source","originalSource"],"mappings":"48GAyCM,MAAAA,EAAsBA,CAAA,CAAAC,KAAAA,EAAAC,SAAAA,EAE8BC,SAAAA,GAAAC,EAAA,EAAAC,EAAA,CAAA,EAAA,CAAA,IAAA,IAAA,GAAAC;;;;;;;;;0vXCvC1D,MAAMC,EAAmC,CACvCC,MAAO,iBACPC,UAAWT,EACXU,WAAY,CAERC,GAAAC,EAAA,cAAC,OAAI,MAAO,CAAEC,OAAQ,MACpB,CAAA,EAAAD,EAAA,cAACD,EAAK,IAAA,CACR,CACD,CAEL,EAMMG,EAAU,CACd,CACEC,GAAI,EACJC,MAAO,SACPC,QAAS,EACX,EACA,CACEF,GAAI,EACJC,MAAO,UACPC,QAAS,EACX,EACA,CACEF,GAAI,EACJC,MAAO,SACPC,QAAS,EACX,EACA,CACEF,GAAI,EACJC,MAAO,UACPC,QAAS,EACX,CAAC,EAGUC,EAAiB,CAC5BC,OAAQA,IAAM,CAEZ,KAAM,CAAClB,EAAMmB,CAAO,EAAIC,EAAAA,SAASP,CAAO,EAElCQ,EAAeP,GAAe,CAC5BQ,MAAAA,EAAU,CAAC,GAAGtB,CAAI,EACxBsB,EAAQR,CAAE,EAAEE,QAAU,CAAChB,EAAKc,CAAE,EAAEE,QAChCG,EAAQG,CAAO,CACjB,EAEA,OAAQX,EAAA,cAAAZ,EAAA,CAAc,KAAMc,EAAS,SAAUQ,EAAc,CAAA,CAEjE,YAAAJ,EAAAM,WAAA,CAAA,GAAAN,EAAAM,WAAAC,KAAA,CAAA,IAAAP,EAAAA,EAAAM,aAAAN,YAAAA,EAAAO,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAT,GAAAA,EAAAA,EAAAM,aAAAN,YAAAA,EAAAO,OAAAP,YAAAA,EAAAQ,MAAAA,CAAA,CAAA"}