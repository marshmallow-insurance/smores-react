{"version":3,"file":"SearchInput.stories-68656a27.js","sources":["../../src/SearchInput/SearchOptions.tsx","../../src/SearchInput/SearchInput.tsx","../../src/SearchInput/Container.tsx"],"sourcesContent":["import { Box } from '../Box'\nimport React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { theme } from '../theme'\nimport { darken } from 'polished'\n\ntype Option = {\n  label: string\n  value: string\n}\n\ntype SearchOptionsProps = {\n  displayedList: Array<Option>\n  onSelect: (option: Option) => void\n  positionRelative: boolean\n}\n\nexport const SearchOptions: FC<SearchOptionsProps> = ({\n  displayedList,\n  onSelect,\n  positionRelative,\n}) => {\n  return (\n    <BoxWithPositionRelative>\n      <StyledResultsContainer positionRelative={positionRelative}>\n        <ResultsList>\n          {displayedList.length ? (\n            displayedList.map((el, i) => (\n              <li key={i} onClick={() => onSelect(el)}>\n                {el.label}\n              </li>\n            ))\n          ) : (\n            <li>No results</li>\n          )}\n        </ResultsList>\n      </StyledResultsContainer>\n    </BoxWithPositionRelative>\n  )\n}\n\nconst StyledResultsContainer = styled.div<\n  Pick<SearchOptionsProps, 'positionRelative'>\n>`\n  box-sizing: border-box;\n  overflow-y: hidden;\n  ${({ positionRelative }) => !positionRelative && 'position: absolute;'}\n  width: 100%;\n  left: 0px;\n  top: -8px;\n\n  ul {\n    max-height: 192px;\n  }\n`\n\nconst ResultsList = styled.ul`\n  position: relative;\n  list-style: none;\n  overflow-y: auto;\n  padding: 0;\n  margin: 0;\n  background-color: ${theme.colors.custard};\n  border-radius: 12px;\n  margin-top: 14px;\n  z-index: 1000;\n\n  li {\n    padding: 16px 14px;\n    box-sizing: border-box;\n    font-size: 16px;\n    color: ${theme.colors.liquorice};\n    cursor: pointer;\n\n    &:hover {\n      background-color: ${darken(0.1, theme.colors.custard)};\n    }\n  }\n`\n\nconst BoxWithPositionRelative = styled(Box)`\n  position: relative;\n`\n","import React, {\n  ChangeEvent,\n  FocusEvent,\n  forwardRef,\n  useMemo,\n  useState,\n} from 'react'\nimport { Field } from '../fields/Field'\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\nimport { useUniqueId } from '../utils/id'\nimport { useControllableState } from '../utils/useControlledState'\nimport { SearchOptions } from './SearchOptions'\nimport { Input, StyledFrontIcon } from '../fields/components/CommonInput'\nimport { Box } from '../Box'\n\nexport type SearchInputItem = {\n  label: string\n  value: string\n}\n\nexport interface SearchInputProps extends CommonFieldProps {\n  name?: string\n  placeholder?: string\n  searchList: SearchInputItem[]\n  onFound: (element: string) => void\n  showIcon?: boolean\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void\n  value?: string\n  resultsRelativePosition?: boolean\n}\n\nexport const SearchInput = forwardRef<HTMLInputElement, SearchInputProps>(\n  function SearchInput(\n    {\n      id: idProp,\n      name = 'search_input',\n      className = '',\n      placeholder,\n      searchList,\n      showIcon = false,\n      renderAsTitle = false,\n      value,\n      onBlur,\n      onFound,\n      fallbackStyle,\n      resultsRelativePosition = false,\n      ...otherProps\n    },\n    ref,\n  ) {\n    const id = useUniqueId(idProp)\n    const [showOptions, setShowOptions] = useState(false)\n    const [selectedValue, setSelectedValue] = useControllableState<\n      string | null\n    >({\n      initialState: null,\n      stateProp: value,\n    })\n\n    const [searchQuery, setSearchQuery] = useState<string | null>(null)\n\n    const filteredList = useMemo(() => {\n      if (searchQuery === null || searchQuery === '') {\n        return searchList\n      }\n\n      return searchList.filter(({ label }) =>\n        label.toLowerCase().includes(searchQuery.toLocaleLowerCase()),\n      )\n    }, [searchQuery])\n\n    const getDisplayedInputText = () => {\n      if (searchQuery !== null) {\n        return searchQuery\n      }\n\n      if (selectedValue !== null) {\n        return (\n          searchList.find(\n            (option) =>\n              option.label === selectedValue || option.value === selectedValue,\n          )?.label || ''\n        )\n      }\n\n      return ''\n    }\n\n    const isSelected = selectedValue !== null\n    const displayedInputText = getDisplayedInputText()\n\n    const updateSearchQuery = (query: string | null) => {\n      setSearchQuery(query)\n\n      if (query === null) {\n        setShowOptions(false)\n      } else {\n        setShowOptions(2 <= query.length)\n      }\n    }\n\n    const handleInputChange = (event: ChangeEvent<HTMLInputElement>): void => {\n      const nextValue = event.currentTarget.value\n      updateSearchQuery(nextValue)\n    }\n\n    const handleSelect = (nextValue: SearchInputItem): void => {\n      updateSearchQuery(null)\n\n      setSelectedValue(nextValue.label)\n      onFound(nextValue.value)\n    }\n\n    return (\n      <Field\n        className={className}\n        renderAsTitle={renderAsTitle}\n        htmlFor={id}\n        {...otherProps}\n      >\n        <Box flex alignItems=\"center\" justifyContent=\"flex-start\">\n          {showIcon && <StyledFrontIcon render=\"search\" color=\"sesame\" />}\n          <Input\n            id={id}\n            name={name}\n            ref={ref}\n            placeholder={placeholder}\n            frontIcon={showIcon ? 'present' : ''}\n            fallbackStyle={fallbackStyle}\n            autoComplete=\"off\"\n            value={displayedInputText}\n            onChange={handleInputChange}\n            selected={isSelected}\n            onBlur={(e) => {\n              if (displayedInputText === '') {\n                setSearchQuery(null)\n              }\n              onBlur?.(e)\n            }}\n          />\n        </Box>\n\n        {showOptions && (\n          <SearchOptions\n            displayedList={filteredList}\n            onSelect={handleSelect}\n            positionRelative={resultsRelativePosition}\n          />\n        )}\n      </Field>\n    )\n  },\n)\n","import React, { FC } from 'react'\nimport { SearchInput, SearchInputProps } from './SearchInput'\n\nconst list = [\n  {\n    label: 'Monday',\n    value: 'Monday',\n  },\n  {\n    label: 'Tuesday',\n    value: 'Tuesday',\n  },\n  {\n    label: 'Wednesday',\n    value: 'Wednesday',\n  },\n  {\n    label: 'Thursday',\n    value: 'Thursday',\n  },\n  {\n    label: 'Friday',\n    value: 'Friday',\n  },\n  {\n    label: 'Saturday',\n    value: 'Saturday',\n  },\n  {\n    label: 'Sunday',\n    value: 'Sunday',\n  },\n]\n\nexport const Container: FC<SearchInputProps> = ({ showIcon }) => {\n  return (\n    <SearchInput\n      id=\"days\"\n      label=\"Days\"\n      placeholder=\"Search days\"\n      searchList={list}\n      onFound={(val) => console.log('found', val)}\n      showIcon={showIcon}\n    />\n  )\n}\n"],"names":["SearchOptions","displayedList","onSelect","positionRelative","jsx","BoxWithPositionRelative","StyledResultsContainer","ResultsList","el","i","styled","theme","darken","Box","SearchInput","forwardRef","idProp","name","className","placeholder","searchList","showIcon","renderAsTitle","value","onBlur","onFound","fallbackStyle","resultsRelativePosition","otherProps","ref","id","useUniqueId","showOptions","setShowOptions","useState","selectedValue","setSelectedValue","useControllableState","searchQuery","setSearchQuery","filteredList","useMemo","label","getDisplayedInputText","_a","option","isSelected","displayedInputText","updateSearchQuery","query","jsxs","Field","StyledFrontIcon","Input","event","nextValue","list","Container","val"],"mappings":"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"}