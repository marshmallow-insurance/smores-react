{"version":3,"file":"Banner.stories-D6qbk4Rt.js","sources":["../../src/Banner/BannerItem.tsx","../../src/Banner/BannerContainer.tsx","../../src/Banner/hooks.ts","../../src/Banner/storybook/Banner.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled, { css } from 'styled-components'\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { useTimeout } from '../hooks'\nimport { Color, theme } from '../theme'\nimport { Banner } from './types'\n\ntype StylesItem = {\n  iconColor: Color\n  backgroundColor: string\n  textColor: Color\n}\n\ntype BannerType = 'upsell' | 'critical' | 'general' | 'success'\n\nconst styles: Record<BannerType, StylesItem> = {\n  upsell: {\n    iconColor: 'liquorice',\n    backgroundColor: theme.colors.marshmallowPink,\n    textColor: 'liquorice',\n  },\n  critical: {\n    iconColor: 'cream',\n    backgroundColor: theme.colors.strawberry,\n    textColor: 'cream',\n  },\n  general: {\n    iconColor: 'cream',\n    backgroundColor: theme.colors.liquorice,\n    textColor: 'cream',\n  },\n  success: {\n    iconColor: 'cream',\n    backgroundColor: theme.colors.apple,\n    textColor: 'cream',\n  },\n}\n\ninterface Props extends Banner {\n  deleteBanner: (id: string) => void\n}\n\nexport const BannerItem: FC<Props> = ({\n  type,\n  autoCloseTime = 4,\n  id,\n  message,\n  topOffset,\n  exploreAction,\n  showExploreText,\n  showExploreIcon,\n  leadingIcon,\n  canManuallyClose,\n  showCloseIcon,\n  deleteBanner,\n  noTimeout,\n}) => {\n  const autoCloseBaner = () => {\n    if (noTimeout) return\n    if (type !== 'critical') return deleteBanner(id)\n    else {\n      return\n    }\n  }\n  useTimeout(() => autoCloseBaner(), autoCloseTime * 1000)\n\n  const textColor = styles[type].textColor\n  const iconColor = styles[type].iconColor\n\n  return (\n    <BannerWrapper\n      p=\"24px\"\n      mt={{ custom: topOffset }}\n      key={id}\n      flex\n      justifyContent=\"space-between\"\n      $type={type}\n    >\n      <Box flex alignItems=\"center\">\n        {leadingIcon && (\n          <Icon mr=\"12px\" render={leadingIcon} size={24} color={iconColor} />\n        )}\n        <Text typo=\"headline-small\" color={textColor}>\n          {message}\n        </Text>\n      </Box>\n      <Box flex alignItems=\"center\">\n        {canManuallyClose && (\n          <GenericButton\n            onClick={() => deleteBanner(id)}\n            aria-label={`close banner ${message}`}\n          >\n            {showCloseIcon ? (\n              <Icon render=\"cross\" size={16} color={iconColor} />\n            ) : (\n              <UnderlinedText\n                tag=\"span\"\n                typo=\"headline-small\"\n                color={textColor}\n              >\n                Dismiss\n              </UnderlinedText>\n            )}\n          </GenericButton>\n        )}\n        {exploreAction && (\n          <GenericButton onClick={exploreAction} aria-label={`cta ${message}`}>\n            <Box flex alignItems=\"center\">\n              {showExploreText && (\n                <UnderlinedText\n                  ml=\"12px\"\n                  tag=\"span\"\n                  typo=\"headline-small\"\n                  color={textColor}\n                >\n                  Explore\n                </UnderlinedText>\n              )}\n              {showExploreIcon && (\n                <Icon\n                  render=\"arrow\"\n                  ml=\"12px\"\n                  size={24}\n                  color={iconColor}\n                  rotate={180}\n                />\n              )}\n            </Box>\n          </GenericButton>\n        )}\n      </Box>\n    </BannerWrapper>\n  )\n}\n\nconst BannerWrapper = styled(Box)<TransientProps<Pick<Banner, 'type'>>>(\n  ({ $type }) => css`\n    border-radius: 0px 0px 16px 16px;\n    background-color: ${styles[$type].backgroundColor};\n  `,\n)\n\nconst GenericButton = styled.button`\n  cursor: pointer;\n`\n\nconst UnderlinedText = styled(Text)`\n  text-decoration: underline;\n`\n","import React, {\n  createContext,\n  FC,\n  useState,\n  useCallback,\n  ReactNode,\n  useContext,\n} from 'react'\nimport styled from 'styled-components'\nimport { BannerItem } from './BannerItem'\nimport { CreateBanner, Banner, BannerContextType } from './types'\n\nexport const BannerContext = createContext<BannerContextType>({\n  addBanner: () => {\n    throw new Error('Please add the BannerContainer to your application')\n  },\n})\n\nexport const useBannerContext = () => useContext(BannerContext)\n\nexport const BannerContainer: FC<{ children?: ReactNode }> = ({ children }) => {\n  let bannerId = 0\n  const [banner, setBanner] = useState<Banner[]>([])\n\n  // create banner unique ID\n  const newBannerId = useCallback(() => {\n    const newId = `MM_BANNER_${bannerId}`\n    bannerId++\n    return newId\n  }, [bannerId])\n\n  const addBanner = (banner: CreateBanner) => {\n    const newBanner = {\n      ...banner,\n      id: newBannerId(),\n    }\n    setBanner([newBanner])\n  }\n\n  const deleteBanner = (id: string) => {\n    setBanner(banner.filter((banner) => banner.id !== id))\n  }\n\n  return (\n    <BannerContext.Provider\n      value={{\n        addBanner,\n      }}\n    >\n      {children}\n      <BannerWrapper>\n        {banner.map((banner) => (\n          <BannerItem key={banner.id} {...banner} deleteBanner={deleteBanner} />\n        ))}\n      </BannerWrapper>\n    </BannerContext.Provider>\n  )\n}\n\nconst BannerWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  z-index: 99;\n`\n","import { useBannerContext } from './BannerContainer'\n\nexport const useBanner = () => {\n  const { addBanner } = useBannerContext()\n\n  return { addBanner }\n}\n","import { Meta, StoryObj } from '@storybook/react'\nimport React from 'react'\nimport { Button } from '../../Button'\nimport { BannerContainer } from '../BannerContainer'\nimport { useBanner } from '../hooks'\n\nconst meta: Meta<typeof BannerContainer> = {\n  title: 'BannerContainer',\n  component: BannerContainer,\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '128px' }}>\n        <BannerContainer>\n          <Story />\n        </BannerContainer>\n      </div>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof BannerContainer>\n\nexport const Default: Story = {\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { addBanner } = useBanner()\n    return (\n      <Button\n        primary\n        onClick={() => {\n          addBanner({\n            type: 'general',\n            topOffset: '0px',\n            message: 'Free insurance for 1 month for all our customers',\n          })\n        }}\n      >\n        General banner\n      </Button>\n    )\n  },\n}\n\nexport const General: Story = {\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { addBanner } = useBanner()\n    return (\n      <Button\n        primary\n        onClick={() => {\n          addBanner({\n            type: 'general',\n            topOffset: '0px',\n            leadingIcon: 'wellbeing',\n            message: 'Free insurance for 1 month for all our customers',\n            exploreAction: () => undefined,\n            showExploreText: true,\n            canManuallyClose: true,\n          })\n        }}\n      >\n        General banner\n      </Button>\n    )\n  },\n}\n\nexport const Upsell: Story = {\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { addBanner } = useBanner()\n    return (\n      <Button\n        primary\n        onClick={() => {\n          addBanner({\n            type: 'upsell',\n            topOffset: '0px',\n            leadingIcon: 'circle-tick',\n            message: 'Get up to Â£19.34 off your plan today',\n            exploreAction: () => undefined,\n            showExploreIcon: true,\n          })\n        }}\n      >\n        Upsell banner\n      </Button>\n    )\n  },\n}\n\nexport const Success: Story = {\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { addBanner } = useBanner()\n    return (\n      <Button\n        primary\n        onClick={() => {\n          addBanner({\n            type: 'success',\n            topOffset: '0px',\n            leadingIcon: 'circle-tick',\n            message: 'Marshmallow Miles discount applied',\n          })\n        }}\n      >\n        Success banner\n      </Button>\n    )\n  },\n}\n\nexport const Critical: Story = {\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { addBanner } = useBanner()\n    return (\n      <Button\n        primary\n        onClick={() => {\n          addBanner({\n            type: 'critical',\n            topOffset: '0px',\n            leadingIcon: 'card',\n            message: 'Your card needs to be updated',\n            canManuallyClose: true,\n          })\n        }}\n      >\n        Critical banner\n      </Button>\n    )\n  },\n}\n\nexport const NoTimeout: Story = {\n  render: () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { addBanner } = useBanner()\n    return (\n      <Button\n        primary\n        onClick={() => {\n          addBanner({\n            type: 'success',\n            topOffset: '0px',\n            leadingIcon: 'circle-tick',\n            message: 'Marshmallow Miles discount applied (no timeout)',\n            noTimeout: true,\n          })\n        }}\n      >\n        Success banner (no timeout)\n      </Button>\n    )\n  },\n}\n"],"names":["cov_2nuogf443e","path","hash","global","gcv","coverageData","coverage","actualCoverage","styles","s","upsell","iconColor","backgroundColor","theme","colors","marshmallowPink","textColor","critical","strawberry","general","liquorice","success","apple","BannerItem","type","autoCloseTime","b","id","message","topOffset","exploreAction","showExploreText","showExploreIcon","leadingIcon","canManuallyClose","showCloseIcon","deleteBanner","noTimeout","f","autoCloseBaner","useTimeout","React","createElement","BannerWrapper","p","mt","custom","key","flex","justifyContent","$type","Box","alignItems","Icon","mr","render","size","color","Text","typo","GenericButton","onClick","UnderlinedText","tag","cov_2ezlk4ujry","BannerContext","createContext","addBanner","Error","useBannerContext","useContext","BannerContainer","children","bannerId","banner","setBanner","useState","useCallback","newId","banner2","newBanner","newBannerId","filter","Provider","value","cov_ny31qjx4k","useBanner","meta","title","component","decorators","Story","margin","Default","Button","General","Upsell","Success","Critical","NoTimeout","parameters","docs","source","originalSource"],"mappings":"qkBAqCI,SAAAA,GAAA,CAAA,IAAAC,EAAA,wEAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,wEAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,ccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EA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AAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,C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"}