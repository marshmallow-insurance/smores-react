{"version":3,"file":"Pagination.stories-B-Jronb2.js","sources":["../../src/Pagination/Pagination.tsx","../../src/Pagination/storybook/Pagination.stories.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\n\nimport { focusOutlineStyle } from '../utils/focusOutline'\nimport { MarginProps } from '../utils/space'\n\nconst MAX_PAGES = 7\nconst MAX_ADDITIONAL_PAGES = Math.ceil(MAX_PAGES / 2)\n\nexport type PaginationProps = {\n  /** Total number of records  */\n  total: number\n  /** Number of records per page  */\n  partition: number\n  /** Handle page change */\n  handlePageChange: (page: number) => void\n  /** Sets current page number */\n  currentPage?: number\n} & MarginProps\n\nexport const Pagination: FC<PaginationProps> = ({\n  total,\n  partition,\n  handlePageChange,\n  currentPage,\n  ...marginProps\n}) => {\n  const [lastPage, setLastPage] = useState(0)\n  const [activePage, setActivePage] = useState(1)\n  const [pages, setPages] = useState<number[]>([])\n  const [shownPages, setShownPages] = useState<number[]>([])\n  const [showFirstDots, setShowFirstDots] = useState(false)\n  const [showLastDots, setShowLastDots] = useState(false)\n\n  useEffect(() => {\n    // This is a rather hacky fix, in theory it should be listening to total, but because the total comes from the same endpoint as the data, it forces a reset to 1 every time\n    // Using lastPage seems to bypass that\n    if (currentPage) {\n      setActivePage(currentPage)\n    } else {\n      setActivePage(1)\n    }\n  }, [lastPage, currentPage])\n\n  useEffect(() => {\n    const numberOfPages = Math.ceil(total / partition)\n    if (numberOfPages > 1) {\n      setLastPage(numberOfPages)\n    } else if (numberOfPages === 1) {\n      // Sets last page to be null to avoid the last page being kept from previous state.\n      setLastPage(0)\n    }\n    if (numberOfPages > 2) {\n      const allPages = Array.from({ length: numberOfPages }, (_, i) => i + 1)\n      setPages(allPages.slice(1, numberOfPages - 1))\n    } else {\n      // Sets pages to empty to avoid using the previous state if pages set before.\n      setPages([])\n    }\n  }, [total, partition])\n\n  useEffect(() => {\n    if (lastPage <= MAX_PAGES) {\n      setShownPages(pages)\n    } else if (activePage <= MAX_ADDITIONAL_PAGES) {\n      setShownPages(pages.slice(0, MAX_ADDITIONAL_PAGES))\n    } else if (activePage > lastPage - MAX_ADDITIONAL_PAGES) {\n      setShownPages(pages.slice(pages.length - MAX_ADDITIONAL_PAGES))\n    } else {\n      const activePageIndex = pages.indexOf(activePage)\n      setShownPages(pages.slice(activePageIndex - 1, activePageIndex + 2))\n    }\n  }, [lastPage, activePage, pages])\n\n  useEffect(() => {\n    setShowFirstDots(shownPages[0] !== pages[0])\n    setShowLastDots(\n      shownPages[shownPages.length - 1] !== pages[pages.length - 1],\n    )\n  }, [shownPages, pages])\n\n  const movePage = (page: number) => {\n    if (page > 0 && page <= lastPage) {\n      setActivePage(page)\n      handlePageChange(page)\n    }\n  }\n\n  return (\n    <Container flex direction=\"row\" {...marginProps}>\n      {activePage - 1 > 0 && (\n        <IconBox\n          aria-label=\"previous-page\"\n          onClick={() => movePage(activePage - 1)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(activePage - 1)\n            }\n          }}\n        >\n          <Icon size={18} render=\"arrow\" />\n        </IconBox>\n      )}\n      <PageBox $active={activePage === 1} onClick={() => movePage(1)}>\n        <Text\n          typo={activePage === 1 ? 'headline-small' : 'body-regular'}\n          tag=\"p\"\n        >\n          1\n        </Text>\n      </PageBox>\n      {showFirstDots && (\n        <PageBox>\n          <Text tag=\"p\">...</Text>\n        </PageBox>\n      )}\n      {shownPages.map((i) => {\n        return (\n          <PageBox\n            $active={activePage === i}\n            key={i}\n            onClick={() => movePage(i)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                movePage(i)\n              }\n            }}\n          >\n            <Text\n              typo={activePage === i ? 'headline-small' : 'body-regular'}\n              tag=\"p\"\n            >\n              {i}\n            </Text>\n          </PageBox>\n        )\n      })}\n      {showLastDots && (\n        <PageBox>\n          <Text tag=\"p\">...</Text>\n        </PageBox>\n      )}\n      {Boolean(lastPage) && (\n        <PageBox\n          $active={activePage === lastPage}\n          onClick={() => movePage(lastPage)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(lastPage)\n            }\n          }}\n        >\n          <Text\n            typo={activePage === lastPage ? 'headline-small' : 'body-regular'}\n            tag=\"p\"\n          >\n            {lastPage}\n          </Text>\n        </PageBox>\n      )}\n      {activePage + 1 <= lastPage && (\n        <IconBox\n          aria-label=\"next-page\"\n          onClick={() => movePage(activePage + 1)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(activePage + 1)\n            }\n          }}\n        >\n          <Icon size={18} render=\"arrow\" rotate={180} />\n        </IconBox>\n      )}\n    </Container>\n  )\n}\n\ninterface IPageBox {\n  $active?: boolean\n}\n\nconst Container = styled(Box)`\n  align-items: center;\n  > button {\n    margin-right: 4px;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`\n\nconst PageBox = styled.button<IPageBox>`\n  background: ${({ $active, theme }) =>\n    $active ? theme.color.surface.base[300] : theme.color.surface.base['000']};\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  border-radius: 24px;\n  width: fit-content;\n  padding: 0px 4px;\n  height: 24px;\n  min-width: 24px;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.color.surface.base[300]};\n  }\n  &:active {\n    background-color: ${({ theme }) => theme.color.surface.base[200]};\n  }\n\n  ${focusOutlineStyle}\n`\n\nconst IconBox = styled.button<IPageBox>`\n  cursor: pointer;\n\n  ${focusOutlineStyle}\n`\n","import { Meta, StoryObj } from '@storybook/react'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '../../Box'\nimport { Pagination } from '../Pagination'\n\nconst BgWrapper = styled(Box)`\n  background: ${({ theme }) => theme.color.surface.base[100]};\n`\n\nconst meta: Meta<typeof Pagination> = {\n  title: 'Pagination',\n  component: Pagination,\n  argTypes: { handlePageChange: { action: 'pageChanged' } },\n  decorators: [\n    (Story) => (\n      <BgWrapper height=\"100px\" flex alignItems=\"center\">\n        <Story />\n      </BgWrapper>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof Pagination>\n\nexport const Default: Story = {\n  args: {\n    total: 123,\n    partition: 1,\n  },\n}\n\nexport const LongerPagination: Story = {\n  args: {\n    total: 11,\n    partition: 1,\n  },\n}\n"],"names":["cov_9dhxdgs9j","actualCoverage","MAX_ADDITIONAL_PAGES","MAX_PAGES","Pagination","partition","handlePageChange","currentPage","marginProps","lastPage","setLastPage","activePage","setActivePage","useState","pages","setPages","shownPages","setShownPages","showFirstDots","setShowFirstDots","showLastDots","setShowLastDots","useEffect","s","numberOfPages","total","allPages","length","i","slice","b","activePageIndex","movePage","page","React","Container","direction","IconBox","onClick","size","Icon","render","$active","typo","tag","PageBox","Text","key","rotate","styled","theme","color","focusOutlineStyle","BgWrapper","Box","surface","base","meta","title","component","argTypes","action","decorators","Story","Default","args","LongerPagination","parameters","docs","source","originalSource"],"mappings":"spfA+BS,OAAAA,EAAAC,UAAA,CAAA,OAAAA,CAAA,EAAAA,CAAAD,CA/BTA,EAAO,EAWP,MAAME,GAAAA,EAAAF,EAAAA,EAAAA,CAAAA,IAAA,GAA8CA,GAAAA,IAAA,EAAA,CAAA,IAAA,KAAA,KAAAG,EAAA,CAAA,GAa7CH,IAAMI,EAAAA,CAAAA,IACX,MAAAA,EAAA,CAAA,CACAC,MAAAA,EACAC,UAAAA,EACAC,iBAAAA,EACA,YAAAA,EACF,GAAAC,CAAMR,IAAAA,CACJA,EAAOS,EAAA,EAAUC,CAAAA,IACjB,KAAM,CAACC,EAAAD,CAAYE,GAAaZ,EAAAA,EAAAA,EAAA,CAAA,IAAAa,WAAIA,CAAAA,GAC9B,CAACC,EAAOC,CAAQf,GAAAA,EAAA,EAAIa,EAAAA,CAAAA,IAAmBA,WAAE,CAAA,GACzC,CAACG,EAAAA,CAAYC,GAAAA,EAAajB,EAAAA,EAAAA,CAAAA,IAAAa,WAAA,CAAA,CAAIA,GAC9B,CAACK,EAAAA,CAAeC,GAAAA,EAAgBnB,EAAAA,EAAAA,CAAA,IAAAa,WAAIA,CAAAA,CAAAA,GACpC,CAACO,EAAcC,CAAe,GAAArB,EAAA,EAAA,EAAA,CAAA,IAAIa,WAAS,EAAK,GAAAb,CAAAA,EAAAqB,CAAA,GAAArB,EAAA,EAAA,EAAA,CAAA,IAAAa,WAAA,EAAA,GAEtDS,EAAU,EAAM,EAAA,CAAA,IAAAtB,EAAAA,UAAAA,KAAAA,EAAA,EAAAuB,EAAA,CAAA,IAGdvB,IAAI,EAAa,EAAA,IAAAA,GAAAA,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IACfX,EAAA,UACFA,EAAOL,CAAA,IAAAP,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IACLX,EAAA,EAAe,EAAA,EAAA,IACjBA,EAAA,CAAA,EACwBZ,EAAAA,CAAAA,GAAA,CAAA,EAE1BsB,EAAU,EAAM,EAAA,EAAA,IAAAtB,EAAAA,UAAAA,KACdA,EAAMwB,EAAAA,EAAAA,CAAA,IAA2CxB,MAAAA,GAAAA,IAAA,EAAA,EAAA,IAAA,KAAA,KAAAyB,EAAApB,CAAA,GAO1BL,GANvBA,EAAIwB,EAAAA,EAAA,EAAgB,IAAGxB,EAAA,GAAAA,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IACrBb,YACFA,EAAAc,CAAA,IAAAxB,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IAAAvB,EAAWwB,EAAAA,EAAA,EAAA,IAAqBxB,IAAA,GAAAA,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IAE9Bb,EAAa,EAAA,EAAA,EAAA,IACfA,EAAA,CAAA,GAAAV,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,KACAA,EAAIwB,EAAAA,EAAA,EAAgB,IAAGxB,EAAA,EAAA,CACrBA,EAAM0B,IAAA1B,CAAAA,EAAAA,CAAAA,IAAwB2B,MAAAA,GAAQH,IAAAA,EAAAA,EAAAA,IAAAA,MAAAA,KAAAA,CAAc,OAAOA,CAAMxB,EAAAA,CAAAA,EAAAA,KAAAA,EAAA,EAAAuB,EAAA,CAAA,IAAAvB,EAAK,EAAA,EAAA,EAAA,IAAA4B,EAAA,EAAA5B,GACtEe,EAASW,EAAAA,EAASG,EAAAA,IACpBd,EAAOW,EAAA,MAAA,EAAAF,EAAA,CAAA,CAAA,CAAAxB,MAAAA,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IAELR,EAAW,EAAA,EAAA,EAAA,IACbA,EAAA,CAAA,CAAA,CACmBf,EAAAA,CAAAA,EAAAA,CAAA,CAAA,EAErBsB,EAAU,EAAM,EAAA,EAAA,IAAAtB,EAAAA,UAAAA,KACaA,GADbA,EAAA,EAAAuB,EAAA,CAAA,IACdvB,EAAI,EAAYG,EAAAA,EAAAA,IAAWH,KAAAA,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IACzBN,EAAA,MAAmB,IACrBA,EAAAH,CAAA,UAAAd,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IAAAvB,EAAWW,EAAA,EAAcT,EAAAA,IAAsBF,GAAA8B,EAAA9B,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IAC7CN,EAAA,MAAoBY,IACtBZ,EAAAH,EAAA,MAAA,EAAAZ,CAAA,CAAA,UAAAF,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IAAAvB,EAAWW,EAAA,EAAaF,EAAAA,IAAiCT,IAAAE,EAAAF,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IACvDN,EAAA,EAAcH,EAAAA,EAAMe,IACtBZ,EAAOH,EAAA,MAAAA,EAAA,OAAAZ,CAAA,CAAA,MAAAF,CACLA,EAAM+B,EAAAA,EAAAA,CAAAA,EAAA,CAAA,IAA0C/B,MAAAA,GAAAA,EAAA,EAAA,EAAA,EAAA,IAAAc,EAAA,QAAAH,CAAA,GAChDM,EAAA,EAAcH,EAAAA,EAAMe,IACtBZ,EAAAH,EAAA,MAAAiB,EAAA,EAAAA,EAAA,CAAA,CAAA,CAAA,CAC8B/B,EAAAA,CAAAA,IAAAc,CAAA,CAAA,EAEhCQ,EAAU,EAAM,EAAA,EAAA,IAAAtB,EAAAA,UAAAA,KAAAA,EAAA,EAAAuB,EAAA,CAAA,IACdJ,EAAAA,EAAA,QAA2CnB,EAAAgB,EAAA,CAAA,IAAAF,EAAA,CAAA,CAAA,EAC3CO,EAAAA,EACEL,EAAAA,EAAAA,MAEYF,EAAME,EAAA,OAAA,CAAA,IAAAF,EAAAA,EAAA,OAAA,CAAA,CAAA,CAAAd,EAAAA,CAAAA,EAAAuB,CAAA,CAAA,EAEtBvB,EAAMgC,EAAA,EAAYC,EAAAA,IAAiBjC,MAAAA,KAAA,CAAAA,EAAA,EAAAuB,EAAA,CAAA,IACjCvB,EAAIA,EAAAA,EAAA,EAAA,IAA8BA,EAAA8B,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAG,EAAA,IAAAjC,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAiC,GAAAxB,IAAAT,EAAA,EAAAuB,EAAA,CAAA,EAAA,CAAA,IAChCX,EAAA,IAAkB,EAAA,IAAAZ,GAAA,EAClBM,EAAAA,EAAA,QACFA,EAAA2B,CAAA,GAAAjC,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,GACFA,EAEA,OAAAA,EAAA,EAAA,EAAA,EAAA,IACiBkC,EAAA,cAAAC,EAAA,CAACC,KAAAA,GAAiB,UAAG5B,MAAA,GACjCR,CAEG,GAAAA,EAAW,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAW,EAAA,EAAA,IAAAX,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAkC,EAAA,cAAAG,EAAA,CACXC,aAAS,gBAAMtC,QAAAA,KAAAA,EAAA,EAAAuB,EAAA,CAAA,IAAAvB,EAAAgC,EAASrB,EAAAA,EAAAA,IAAcqB,EAAArB,EAAA,CAAA,GACpBX,UAAAA,IAAAA,EAAA,EAAAuB,EAAA,CAAA,IAChBvB,EAAM,UAAiBA,EAAAA,MAAAA,SAAAA,EAAA,EAAAuB,EAAA,EAAA,EAAA,CAAA,IACrBS,EAASrB,EAAAA,EAAAA,EAAA,IACXqB,EAAArB,EAAA,CAAA,GAAAX,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAGIuC,EAAML,EAAA,cAAAM,EAAA,CAAIC,QAClB,OAAA,SAEOC,IAASR,mBAAkBI,QAASA,IAAM,EAAAtC,QAAAA,KAAAA,EAAA,EAAAuB,EAAA,CAAA,IAAAvB,EAAAgC,EAAS,EAAC,EAAA,IAAAA,EAAA,CAAA,EAEzDW,EAAMT,EAAe,cAAAlC,EAAA8B,CACrBc,KAAIjC,IAAA,GAAAX,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAA,mBAAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAA,gBAAA,IAIR,GAGU4C,EAAAA,GAAA,CAAI,GAAA5C,IAAA,EAAA,EAAA,EAAA,CAAA,IAAAkB,IAAAlB,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAAkC,EAAA,cAAAW,EAAA,KAAAX,EAAA,cAAAY,EAAA,CAAA,IAAI,GAGK9C,EAAAA,KAAAA,CAAAA,IAAAA,EAAA,IAAA4B,IAAA5B,EAAA,EAAAuB,EAAA,EAAA,IACrBvB,EAAA,EAAA,EAAA,EAAA,IAEakC,EAAe,cAAAW,EAAA,CACxBE,QAAKpC,IAAAiB,EACLU,IAAAA,EAAetC,QAAAA,KAAAA,EAAA,EAAAuB,EAAA,EAAA,IAAAvB,EAAAgC,EAASJ,EAAC,EAAA,IAAAI,EAAAJ,CAAA,GACP5B,UAAAA,IAAAA,EAAA,EAAAuB,EAAA,EAAA,IAChBvB,EAAM,UAAiBA,EAAAA,MAAAA,SAAAA,EAAA,EAAAuB,EAAA,EAAA,EAAA,CAAA,IACrBS,EAAU,EAAA,EAAA,EAAA,IACZA,EAAAJ,CAAA,GAAA5B,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAIA2C,EAAMT,EAAe,cAAAlC,EAAA8B,CACrBc,KAAIjC,IAAAiB,GAAA5B,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAA,mBAAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAA,gBAAA,IAIR,KAGHA,CAAAA,CAAAA,EAES4C,GAAA5C,EAAI,EAAA,EAAA,EAAA,EAAA,CAAA,IAAAoB,IAAApB,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAAkC,EAAA,cAAAW,EAAA,KAAAX,EAAA,cAAAY,EAAA,CAAA,IAAI,KAKdJ,KAAAA,MAAS/B,EAAeF,EAAAA,EAAAA,EAAA,EAAA,CAAA,IAAA,EAAAA,IAAAT,IAAA,EAAA,EAAA,EAAA,CAAA,IAAAkC,EAAA,cAAAW,EAAA,CACxBP,QAASA,IAAM7B,EAAAT,QAAAA,KAAAA,EAAA,EAAAuB,EAAA,EAAA,IAAAvB,EAAAgC,EAASvB,EAAAA,EAAAA,IAAQuB,EAAAvB,CAAA,GACdT,UAAAA,IAAAA,EAAA,EAAAuB,EAAA,EAAA,IAChBvB,EAAM,UAAiBA,EAAAA,MAAAA,SAAAA,EAAA,EAAAuB,EAAA,EAAA,EAAA,CAAA,IACrBS,MAAiB,EAAA,IACnBA,EAAAvB,CAAA,GAAAT,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAIA2C,EAAMT,EAAezB,cAAAT,EAAAA,CACrB4C,KAAIjC,IAAAF,GAAAT,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAA,mBAAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAA,gBAAA,IAEHS,GAMH,EAAAA,CAAA,CAAA,KAAWT,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAAAW,EAAA,GAAAF,IAAAT,IAAA,EAAA,EAAA,EAAA,CAAA,IAAAkC,EAAA,cAAAG,EAAA,CACXC,aAAS,YAAMtC,QAAAA,KAAAA,EAAA,EAAAuB,EAAA,EAAA,IAAAvB,EAAAgC,EAASrB,EAAAA,EAAAA,IAAcqB,EAAArB,EAAA,CAAA,GACpBX,UAAAA,IAAAA,EAAA,EAAAuB,EAAA,EAAA,IAChBvB,EAAM,UAAiBA,EAAAA,MAAAA,SAAAA,EAAA,EAAAuB,EAAA,EAAA,EAAA,CAAA,IACrBS,EAASrB,EAAAA,EAAAA,EAAA,IACXqB,EAAArB,EAAA,CAAA,GAAAX,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,IAGIuC,qBAAUE,KAAA,GAAeO,OAAQ,QACzC,OAEJ,GAEJ,CAAA,CAAA,GAAA,CAMA;;;;;;;;;MAYiBhD,EAAA,EAAA,EAAA,EAAA,IAAAiD,EAAA;AAAA,gBAAE,CAAA,CAASC,QAAAA,EAAM,MAAAA,CAC9BlD,KAAAA,EAAA,EAAAuB,EAAA,EAAA,IAAAvB,EAAA0C,EAAA,EAAA1C,EAAAA,IAAyE0C,GAAA1C,IAAA,EAAA,EAAA,EAAA,CAAA,IAAAkD,EAAA,MAAA,QAAA,KAAA,GAAA,IAAAlD,IAAA,EAAA,EAAA,EAAA,CAAA,IAAAkD,EAAA,MAAA,QAAA,KAAA,KAAA;;;;;;;;;;;wBAWlDA,CAAAA,CAAM,MAAAA,CAAMlD,KAAAA,EAAA,EAAAuB,EAAA,EAAA,IAAAvB,EAAMmD,EAAAA,EAAA,MAAuBD,EAAA,MAAA,QAAA,KAAA,GAAA;;;wBAGzCA,CAAAA,CAAM,MAAAA,CAAMlD,KAAAA,EAAA,EAAAuB,EAAA,EAAA,IAAAvB,EAAMmD,EAAAA,EAAA,MAAuBD,EAAA,MAAA,QAAA,KAAA,GAAA;;;IAG/CE,CAAA;AAAA;;;IAMAA,CAAA;AAAA,kkWCvNrB,MAAMC,EAAYJ,EAAOK,CAAG;AAAA,gBACZ,CAAC,CAAEJ,MAAAA,CAAM,IAAMA,EAAMC,MAAMI,QAAQC,KAAK,GAAG,CAAC;AAAA,EAGtDC,GAAgC,CACpCC,MAAO,aACPC,UAAWvD,EACXwD,SAAU,CAAEtD,iBAAkB,CAAEuD,OAAQ,aAAA,CAAc,EACtDC,WAAY,CACTC,GACC7B,EAAA,cAACmB,GAAU,OAAO,QAAQ,KAAI,GAAC,WAAW,QAAA,EACxCnB,EAAA,cAAC6B,EAAA,IAAK,CACR,CACD,CAEL,EAMaC,EAAiB,CAC5BC,KAAM,CACJxC,MAAO,IACPpB,UAAW,CAAA,CAEf,EAEa6D,EAA0B,CACrCD,KAAM,CACJxC,MAAO,GACPpB,UAAW,CAAA,CAEf,YAAA2D,EAAAG,WAAA,CAAA,GAAAH,EAAAG,WAAAC,KAAA,CAAA,IAAAJ,EAAAA,EAAAG,aAAAH,YAAAA,EAAAI,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAN,GAAAA,EAAAA,EAAAG,aAAAH,YAAAA,EAAAI,OAAAJ,YAAAA,EAAAK,MAAAA,CAAA,CAAA,YAAAH,EAAAC,WAAA,CAAA,GAAAD,EAAAC,WAAAC,KAAA,CAAA,IAAAF,EAAAA,EAAAC,aAAAD,YAAAA,EAAAE,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAJ,GAAAA,EAAAA,EAAAC,aAAAD,YAAAA,EAAAE,OAAAF,YAAAA,EAAAG,MAAAA,CAAA,CAAA"}