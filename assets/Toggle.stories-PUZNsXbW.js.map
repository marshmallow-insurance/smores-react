{"version":3,"file":"Toggle.stories-PUZNsXbW.js","sources":["../../src/Toggle/Toggle.tsx","../../src/Toggle/storybook/Toggle.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../Box'\nimport { Color, theme } from '../theme'\nimport { focusOutline } from '../utils/focusOutline'\nimport { MarginProps } from '../utils/space'\n\nexport type Props = {\n  /** unique ID */\n  id?: string\n  /** checked flag  */\n  checked: boolean\n  disabled?: boolean\n  /** onToggle listener  */\n  onToggle: () => void\n  bgColor?: Color\n} & MarginProps\n\nexport const Toggle: FC<Props> = ({\n  id,\n  checked,\n  onToggle,\n  disabled,\n  bgColor,\n  ...marginProps\n}) => {\n  return (\n    <Switch forwardedAs=\"label\" htmlFor={id} {...marginProps}>\n      <Checkbox\n        id={id}\n        disabled={disabled}\n        type=\"checkbox\"\n        checked={checked}\n        onChange={onToggle}\n        $bgColor={bgColor}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') {\n            onToggle()\n          }\n        }}\n        aria-label=\"toggle\"\n      />\n      <Slider $disabled={disabled} />\n    </Switch>\n  )\n}\n\nconst Switch = styled(Box)`\n  position: relative;\n  display: inline-block;\n  width: 56px;\n  height: 32px;\n\n  input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n`\n\nconst Slider = styled.span<{ $disabled?: boolean }>`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${theme.colors.oatmeal};\n  border: none;\n  border-radius: 28px;\n  transition: 0.2s background-color;\n  outline: none;\n\n  &:before {\n    position: absolute;\n    content: '';\n    height: 24px;\n    width: 24px;\n    left: 4px;\n    bottom: 4px;\n    background-color: ${theme.colors.mascarpone};\n    transition: 0.2s transform;\n    border-radius: 50%;\n  }\n\n  ${({ $disabled }) =>\n    $disabled\n      ? css`\n          cursor: not-allowed;\n        `\n      : css`\n          &:hover {\n            background-color: ${theme.colors.marzipan};\n          }\n        `}\n`\n\nconst Checkbox = styled.input<{ $bgColor?: Color }>`\n  ${focusOutline({ selector: `&:focus-visible + ${Slider}` })}\n\n  &:checked + ${Slider} {\n    background-color: ${(props) =>\n      props.$bgColor ? theme.colors[props.$bgColor] : theme.colors.pistachio};\n    border: none;\n  }\n\n  &:checked + ${Slider}:before {\n    transform: translateX(24px);\n  }\n`\n","import { useArgs } from '@storybook/preview-api'\nimport { Meta, StoryObj } from '@storybook/react'\nimport { expect, fn, userEvent, waitFor, within } from '@storybook/test'\nimport React from 'react'\nimport { Props, Toggle } from '../Toggle'\n\nconst Render = (args: Props) => {\n  const [{ checked }, updateArgs] = useArgs<Props>()\n\n  function onChange() {\n    args.onToggle()\n    updateArgs({ checked: !checked })\n  }\n\n  return <Toggle {...args} onToggle={onChange} checked={checked} />\n}\n\nconst meta: Meta<typeof Toggle> = {\n  title: 'Toggle',\n  component: Toggle,\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '64px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof Toggle>\n\nexport const Primary: Story = {\n  args: {\n    onToggle: fn(),\n    checked: true,\n  },\n  render: Render,\n  play: async ({ args, canvasElement }) => {\n    const canvas = within(canvasElement)\n    const checkbox = canvas.getByRole('checkbox', { name: 'toggle' })\n    await userEvent.click(checkbox)\n    await waitFor(() => expect(args.onToggle).toHaveBeenCalled())\n  },\n}\n\nexport const Disabled: Story = {\n  args: {\n    checked: false,\n    disabled: true,\n  },\n  render: Render,\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement)\n    const checkbox = canvas.getByRole('checkbox', { name: 'toggle' })\n    await userEvent.click(checkbox)\n    await expect(checkbox).toBeDisabled()\n  },\n}\n"],"names":["cov_2bed1qo1sj","actualCoverage","Toggle","checked","onToggle","disabled","bgColor","marginProps","s","htmlFor","React","Checkbox","type","onChange","$bgColor","onKeyDown","$disabled","focusOutline","styled","selector","Slider","props","theme","useArgs","Render","args","updateArgs","meta","title","component","decorators","Story","margin","Primary","fn","render","play","canvasElement","checkbox","within","getByRole","name","userEvent","click","waitFor","expect","toHaveBeenCalled","Disabled","toBeDisabled","parameters","docs","source","originalSource"],"mappings":"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"}