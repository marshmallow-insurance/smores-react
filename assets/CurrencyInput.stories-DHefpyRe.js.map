{"version":3,"file":"CurrencyInput.stories-DHefpyRe.js","sources":["../../src/CurrencyInput/CurrencyInput.tsx","../../src/CurrencyInput/storybook/CurrencyInput.stories.tsx"],"sourcesContent":["import React, {\n  FocusEvent,\n  FormEvent,\n  ForwardedRef,\n  WheelEvent,\n  forwardRef,\n} from 'react'\n\nimport { Box } from '../Box'\nimport { Field } from '../fields/Field'\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\n\nimport { Input, StyledFrontIcon } from '../fields/components/CommonInput'\nimport { useUniqueId } from '../utils/id'\n\nexport interface Props extends CommonFieldProps {\n  placeholder: string\n  name?: string\n  value: string\n  decimalNumber?: boolean\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void\n  min?: number\n  max?: number\n}\n\n/** on change or on input required */\ntype InputProps =\n  | {\n      /** on change is required and on input optional */\n      onChange: (e: string) => void\n      onInputChange?: (e: FormEvent<HTMLInputElement>) => void\n    }\n  | {\n      /** on input is required and on change optional */\n      onChange?: (e: string) => void\n      onInputChange: (e: FormEvent<HTMLInputElement>) => void\n    }\n\nexport type CurrencyInputProps = Props & InputProps\n\nexport const CurrencyInput = forwardRef(function CurrencyInput(\n  {\n    id: idProp,\n    placeholder,\n    name,\n    value,\n    decimalNumber = true,\n    onChange,\n    onInputChange,\n    onBlur,\n    min,\n    max,\n    disabled = false,\n    error = false,\n    fallbackStyle,\n    ...fieldProps\n  }: CurrencyInputProps,\n  ref: ForwardedRef<HTMLInputElement>,\n) {\n  const id = useUniqueId(idProp)\n  const frontIcon = 'pound-regular'\n\n  const formatCurrency = (value: string) => {\n    const decimalIndex = value.indexOf('.')\n\n    if (!decimalNumber) {\n      return Math.trunc(Number(value)).toString()\n    }\n\n    if (decimalIndex >= 0 && value.length > decimalIndex + 1) {\n      const fractionalString = value.substring(decimalIndex + 1).substring(0, 2)\n      return `${value.substring(0, decimalIndex)}.${fractionalString}`\n    } else {\n      return value\n    }\n  }\n\n  const applyMinMax = (value: string) => {\n    const numberValue = Number(value)\n    if (min && numberValue < min) return min.toString()\n    if (max && numberValue > max) return max.toString()\n    return value\n  }\n\n  const handleChange = (value: string) => {\n    if (onChange === undefined) return\n    const EMPTY_INPUT = ''\n\n    if (value === EMPTY_INPUT) {\n      onChange(value)\n    } else {\n      const amount = formatCurrency(value)\n      const normalisedValue = applyMinMax(amount)\n\n      onChange(normalisedValue)\n    }\n  }\n\n  return (\n    <Field {...fieldProps} htmlFor={id} error={error}>\n      <Box flex alignItems=\"center\" justifyContent=\"flex-start\">\n        <StyledFrontIcon\n          $disabled={disabled}\n          render={frontIcon}\n          color=\"sesame\"\n        />\n        <Input\n          ref={ref}\n          $error={error}\n          disabled={disabled}\n          type=\"number\"\n          id={id}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          $frontIcon={frontIcon}\n          $fallbackStyle={fallbackStyle}\n          onChange={(e: FormEvent<HTMLInputElement>) => {\n            onChange && handleChange(e.currentTarget.value)\n            onInputChange && onInputChange(e)\n          }}\n          onWheel={(e: WheelEvent<HTMLInputElement>) => e.currentTarget.blur()}\n          onBlur={onBlur}\n        />\n      </Box>\n    </Field>\n  )\n})\n","import { useArgs } from '@storybook/preview-api'\nimport { Meta, StoryObj } from '@storybook/react'\nimport React from 'react'\nimport { SupportMessage } from '../../SupportMessage'\nimport { CurrencyInput, CurrencyInputProps } from '../CurrencyInput'\n\nconst meta: Meta<typeof CurrencyInput> = {\n  title: 'CurrencyInput',\n  component: CurrencyInput,\n  argTypes: { onChange: { action: 'changed' } },\n  args: {\n    placeholder: '200',\n    errorMsg: 'This field is required',\n    label: 'Amount',\n  },\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '64px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\nexport default meta\n\nconst InteractiveTemplate = (args: CurrencyInputProps) => {\n  const [{ value }, updateArgs] = useArgs<CurrencyInputProps>()\n\n  const handleChange = (e: string) => {\n    updateArgs({ value: String(e) })\n    args?.onChange?.(e)\n  }\n\n  return <CurrencyInput {...args} value={value} onChange={handleChange} />\n}\n\ntype Story = StoryObj<typeof CurrencyInput>\n\nexport const Default: Story = {\n  args: {\n    id: 'total_amount',\n    label: 'Total Amount',\n    name: 'totalAmount',\n    placeholder: '0',\n  },\n}\n\nexport const DefaultFallback: Story = {\n  args: {\n    id: 'amount',\n    label: 'Amount',\n    name: 'amount',\n    placeholder: '200',\n    required: true,\n    fallbackStyle: true,\n  },\n}\n\nexport const Generic: Story = {\n  args: {},\n  render: InteractiveTemplate,\n}\n\nexport const Fallback: Story = {\n  args: {\n    fallbackStyle: true,\n  },\n  render: InteractiveTemplate,\n}\n\nexport const Disabled: Story = {\n  args: {\n    disabled: true,\n  },\n  render: InteractiveTemplate,\n}\n\nexport const Required: Story = {\n  args: {\n    required: true,\n  },\n  render: InteractiveTemplate,\n}\nexport const AssistiveText: Story = {\n  args: {\n    assistiveText: 'Some assistive text',\n  },\n  render: InteractiveTemplate,\n}\n\nexport const Completed: Story = {\n  args: {\n    completed: true,\n  },\n  render: InteractiveTemplate,\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: false,\n          },\n        ],\n      },\n    },\n  },\n}\n\nexport const AsTitle: Story = {\n  args: {\n    renderAsTitle: true,\n  },\n  render: InteractiveTemplate,\n}\nexport const Error: Story = {\n  args: {\n    required: true,\n    assistiveText: 'Some assistive text',\n    error: true,\n  },\n  render: InteractiveTemplate,\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: false,\n          },\n        ],\n      },\n    },\n  },\n}\n\nexport const ReactElementError: Story = {\n  args: {\n    label: 'Amount',\n    required: true,\n    placeholder: '200',\n    error: true,\n    errorMsg: <SupportMessage type=\"warning\" description=\"error!!\" />,\n  },\n  render: InteractiveTemplate,\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: false,\n          },\n        ],\n      },\n    },\n  },\n}\n\nexport const FallbackError: Story = {\n  args: {\n    label: 'Amount',\n    required: true,\n    placeholder: '200',\n    fallbackStyle: true,\n    error: true,\n    errorMsg: 'This field is required',\n  },\n  render: InteractiveTemplate,\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: false,\n          },\n        ],\n      },\n    },\n  },\n}\n"],"names":["cov_qo0f1wvub","path","hash","global","gcv","coverageData","coverage","actualCoverage","CurrencyInput","s","forwardRef","value","id","idProp","placeholder","name","decimalNumber","b","onChange","onInputChange","onBlur","min","max","disabled","error","fallbackStyle","fieldProps","ref","f","useUniqueId","frontIcon","formatCurrency","value2","decimalIndex","indexOf","Math","trunc","Number","toString","length","fractionalString","substring","applyMinMax","numberValue","useArgs","meta","title","component","argTypes","action","args","errorMsg","label","decorators","Story","React","margin","InteractiveTemplate","updateArgs","handleChange","e","String","Default","DefaultFallback","required","Generic","render","Fallback","Disabled","Required","AssistiveText","assistiveText","Completed","completed","parameters","a11y","config","rules","enabled","AsTitle","renderAsTitle","Error","ReactElementError","SupportMessage","FallbackError","docs","source","originalSource"],"mappings":"8mBA2FY,SAAAA,GAAA,CAAA,IAAAC,EAAA,kFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,kFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA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"}