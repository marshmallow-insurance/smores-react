{"version":3,"file":"Button.stories-7cd04151.js","sources":["../../src/Button/InteractivePlayground.tsx","../../src/Button/Collection.tsx"],"sourcesContent":["import React, { FC, useState } from 'react'\n\nimport { Button } from './Button'\n\nfunction sleep(delay: number) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, delay)\n  })\n}\n\nexport const InteractivePlayground: FC = () => {\n  const [isLoading, setIsLoading] = useState(false)\n\n  const handleClick = async () => {\n    setIsLoading(true)\n    await sleep(1000)\n    setIsLoading(false)\n  }\n\n  return (\n    <Button primary icon=\"info\" handleClick={handleClick} loading={isLoading}>\n      Get started\n    </Button>\n  )\n}\n","import React, { FC, ReactNode } from 'react'\nimport styled from 'styled-components'\n\nimport { Text } from '../Text'\nimport { Box } from '../Box'\nimport { Button, ButtonProps } from './Button'\n\nexport const buttonList: Array<ButtonProps> = [\n  { primary: true, children: 'Save' },\n  { secondary: true, children: 'Edit' },\n  { fallbackStyle: true, children: 'Cancel' },\n  { textBtn: true, children: 'View' },\n  { smallButton: true, children: 'Small' },\n]\n\nexport const CollectionPage: FC = () => {\n  return (\n    <Wrapper>\n      <Section label=\"Default\">\n        <Row label=\"Default\">\n          {buttonList.map((props, index) => (\n            <Button key={index} {...props} />\n          ))}\n        </Row>\n        <Row label=\"Loading\">\n          {buttonList.map((props, index) => (\n            <Button key={index} {...props} loading />\n          ))}\n        </Row>\n        <Row label=\"Disabled\">\n          {buttonList.map((props, index) => (\n            <Button key={index} {...props} disabled />\n          ))}\n        </Row>\n      </Section>\n      <Section label=\"With icon\">\n        <Row label=\"Default\">\n          {buttonList.map((props, index) => (\n            <Button key={index} {...props} icon=\"info\" />\n          ))}\n        </Row>\n        <Row label=\"Loading\">\n          {buttonList.map((props, index) => (\n            <Button key={index} {...props} loading icon=\"info\" />\n          ))}\n        </Row>\n        <Row label=\"Disabled\">\n          {buttonList.map((props, index) => (\n            <Button key={index} {...props} disabled icon=\"info\" />\n          ))}\n        </Row>\n      </Section>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 40px;\n`\n\nconst Section: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <Box>\n      <Box mb=\"16px\">\n        <Text tag=\"span\" typo=\"header-small\">\n          {label}\n        </Text>\n      </Box>\n      <Column>{children}</Column>\n    </Box>\n  )\n}\n\nconst Column = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`\n\nconst Row: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <RowWrapper>\n      <Box width=\"80px\">\n        <Text tag=\"span\" typo=\"label-large\">\n          {label}\n        </Text>\n      </Box>\n      {children}\n    </RowWrapper>\n  )\n}\n\nconst RowWrapper = styled(Box)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n`\n"],"names":["sleep","delay","resolve","InteractivePlayground","isLoading","setIsLoading","useState","jsx","Button","buttonList","CollectionPage","jsxs","Wrapper","Section","Row","props","index","styled","Box","label","children","Text","Column","RowWrapper"],"mappings":"sYAIA,SAAAA,EAAAC,EAAA,CACE,OAAA,IAAA,QAAA,SAAAC,EAAA,CACE,WAAAA,EAAAD,CAAA,CAAyB,CAAA,CAE7B,CAEO,MAAAE,EAAA,IAAA,CACL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAQA,OAAAC,EAAAC,EAAA,CAAA,QAAA,GAAA,KAAA,OAAA,YANA,SAAA,CACEH,EAAA,EAAA,EACA,MAAAL,EAAA,GAAA,EACAK,EAAA,EAAA,CAAkB,EAGpB,QAAAD,EAAA,SAAA,aAAA,CAAA,CAKF,gICjBO,MAAAK,EAAA,CAAuC,CAAA,QAAA,GAAA,SAAA,MAAA,EACV,CAAA,UAAA,GAAA,SAAA,MAAA,EACE,CAAA,cAAA,GAAA,SAAA,QAAA,EACM,CAAA,QAAA,GAAA,SAAA,MAAA,EACR,CAAA,YAAA,GAAA,SAAA,OAAA,CAEpC,EAEOC,EAAA,IACLC,EAAAC,EAAA,CAAA,SAAA,CAEID,EAAAE,EAAA,CAAA,MAAA,UAAA,SAAA,CACEN,EAAAO,EAAA,CAAA,MAAA,UAAA,SAAAL,EAAA,IAAA,CAAAM,EAAAC,IAAAT,EAAAC,EAAA,CAAA,GAAAO,GAAAC,CAAA,CAAA,EAAA,EAIAT,EAAAO,EAAA,CAAA,MAAA,UAAA,SAAAL,EAAA,IAAA,CAAAM,EAAAC,IAAAT,EAAAC,EAAA,CAAA,GAAAO,EAAA,QAAA,EAAA,EAAAC,CAAA,CAAA,EAAA,EAKAT,EAAAO,EAAA,CAAA,MAAA,WAAA,SAAAL,EAAA,IAAA,CAAAM,EAAAC,IAAAT,EAAAC,EAAA,CAAA,GAAAO,EAAA,SAAA,EAAA,EAAAC,CAAA,CAAA,EAAA,CAKA,EAAA,EACFL,EAAAE,EAAA,CAAA,MAAA,YAAA,SAAA,CAEEN,EAAAO,EAAA,CAAA,MAAA,UAAA,SAAAL,EAAA,IAAA,CAAAM,EAAAC,IAAAT,EAAAC,EAAA,CAAA,GAAAO,EAAA,KAAA,MAAA,EAAAC,CAAA,CAAA,EAAA,EAIAT,EAAAO,EAAA,CAAA,MAAA,UAAA,SAAAL,EAAA,IAAA,CAAAM,EAAAC,IAAAT,EAAAC,EAAA,CAAA,GAAAO,EAAA,QAAA,GAAA,KAAA,MAAA,EAAAC,CAAA,CAAA,EAAA,EAKAT,EAAAO,EAAA,CAAA,MAAA,WAAA,SAAAL,EAAA,IAAA,CAAAM,EAAAC,IAAAT,EAAAC,EAAA,CAAA,GAAAO,EAAA,SAAA,GAAA,KAAA,MAAA,EAAAC,CAAA,CAAA,EAAA,CAKA,EAAA,CACF,CAAA,CAAA,EAKNJ,EAAAK,EAAAC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOAL,EAAA,CAAA,CAA8D,MAAAM,EAC5D,SAAAC,CAEF,IACET,EAAAO,EAAA,CAAA,SAAA,CAEIX,EAAAW,EAAA,CAAA,GAAA,OAAA,SAAAX,EAAAc,EAAA,CAAA,IAAA,OAAA,KAAA,eAAA,SAAAF,CAAA,CAAA,EAAA,EAIAZ,EAAAe,EAAA,CAAA,SAAAF,EAAA,CACkB,CAAA,CAAA,EAKxBE,EAAAL,EAAAC,CAAA;AAAA;AAAA;AAAA;AAAA,EAMAJ,EAAA,CAAA,CAA0D,MAAAK,EACxD,SAAAC,CAEF,IACET,EAAAY,EAAA,CAAA,SAAA,CAEIhB,EAAAW,EAAA,CAAA,MAAA,OAAA,SAAAX,EAAAc,EAAA,CAAA,IAAA,OAAA,KAAA,cAAA,SAAAF,CAAA,CAAA,EAAA,EAIAC,CACC,CAAA,CAAA,EAKPG,EAAAN,EAAAC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA"}