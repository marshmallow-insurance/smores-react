{"version":3,"file":"Pagination.stories-e94f590c.js","sources":["../../src/Pagination/Pagination.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../Box'\nimport { Text } from '../Text'\nimport { Icon } from '../Icon'\n\nimport { theme } from '../theme'\nimport { MarginProps } from '../utils/space'\nimport { focusOutlineStyle } from '../utils/focusOutline'\n\nconst MAX_PAGES = 7\nconst MAX_ADDITIONAL_PAGES = Math.ceil(MAX_PAGES / 2)\n\nexport type PaginationProps = {\n  /** Total number of records  */\n  total: number\n  /** Number of records per page  */\n  partition: number\n  /** Handle page change */\n  handlePageChange: (page: number) => void\n  /** Sets current page number */\n  currentPage?: number\n} & MarginProps\n\nexport const Pagination: FC<PaginationProps> = ({\n  total,\n  partition,\n  handlePageChange,\n  currentPage,\n  ...marginProps\n}) => {\n  const [lastPage, setLastPage] = useState(0)\n  const [activePage, setActivePage] = useState(1)\n  const [pages, setPages] = useState<number[]>([])\n  const [shownPages, setShownPages] = useState<number[]>([])\n  const [showFirstDots, setShowFirstDots] = useState(false)\n  const [showLastDots, setShowLastDots] = useState(false)\n\n  useEffect(() => {\n    // This is a rather hacky fix, in theory it should be listening to total, but because the total comes from the same endpoint as the data, it forces a reset to 1 every time\n    // Using lastPage seems to bypass that\n    if (currentPage) {\n      setActivePage(currentPage)\n    } else {\n      setActivePage(1)\n    }\n  }, [lastPage, currentPage])\n\n  useEffect(() => {\n    const numberOfPages = Math.ceil(total / partition)\n    if (numberOfPages > 1) {\n      setLastPage(numberOfPages)\n    } else if (numberOfPages === 1) {\n      // Sets last page to be null to avoid the last page being kept from previous state.\n      setLastPage(0)\n    }\n    if (numberOfPages > 2) {\n      const allPages = Array.from({ length: numberOfPages }, (_, i) => i + 1)\n      setPages(allPages.slice(1, numberOfPages - 1))\n    } else {\n      // Sets pages to empty to avoid using the previous state if pages set before.\n      setPages([])\n    }\n  }, [total, partition])\n\n  useEffect(() => {\n    if (lastPage <= MAX_PAGES) {\n      setShownPages(pages)\n    } else if (activePage <= MAX_ADDITIONAL_PAGES) {\n      setShownPages(pages.slice(0, MAX_ADDITIONAL_PAGES))\n    } else if (activePage > lastPage - MAX_ADDITIONAL_PAGES) {\n      setShownPages(pages.slice(pages.length - MAX_ADDITIONAL_PAGES))\n    } else {\n      const activePageIndex = pages.indexOf(activePage)\n      setShownPages(pages.slice(activePageIndex - 1, activePageIndex + 2))\n    }\n  }, [lastPage, activePage, pages])\n\n  useEffect(() => {\n    setShowFirstDots(shownPages[0] !== pages[0])\n    setShowLastDots(\n      shownPages[shownPages.length - 1] !== pages[pages.length - 1],\n    )\n  }, [shownPages, pages])\n\n  const movePage = (page: number) => {\n    if (page > 0 && page <= lastPage) {\n      setActivePage(page)\n      handlePageChange(page)\n    }\n  }\n\n  return (\n    <Container flex direction=\"row\" {...marginProps}>\n      {activePage - 1 > 0 && (\n        <IconBox\n          firstPage={true}\n          onClick={() => movePage(activePage - 1)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(activePage - 1)\n            }\n          }}\n        >\n          <Icon size={18} render=\"arrow\" />\n        </IconBox>\n      )}\n      <PageBox active={activePage === 1} onClick={() => movePage(1)}>\n        <Text typo={activePage === 1 ? 'desc-medium' : 'desc-light'} tag=\"p\">\n          1\n        </Text>\n      </PageBox>\n      {showFirstDots && (\n        <PageBox>\n          <Text tag=\"p\">...</Text>\n        </PageBox>\n      )}\n      {shownPages.map((i) => {\n        return (\n          <PageBox\n            active={activePage === i}\n            key={i}\n            onClick={() => movePage(i)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                movePage(i)\n              }\n            }}\n          >\n            <Text\n              typo={activePage === i ? 'desc-medium' : 'desc-light'}\n              tag=\"p\"\n            >\n              {i}\n            </Text>\n          </PageBox>\n        )\n      })}\n      {showLastDots && (\n        <PageBox>\n          <Text tag=\"p\">...</Text>\n        </PageBox>\n      )}\n      {Boolean(lastPage) && (\n        <PageBox\n          active={activePage === lastPage}\n          onClick={() => movePage(lastPage)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(lastPage)\n            }\n          }}\n        >\n          <Text\n            typo={activePage === lastPage ? 'desc-medium' : 'desc-light'}\n            tag=\"p\"\n          >\n            {lastPage}\n          </Text>\n        </PageBox>\n      )}\n      {activePage + 1 <= lastPage && (\n        <IconBox\n          onClick={() => movePage(activePage + 1)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(activePage + 1)\n            }\n          }}\n        >\n          <Icon size={18} render=\"arrow\" rotate={180} />\n        </IconBox>\n      )}\n    </Container>\n  )\n}\n\ninterface IPageBox {\n  active?: boolean\n  firstPage?: boolean\n}\n\nconst Container = styled(Box)`\n  align-items: center;\n  > button {\n    margin-right: 4px;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`\n\nconst PageBox = styled.button<IPageBox>`\n  background: ${({ active }) =>\n    active ? theme.colors.custard : theme.colors.cream};\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n\n  &:hover {\n    background-color: ${theme.colors.mascarpone};\n  }\n  &:active {\n    background-color: ${theme.colors.custard};\n  }\n\n  ${focusOutlineStyle}\n`\n\nconst IconBox = styled.button<IPageBox>`\n  cursor: pointer;\n\n  ${focusOutlineStyle}\n`\n"],"names":["MAX_PAGES","MAX_ADDITIONAL_PAGES","Pagination","total","partition","handlePageChange","currentPage","marginProps","lastPage","setLastPage","useState","activePage","setActivePage","pages","setPages","shownPages","setShownPages","showFirstDots","setShowFirstDots","showLastDots","setShowLastDots","useEffect","numberOfPages","allPages","_","i","activePageIndex","movePage","page","jsxs","Container","jsx","IconBox","Icon","PageBox","Text","e","styled","Box","active","theme","focusOutlineStyle"],"mappings":"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"}