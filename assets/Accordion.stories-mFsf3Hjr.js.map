{"version":3,"file":"Accordion.stories-mFsf3Hjr.js","sources":["../../src/Accordion/Accordion.tsx","../../src/Accordion/storybook/Accordion.stories.tsx"],"sourcesContent":["import React, { FC, ReactNode, useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { MarginProps } from '../utils/space'\nimport { NewColor, resolveToThemeColor } from '../ThemeProvider/utils/colourMap'\n\ntype UsableNewColors = Extract<\n  NewColor,\n  | 'color.surface.base.000'\n  | 'color.surface.base.100'\n  | 'color.surface.base.300'\n  | 'color.illustration.neutral.300'\n>\n\nexport type AccordionProps = {\n  title: string\n  subTitle?: string\n  filledBackground?: boolean\n  borderTop?: boolean\n  borderColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut' | UsableNewColors\n  fullBorder?: boolean\n  backgroundColor?:\n    | 'oatmeal'\n    | 'custard'\n    | 'cream'\n    | 'coconut'\n    | UsableNewColors\n  onToggle?: (isOpen: boolean) => void\n  children: ReactNode\n  defaultIsOpen?: boolean\n} & MarginProps\n\nexport const Accordion: FC<AccordionProps> = ({\n  title,\n  children,\n  onToggle,\n  filledBackground,\n  defaultIsOpen = false,\n  borderTop = false,\n  borderColor = 'color.illustration.neutral.300',\n  backgroundColor = 'color.surface.base.300',\n  subTitle,\n  fullBorder = false,\n  ...marginProps\n}) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const px = fullBorder ? '16px' : '0'\n\n  const resolvedBorderColor = resolveToThemeColor(borderColor)\n\n  const resolvedBackgroundColour = resolveToThemeColor(backgroundColor)\n\n  const handleToggle = () => {\n    const nextOpenState = !isOpen\n    onToggle?.(nextOpenState)\n    setIsOpen(nextOpenState)\n  }\n\n  return (\n    <Wrapper\n      $borderTop={borderTop}\n      $fullBorder={fullBorder}\n      $filledBackground={filledBackground}\n      $borderColor={resolvedBorderColor}\n      $backgroundColor={resolvedBackgroundColour}\n      {...marginProps}\n    >\n      <TopContainer\n        flex\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        onClick={handleToggle}\n        py=\"16px\"\n        pr=\"16px\"\n        pl={px}\n      >\n        <TitleContainer>\n          <Text tag=\"h2\" typo=\"headline-regular\" color=\"liquorice\">\n            {title}\n          </Text>\n          {subTitle && (\n            <Text tag=\"label\" color=\"liquorice\" typo=\"label\" mt={{ custom: 4 }}>\n              {subTitle}\n            </Text>\n          )}\n        </TitleContainer>\n\n        <CaretIcon\n          render=\"caret\"\n          size={24}\n          color=\"marzipan\"\n          $isOpen={isOpen}\n          $borderTop={borderTop}\n        />\n      </TopContainer>\n      {isOpen && (\n        <Box pt=\"12px\" pb=\"16px\" px={px}>\n          {children}\n        </Box>\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)<\n  TransientProps<\n    Pick<AccordionProps, 'borderTop' | 'fullBorder' | 'filledBackground'>\n  > & { $borderColor: string; $backgroundColor: string }\n>(\n  ({\n    $borderTop,\n    $fullBorder,\n    $filledBackground,\n    $borderColor = 'oatmeal',\n    $backgroundColor = 'custard',\n  }) => css`\n    border-bottom: 1px solid ${$borderColor};\n    ${$borderTop && `border-top: 1px solid ${$backgroundColor};`}\n\n    ${$fullBorder &&\n    css`\n      border: 1px solid ${$borderColor};\n      border-radius: 16px;\n    `}\n\n    ${$filledBackground &&\n    css`\n      background-color: ${$backgroundColor};\n    `}\n  `,\n)\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst TopContainer = styled(Box)`\n  cursor: pointer;\n`\n\nconst CaretIcon = styled(Icon)<\n  TransientProps<Pick<AccordionProps, 'borderTop'>> & { $isOpen: boolean }\n>(\n  ({ $isOpen }) => css`\n    transform: ${$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n    transition: transform 0.6s ease;\n  `,\n)\n","import { Meta, StoryObj } from '@storybook/react'\nimport React from 'react'\nimport { Box } from '../../Box'\nimport { Accordion } from '../Accordion'\n\nconst colourOptions = [\n  'color.surface.base.000',\n  'color.surface.base.100',\n  'color.surface.base.300',\n  'color.illustration.neutral.300',\n]\n\nconst meta: Meta<typeof Accordion> = {\n  title: 'Accordion',\n  component: Accordion,\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n  },\n  argTypes: {\n    backgroundColor: {\n      control: 'select',\n      options: colourOptions,\n    },\n    borderColor: {\n      control: 'select',\n      options: colourOptions,\n    },\n  },\n}\n\nexport default meta\ntype Story = StoryObj<typeof Accordion>\n\nexport const Default: Story = {\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n  },\n}\n\nexport const FilledBackground: Story = {\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n    filledBackground: true,\n  },\n}\n\nexport const FullBorder: Story = {\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n    fullBorder: true,\n  },\n}\n\nexport const BorderTop: Story = {\n  args: {\n    title: 'How it works',\n    children: 'Lots of brilliant information about this beautiful component',\n    borderTop: true,\n  },\n}\n\nexport const Stacked: Story = {\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '64px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n  render: (args) => (\n    <Box flex direction=\"column\">\n      <Accordion {...args} {...Default.args} />\n      <Accordion {...args} {...Default.args} />\n      <Accordion {...args} {...Default.args} />\n    </Box>\n  ),\n}\n"],"names":["cov_9t57suemo","actualCoverage","Accordion","children","onToggle","filledBackground","defaultIsOpen","borderTop","borderColor","b","backgroundColor","subTitle","fullBorder","marginProps","setIsOpen","px","resolvedBorderColor","resolveToThemeColor","resolvedBackgroundColour","handleToggle","isOpen","nextOpenState","Wrapper","$fullBorder","$filledBackground","$borderColor","$backgroundColor","flex","React","TopContainer","alignItems","justifyContent","onClick","py","pr","pl","tag","TitleContainer","Text","typo","color","mt","custom","render","CaretIcon","size","$isOpen","$borderTop","pt","pb","styled","Box","s","css","colourOptions","meta","title","component","args","argTypes","control","options","Default","FilledBackground","FullBorder","BorderTop","Stacked","decorators","Story","margin","parameters","docs","source","originalSource"],"mappings":"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"}