{"version":3,"file":"Accordion.stories-CJLvHOdk.js","sources":["../../src/Accordion/Accordion.tsx","../../src/Accordion/storybook/Collection.tsx","../../src/Accordion/storybook/Accordion.stories.tsx"],"sourcesContent":["import React, { FC, ReactNode, useState } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { theme } from '../theme'\nimport { MarginProps } from '../utils/space'\n\nexport type AccordionProps = {\n  title: string\n  subTitle?: string\n  filledBackground?: boolean\n  borderTop?: boolean\n  borderColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  fullBorder?: boolean\n  backgroundColor?: 'oatmeal' | 'custard' | 'cream' | 'coconut'\n  onToggle?: (isOpen: boolean) => void\n  children: ReactNode\n  defaultIsOpen?: boolean\n} & MarginProps\n\nexport const Accordion: FC<AccordionProps> = ({\n  title,\n  children,\n  onToggle,\n  filledBackground,\n  defaultIsOpen = false,\n  borderTop = false,\n  borderColor = 'oatmeal',\n  backgroundColor = 'custard',\n  subTitle,\n  fullBorder = false,\n  ...marginProps\n}) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const px = fullBorder ? '16px' : '0'\n\n  const handleToggle = () => {\n    const nextOpenState = !isOpen\n    onToggle?.(nextOpenState)\n    setIsOpen(nextOpenState)\n  }\n\n  return (\n    <Wrapper\n      $borderTop={borderTop}\n      $fullBorder={fullBorder}\n      $filledBackground={filledBackground}\n      $borderColor={borderColor}\n      $backgroundColor={backgroundColor}\n      {...marginProps}\n    >\n      <TopContainer\n        flex\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        onClick={handleToggle}\n        py=\"16px\"\n        pr=\"16px\"\n        pl={px}\n      >\n        <TitleContainer>\n          <Text tag=\"h2\" typo=\"headline-regular\" color=\"liquorice\">\n            {title}\n          </Text>\n          {subTitle && (\n            <Text tag=\"label\" color=\"liquorice\" typo=\"label\" mt={{ custom: 4 }}>\n              {subTitle}\n            </Text>\n          )}\n        </TitleContainer>\n\n        <CaretIcon\n          render=\"caret\"\n          size={24}\n          color=\"marzipan\"\n          $isOpen={isOpen}\n          $borderTop={borderTop}\n        />\n      </TopContainer>\n      {isOpen && (\n        <Box pt=\"12px\" pb=\"16px\" px={px}>\n          {children}\n        </Box>\n      )}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)<\n  TransientProps<\n    Pick<\n      AccordionProps,\n      | 'borderTop'\n      | 'fullBorder'\n      | 'filledBackground'\n      | 'borderColor'\n      | 'backgroundColor'\n    >\n  >\n>(\n  ({\n    $borderTop,\n    $fullBorder,\n    $filledBackground,\n    $borderColor = 'oatmeal',\n    $backgroundColor = 'custard',\n  }) => css`\n    border-bottom: 1px solid ${theme.colors[$borderColor]};\n    ${$borderTop && `border-top: 1px solid ${theme.colors[$borderColor]};`}\n\n    ${$fullBorder &&\n    css`\n      border: 1px solid ${theme.colors[$borderColor]};\n      border-radius: 16px;\n    `}\n\n    ${$filledBackground &&\n    css`\n      background-color: ${theme.colors[$backgroundColor]};\n    `}\n  `,\n)\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`\nconst TopContainer = styled(Box)`\n  cursor: pointer;\n`\n\nconst CaretIcon = styled(Icon)<\n  TransientProps<Pick<AccordionProps, 'borderTop'>> & { $isOpen: boolean }\n>(\n  ({ $isOpen }) => css`\n    transform: ${$isOpen ? 'rotate(180deg)' : 'rotate(0deg)'};\n    transition: transform 0.6s ease;\n  `,\n)\n","import React, { FC, ReactNode } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../../Box'\nimport { Text } from '../../Text'\nimport { Accordion, AccordionProps } from '../Accordion'\n\nconst accordionList: Array<AccordionProps> = [\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    subTitle: 'subtitle',\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    filledBackground: true,\n  },\n  {\n    children: 'Lots of brilliant information about this beautiful component',\n    title: 'How it works',\n    subTitle: 'subtitle',\n    filledBackground: true,\n  },\n]\n\nexport const CollectionPage: FC = () => {\n  return (\n    <Wrapper>\n      <Section label=\"Default\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} />\n        ))}\n      </Section>\n      <Section label=\"Border Top\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} borderTop={true} />\n        ))}\n      </Section>\n      <Section label=\"Full Border\">\n        {accordionList.map((props, index) => (\n          <Accordion key={index} {...props} fullBorder={true} />\n        ))}\n      </Section>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 40px;\n  width: 100%;\n`\n\nconst Section: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <Box width=\"100%\" mb=\"16px\">\n      <Box mb=\"16px\">\n        <Text tag=\"span\" typo=\"header-small\">\n          {label}\n        </Text>\n      </Box>\n      <Column>{children}</Column>\n    </Box>\n  )\n}\n\nconst Column = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`\n","import React from 'react'\nimport { Accordion, AccordionProps } from '../Accordion'\nimport { CollectionPage } from './Collection'\n\nexport default {\n  title: 'Accordion',\n  component: Accordion,\n}\n\nconst Template = (props: AccordionProps) => (\n  <Accordion {...props} title=\"How it works\">\n    Lots of brilliant information about this beautiful component\n  </Accordion>\n)\n\nexport const Default = Template.bind({})\n\nexport const Collection = CollectionPage.bind({})\n"],"names":["cov_9t57suemo","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","Accordion","title","children","onToggle","filledBackground","defaultIsOpen","b","borderTop","borderColor","backgroundColor","subTitle","fullBorder","marginProps","f","isOpen","setIsOpen","useState","px","handleToggle","nextOpenState","React","createElement","Wrapper","$borderTop","$fullBorder","$filledBackground","$borderColor","$backgroundColor","TopContainer","flex","alignItems","justifyContent","onClick","py","pr","pl","TitleContainer","Text","tag","typo","color","mt","custom","CaretIcon","render","size","$isOpen","pb","styled","Box","cov_1qmm6dom8b","accordionList","CollectionPage","Section","label","map","props","index","key","Accordion_stories","component","Template","Default","bind","Collection","parameters","docs","source","originalSource"],"mappings":"qdAiDyB,SAAAA,GAAA,CAAA,IAAAC,EAAA,0EAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,0EAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA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"}