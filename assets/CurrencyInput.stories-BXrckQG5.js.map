{"version":3,"file":"CurrencyInput.stories-BXrckQG5.js","sources":["../../src/CurrencyInput/CurrencyInput.tsx","../../src/CurrencyInput/storybook/Collection.tsx","../../src/CurrencyInput/storybook/Example.tsx","../../src/CurrencyInput/storybook/CurrencyInput.stories.tsx"],"sourcesContent":["import React, {\n  FocusEvent,\n  FormEvent,\n  ForwardedRef,\n  WheelEvent,\n  forwardRef,\n} from 'react'\n\nimport { Box } from '../Box'\nimport { Field } from '../fields/Field'\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\n\nimport { Input, StyledFrontIcon } from '../fields/components/CommonInput'\nimport { useUniqueId } from '../utils/id'\n\nexport interface Props extends CommonFieldProps {\n  placeholder: string\n  name?: string\n  value: string\n  decimalNumber?: boolean\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void\n  min?: number\n  max?: number\n}\n\n/** on change or on input required */\ntype InputProps =\n  | {\n      /** on change is required and on input optional */\n      onChange: (e: string) => void\n      onInputChange?: (e: FormEvent<HTMLInputElement>) => void\n    }\n  | {\n      /** on input is required and on change optional */\n      onChange?: (e: string) => void\n      onInputChange: (e: FormEvent<HTMLInputElement>) => void\n    }\n\nexport type CurrencyInputProps = Props & InputProps\n\nexport const CurrencyInput = forwardRef(function CurrencyInput(\n  {\n    id: idProp,\n    placeholder,\n    name,\n    value,\n    decimalNumber = true,\n    onChange,\n    onInputChange,\n    onBlur,\n    min,\n    max,\n    disabled = false,\n    error = false,\n    fallbackStyle,\n    ...fieldProps\n  }: CurrencyInputProps,\n  ref: ForwardedRef<HTMLInputElement>,\n) {\n  const id = useUniqueId(idProp)\n  const frontIcon = 'pound-regular'\n\n  const formatCurrency = (value: string) => {\n    const decimalIndex = value.indexOf('.')\n\n    if (!decimalNumber) {\n      return Math.trunc(Number(value)).toString()\n    }\n\n    if (decimalIndex >= 0 && value.length > decimalIndex + 1) {\n      const fractionalString = value.substring(decimalIndex + 1).substring(0, 2)\n      return `${value.substring(0, decimalIndex)}.${fractionalString}`\n    } else {\n      return value\n    }\n  }\n\n  const applyMinMax = (value: string) => {\n    const numberValue = Number(value)\n    if (min && numberValue < min) return min.toString()\n    if (max && numberValue > max) return max.toString()\n    return value\n  }\n\n  const handleChange = (value: string) => {\n    if (onChange === undefined) return\n    const EMPTY_INPUT = ''\n\n    if (value === EMPTY_INPUT) {\n      onChange(value)\n    } else {\n      const amount = formatCurrency(value)\n      const normalisedValue = applyMinMax(amount)\n\n      onChange(normalisedValue)\n    }\n  }\n\n  return (\n    <Field {...fieldProps} htmlFor={id} error={error}>\n      <Box flex alignItems=\"center\" justifyContent=\"flex-start\">\n        <StyledFrontIcon\n          $disabled={disabled}\n          render={frontIcon}\n          color=\"sesame\"\n        />\n        <Input\n          ref={ref}\n          $error={error}\n          disabled={disabled}\n          type=\"number\"\n          id={id}\n          name={name}\n          placeholder={placeholder}\n          value={value}\n          $frontIcon={frontIcon}\n          $fallbackStyle={fallbackStyle}\n          onChange={(e: FormEvent<HTMLInputElement>) => {\n            onChange && handleChange(e.currentTarget.value)\n            onInputChange && onInputChange(e)\n          }}\n          onWheel={(e: WheelEvent<HTMLInputElement>) => e.currentTarget.blur()}\n          onBlur={onBlur}\n        />\n      </Box>\n    </Field>\n  )\n})\n","import React, { FC, ReactNode, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../../Box'\nimport { SupportMessage } from '../../SupportMessage'\nimport { Text } from '../../Text'\nimport { noop } from '../../utils/noop'\nimport { CurrencyInput, CurrencyInputProps } from '../CurrencyInput'\n\nconst variationList: CurrencyInputProps[] = [\n  {\n    id: 'days',\n    placeholder: '200',\n    errorMsg: 'This field is required',\n    label: 'Amount',\n    onChange: noop,\n    onInputChange: noop,\n    onBlur: noop,\n    value: '',\n  },\n]\n\nexport const CollectionPage: FC = () => {\n  const [, setValue] = useState('')\n\n  return (\n    <Box flex direction=\"column\">\n      {variationList.map(({ id, placeholder, errorMsg, label }) => {\n        return (\n          <Box key={id} flex direction=\"column\" mb=\"32px\">\n            <Title tag=\"span\" typo=\"header-medium\">\n              CurrencyInput variations\n            </Title>\n            <Row label=\"Generic\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Fallback\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                fallbackStyle={true}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Disabled\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                disabled={true}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Required\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                required={true}\n                placeholder={placeholder}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Assistive text\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                assistiveText=\"Some assistive text\"\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Completed\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                placeholder={placeholder}\n                error={false}\n                completed={true}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"As title\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                renderAsTitle={true}\n                placeholder={placeholder}\n                error={false}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Error\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                value=\"\"\n                required={true}\n                placeholder={placeholder}\n                assistiveText=\"Some assistive text\"\n                error={true}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"React element error\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                required={true}\n                value=\"\"\n                placeholder={placeholder}\n                error={true}\n                errorMsg={\n                  <SupportMessage type=\"warning\" description=\"error!!\" />\n                }\n                onChange={setValue}\n              />\n            </Row>\n            <Row label=\"Fallback Error\">\n              <CurrencyInput\n                id={id}\n                label={label}\n                required={true}\n                value=\"\"\n                placeholder={placeholder}\n                fallbackStyle={true}\n                error={true}\n                errorMsg={errorMsg}\n                onChange={setValue}\n              />\n            </Row>\n          </Box>\n        )\n      })}\n    </Box>\n  )\n}\n\nconst Row: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <RowWrapper mt=\"32px\">\n      <Box width=\"140px\">\n        <Text tag=\"span\" typo=\"label-large\">\n          {label}\n        </Text>\n      </Box>\n      {children}\n    </RowWrapper>\n  )\n}\n\nconst RowWrapper = styled(Box)`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n`\n\nconst LABEL_WIDTH = '140px'\n\nconst Title = styled(Text)`\n  margin-bottom: 12px;\n  font-size: 18px;\n  line-height: 20px;\n  margin-left: ${LABEL_WIDTH};\n`\n","import React, { useState } from 'react'\n\nimport { CurrencyInput } from '../CurrencyInput'\n\nexport const Example = () => {\n  const [value, setValue] = useState('')\n\n  return (\n    <form>\n      <CurrencyInput\n        id=\"numberInput\"\n        label=\"Amount paid\"\n        name=\"numberInput\"\n        onChange={(e) => setValue(e)}\n        placeholder=\"100.00\"\n        value={value}\n        min={-200}\n        max={200}\n        required\n      />\n    </form>\n  )\n}\n","import React from 'react'\nimport { noop } from '../../utils/noop'\nimport { CurrencyInput, CurrencyInputProps } from '../CurrencyInput'\nimport { CollectionPage } from './Collection'\nimport { Example } from './Example'\n\nexport default {\n  title: 'Currency Input',\n  component: CurrencyInput,\n  argTypes: { onChange: { action: 'changed' } },\n}\n\nconst Template = (props: CurrencyInputProps) => <CurrencyInput {...props} />\n\nexport const Default = Template.bind({})\n\nDefault.args = {\n  id: 'total_amount',\n  label: 'Total Amount',\n  name: 'totalAmount',\n  placeholder: '0',\n  onChange: noop,\n}\n\nexport const DefaultFallback = Template.bind({})\n\nDefaultFallback.args = {\n  id: 'amount',\n  label: 'Amount',\n  name: 'amount',\n  placeholder: '200',\n  required: true,\n  onChange: noop,\n  fallbackStyle: true,\n}\n\nexport const Collection = CollectionPage.bind({})\nCollection.parameters = {\n  a11y: {\n    config: {\n      rules: [\n        {\n          //disabling these until we sync with design on this\n          id: 'color-contrast',\n          enabled: false,\n        },\n      ],\n    },\n  },\n}\n\nconst WorkingExampleTemplate = () => <Example />\n\nexport const WorkingExample = WorkingExampleTemplate.bind({})\n"],"names":["cov_qo0f1wvub","path","hash","global","gcv","coverageData","coverage","actualCoverage","CurrencyInput","s","forwardRef","value","id","idProp","placeholder","name","decimalNumber","b","onChange","onInputChange","onBlur","min","max","disabled","error","fallbackStyle","fieldProps","ref","f","useUniqueId","frontIcon","formatCurrency","value2","decimalIndex","indexOf","Math","trunc","Number","toString","length","fractionalString","substring","applyMinMax","numberValue","cov_28daeqm5i5","variationList","errorMsg","label","noop","CollectionPage","setValue","useState","React","createElement","Box","flex","direction","map","key","mb","Title","tag","typo","Row","required","assistiveText","completed","renderAsTitle","SupportMessage","type","description","cov_1u9doyz17l","e","CurrencyInput_stories","title","component","argTypes","action","Template","props","Default","bind","args","DefaultFallback","Collection","parameters","a11y","config","rules","enabled","WorkingExampleTemplate","Example","WorkingExample","docs","source","originalSource"],"mappings":"uvBA2FY,SAAAA,GAAA,CAAA,IAAAC,EAAA,kFAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,kFAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,iBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,OAAA,OAAA,MAAA,EAAA,IAAA,CAAA,KAAA,OAAA,OAAA,MAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,KAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,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"}