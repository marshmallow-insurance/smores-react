{"version":3,"file":"space-BLajQSvN.js","sources":["../../src/utils/responsiveProp.ts","../../src/utils/space.tsx"],"sourcesContent":["const breakpointToMinPxMapping = {\n  small: 0,\n  medium: 768,\n  large: 1024,\n} satisfies Record<string, number>\n\ntype Breakpoint = keyof typeof breakpointToMinPxMapping\nconst breakpointList = Object.keys(breakpointToMinPxMapping) as Breakpoint[]\n\ntype PropByBreakpoint<PropValue> = Partial<Record<Breakpoint, PropValue>>\nexport type ResponsiveProp<PropValue> = PropValue | PropByBreakpoint<PropValue>\n\nconst isPropByBreakpoint = <PropValue>(\n  value: ResponsiveProp<PropValue>,\n): value is PropByBreakpoint<PropValue> => {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    breakpointList.includes(Object.keys(value)[0] as any)\n  )\n}\n\nexport const resolveResponsiveProp = <PropValue>(\n  value: ResponsiveProp<PropValue>,\n  styleTemplate: (value: PropValue) => string,\n) => {\n  if (!isPropByBreakpoint(value)) {\n    return `\n      @media (min-width: ${breakpointToMinPxMapping.small}px) {\n        ${styleTemplate(value)}\n      }\n    `\n  }\n\n  const breakpointUsed = Object.keys(value) as Breakpoint[]\n\n  let style = ''\n  breakpointUsed.forEach((breakpoint) => {\n    style += `\n        @media (min-width: ${breakpointToMinPxMapping[breakpoint]}px) {\n          ${styleTemplate(value[breakpoint]!)}\n        }\n      `\n  })\n\n  return style\n}\n","import { resolveResponsiveProp, ResponsiveProp } from './responsiveProp'\nimport { TransientProps } from './utilTypes'\n\ntype Spacing = '8px' | '12px' | '16px' | '24px' | '32px' | '48px' | '64px'\n\nexport type SpacingProp = '0' | Spacing | { custom: number | string }\n\nexport const resolveSpacing = (value: SpacingProp | 'auto') => {\n  if (typeof value === 'string') {\n    return value\n  }\n\n  if (typeof value.custom === 'string') {\n    return value.custom\n  }\n\n  return `${value.custom}px`\n}\n\nexport interface MarginProps {\n  m?: ResponsiveProp<SpacingProp>\n  mx?: ResponsiveProp<SpacingProp | 'auto'>\n  my?: ResponsiveProp<SpacingProp>\n  ml?: ResponsiveProp<SpacingProp>\n  mr?: ResponsiveProp<SpacingProp>\n  mt?: ResponsiveProp<SpacingProp>\n  mb?: ResponsiveProp<SpacingProp>\n}\n\nexport interface PaddingProps {\n  p?: ResponsiveProp<SpacingProp>\n  px?: ResponsiveProp<SpacingProp>\n  py?: ResponsiveProp<SpacingProp>\n  pl?: ResponsiveProp<SpacingProp>\n  pr?: ResponsiveProp<SpacingProp>\n  pt?: ResponsiveProp<SpacingProp>\n  pb?: ResponsiveProp<SpacingProp>\n}\n\nexport type TransientMarginProps = TransientProps<MarginProps>\nexport type TransientPaddingProps = TransientProps<PaddingProps>\n\nexport const margin = (props: TransientMarginProps): string => {\n  const { $m, $mx, $my, $ml, $mr, $mt, $mb } = props\n\n  return `\n    ${\n      $m\n        ? resolveResponsiveProp(\n            $m,\n            (value) => `margin: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $mx\n        ? resolveResponsiveProp(\n            $mx,\n            (value) => `\n        margin-left: ${resolveSpacing(value)};\n        margin-right: ${resolveSpacing(value)};\n      `,\n          )\n        : ''\n    }\n    ${\n      $my\n        ? resolveResponsiveProp(\n            $my,\n            (value) => `\n        margin-top: ${resolveSpacing(value)};\n        margin-bottom: ${resolveSpacing(value)};\n      `,\n          )\n        : ''\n    }\n    ${\n      $ml\n        ? resolveResponsiveProp(\n            $ml,\n            (value) => `margin-left: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $mr\n        ? resolveResponsiveProp(\n            $mr,\n            (value) => `margin-right: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $mt\n        ? resolveResponsiveProp(\n            $mt,\n            (value) => `margin-top: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $mb\n        ? resolveResponsiveProp(\n            $mb,\n            (value) => `margin-bottom: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n  `\n}\n\nexport const padding = (props: TransientPaddingProps): string => {\n  const { $p, $px, $py, $pl, $pr, $pt, $pb } = props\n\n  return `\n    ${\n      $p\n        ? resolveResponsiveProp(\n            $p,\n            (value) => `padding: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $px\n        ? resolveResponsiveProp(\n            $px,\n            (value) => `\n        padding-left: ${resolveSpacing(value)};\n        padding-right: ${resolveSpacing(value)};\n      `,\n          )\n        : ''\n    }\n    ${\n      $py\n        ? resolveResponsiveProp(\n            $py,\n            (value) => `\n        padding-top: ${resolveSpacing(value)};\n        padding-bottom: ${resolveSpacing(value)};\n      `,\n          )\n        : ''\n    }\n    ${\n      $pl\n        ? resolveResponsiveProp(\n            $pl,\n            (value) => `padding-left: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $pr\n        ? resolveResponsiveProp(\n            $pr,\n            (value) => `padding-right: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $pt\n        ? resolveResponsiveProp(\n            $pt,\n            (value) => `padding-top: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      $pb\n        ? resolveResponsiveProp(\n            $pb,\n            (value) => `padding-bottom: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n  `\n}\n"],"names":["cov_22pac96tfs","actualCoverage","small","medium","large","breakpointToMinPxMapping","isPropByBreakpoint","value","s","breakpointList","styleTemplate","breakpointUsed","forEach","breakpoint","style","cov_1kggcdeejx","resolveResponsiveProp","resolveSpacing","custom","margin","props","$mx","$my","$ml","$mr","$mt","$mb","$m","b","padding","$px","$py","$pl","$pr","$pt","$pb","$p"],"mappings":"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"}