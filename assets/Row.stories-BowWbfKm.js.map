{"version":3,"file":"Row.stories-BowWbfKm.js","sources":["../../src/Row/Row.tsx","../../src/Row/storybook/Row.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Icons } from '../Icon/iconsList'\nimport { Text } from '../Text'\nimport { Color, theme } from '../theme'\nimport { MarginProps } from '../utils/space'\n\nexport type RowProps = {\n  iconLeft?: Icons\n  iconLeftColor?: Color\n  iconRight?: Icons\n  iconRightColor?: Color\n  handleClick?: () => void\n  heading: string\n  subHeading?: string\n  type?: 'first' | 'last' | 'curved'\n  borderTop?: boolean\n  borderBottom?: boolean\n  boldHeading?: boolean\n} & MarginProps\n\nexport const Row: FC<RowProps> = ({\n  iconLeft,\n  iconLeftColor = 'liquorice',\n  iconRight,\n  iconRightColor = 'marzipan',\n  handleClick,\n  heading,\n  subHeading,\n  type,\n  borderTop = true,\n  borderBottom = true,\n  boldHeading,\n  ...marginProps\n}) => {\n  const windowWidth = screen.width\n\n  return (\n    <Container\n      $type={type}\n      $iconLeft={iconLeft}\n      $borderTop={borderTop}\n      $borderBottom={borderBottom}\n      $iconRight={iconRight}\n      onClick={handleClick}\n      $boldHeading={boldHeading}\n      {...marginProps}\n    >\n      {iconLeft && (\n        <Icon\n          render={iconLeft}\n          size={windowWidth > 768 ? 24 : 18}\n          color={iconLeftColor}\n        />\n      )}\n      <Box>\n        <Text tag=\"h1\" typo=\"base\">\n          {heading}\n        </Text>\n        <Text tag=\"p\" typo=\"desc-small\" color=\"sesame\">\n          {subHeading}\n        </Text>\n      </Box>\n      {iconRight && (\n        <Icon\n          className=\"iconRight\"\n          render={iconRight}\n          size={24}\n          rotate={iconRight === 'caret' ? -90 : 0}\n          color={iconRightColor}\n        />\n      )}\n    </Container>\n  )\n}\n\ninterface IContainer {\n  $type?: 'first' | 'last' | 'curved'\n  $iconLeft?: string\n  $iconRight?: string\n  $borderTop: boolean\n  $borderBottom: boolean\n  $boldHeading?: boolean\n}\n\nconst Container = styled(Box)<IContainer>(\n  ({ $type, $iconLeft, $borderTop, $borderBottom, $boldHeading }) => css`\n    border-radius: ${($type === 'first' && `16px 16px 0 0`) ||\n    ($type === 'curved' && `16px`) ||\n    ($type === 'last' && `0 0 16px 16px`) ||\n    0};\n\n    border-top: ${$borderTop && $type !== 'curved' && $type !== 'first'\n      ? `1px solid ${theme.colors.oatmeal}`\n      : 'none'};\n    border-bottom: ${$borderBottom && $type !== 'curved' && $type !== 'last'\n      ? `1px solid ${theme.colors.oatmeal}`\n      : 'none'};\n\n    background-color: ${theme.colors.custard};\n    display: grid;\n    grid-template-columns: ${$iconLeft ? `24px auto 24px` : `auto 24px`};\n    padding: 16px;\n    grid-gap: 16px;\n    align-items: center;\n\n    cursor: pointer;\n\n    h1 {\n      font-weight: ${$boldHeading && 500};\n    }\n\n    .iconRight {\n      justify-self: end;\n    }\n\n    @media (min-width: 768px) {\n      grid-gap: 24px;\n    }\n  `,\n)\n","import React from 'react'\nimport { Row, RowProps } from '../Row'\n\nexport default {\n  title: 'Row',\n  component: Row,\n  argTypes: { handleClick: { action: 'clicked' } },\n}\n\nconst Template = (props: RowProps) => <Row {...props} />\n\nexport const Default = Template.bind({})\n\nDefault.args = {\n  iconLeft: 'info',\n  iconLeftColor: 'liquorice',\n  iconRight: 'caret',\n  iconRightColor: 'subtext',\n  heading: 'A lovely heading',\n  subHeading: 'The quick brown fox jumps over the lazy dog',\n  type: 'curved',\n  borderTop: true,\n  borderBottom: true,\n}\n\nexport const NoIcons = Template.bind({})\n\nNoIcons.args = {\n  heading: 'A lovely heading',\n  subHeading: 'A row without an IconLeft or IconRight',\n}\n\nexport const NoSubheading = Template.bind({})\n\nNoSubheading.args = {\n  heading: 'A lovely heading without a subheading',\n  iconLeft: 'info',\n  iconRight: 'download',\n}\n\nexport const BoldHeading = Template.bind({})\n\nBoldHeading.args = {\n  heading: 'A row with a bold heading',\n  subHeading: `A row with a heading that has a font weight of 500`,\n  boldHeading: true,\n}\n\nexport const First = Template.bind({})\n\nFirst.args = {\n  heading: 'The first row',\n  subHeading: 'A first row with curved corners at the top and no bottom border',\n  type: 'first',\n  borderBottom: false,\n}\n\nexport const Middle = Template.bind({})\n\nMiddle.args = {\n  heading: 'A middle row',\n  subHeading: `A row with angular corners to go between 'first' and 'last' rows`,\n}\n\nexport const Last = Template.bind({})\n\nLast.args = {\n  heading: 'The last row',\n  subHeading: 'A last row with curved corners at the bottom and no top border',\n  type: 'last',\n  borderTop: false,\n}\n\nexport const Curved = Template.bind({})\n\nCurved.args = {\n  heading: 'A curved row',\n  type: 'curved',\n  subHeading: 'A curved row with a border radius of 8px on all corners',\n}\n"],"names":["cov_km1dcrxp6","path","hash","global","gcv","coverageData","coverage","actualCoverage","s","Row","iconLeft","iconLeftColor","b","iconRight","iconRightColor","handleClick","heading","subHeading","type","borderTop","borderBottom","boldHeading","marginProps","f","windowWidth","screen","width","React","createElement","$type","$iconLeft","$borderTop","$borderBottom","$iconRight","onClick","$boldHeading","Icon","render","size","color","Box","Text","tag","typo","className","rotate","Row_stories","title","component","argTypes","action","Template","props","Default","bind","args","NoIcons","NoSubheading","BoldHeading","First","Middle","Last","Curved","parameters","docs","source","originalSource"],"mappings":"+cAiDU,SAAAA,GAAA,CAAA,IAAAC,EAAA,8DAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,8DAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,CAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,cccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,YAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,GAAA,CAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,cccAAA,UAAA,CAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,EAA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"}