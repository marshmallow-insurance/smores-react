{"version":3,"file":"colors.stories-D3AmvPpq.js","sources":["../../src/Divider/index.ts","../../src/colors.stories.tsx"],"sourcesContent":["export { Divider } from './Divider'\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from './Box'\nimport { Divider } from './Divider'\nimport { Text } from './Text'\nimport { Color, theme } from './theme'\n\nconst corePrimary = [\n  'lollipop',\n  'marshmallowPink',\n  'bubblegum',\n  'fairyFloss',\n] as const\nconst coreSecondary = ['boba', 'liquorice', 'sesame', 'chia'] as const\nconst coreTertiary = ['custard', 'mascarpone', 'coconut', 'cream'] as const\nconst brandSecondary = [\n  'spearmint',\n  'feijoa',\n  'blueberry',\n  'macaroon',\n  'pistachio',\n  'matcha',\n  'caramel',\n  'peanut',\n  'marzipan',\n  'oatmeal',\n  'satsuma',\n] as const\nconst trafficLight = [\n  'strawberry',\n  'watermelon',\n  'apple',\n  'mint',\n  'lemon',\n  'sherbert',\n  'tangerine',\n] as const\nconst thirdPartyBrand = [\n  'compareTheMarket',\n  'confused',\n  'onfido',\n  'x',\n  'premfina',\n  'checkout',\n  'meta',\n  'stripe',\n  'intercom',\n  'ravelin',\n  'rac',\n  'hometree',\n] as const\n\nconst ColorCard = ({ colorName }: { colorName: Color }) => {\n  const hexValue = theme.colors[colorName]\n  return (\n    <ColorCardWrapper width=\"224px\">\n      <ColorBox $colorName={colorName} width=\"100%\" pt={{ custom: '50%' }} />\n      <Divider />\n      <Box px=\"16px\" py={{ custom: 4 }}>\n        <Text tag=\"span\" typo=\"body-regular\">\n          {colorName}\n        </Text>\n        <Text tag=\"span\" typo=\"caption\" color=\"sesame\">\n          {hexValue}\n        </Text>\n      </Box>\n    </ColorCardWrapper>\n  )\n}\n\nconst ColorSection = ({\n  title,\n  colors,\n}: {\n  title: string\n  colors: Readonly<Color[]>\n}) => {\n  return (\n    <Box width=\"100%\">\n      <Box mb=\"16px\">\n        <Text tag=\"span\" typo=\"headline-small\">\n          {title}\n        </Text>\n      </Box>\n      <ColorList>\n        {colors.map((colorName) => (\n          <ColorCard key={colorName} colorName={colorName} />\n        ))}\n      </ColorList>\n    </Box>\n  )\n}\n\nconst ColorsPage = () => {\n  return (\n    <PageWrapper>\n      <ColorSection title=\"Core primary\" colors={corePrimary} />\n      <ColorSection title=\"Core secondary\" colors={coreSecondary} />\n      <ColorSection title=\"Core tertiary\" colors={coreTertiary} />\n      <ColorSection title=\"Brand secondary\" colors={brandSecondary} />\n      <ColorSection title=\"Traffic light\" colors={trafficLight} />\n      <ColorSection title=\"Third party brand\" colors={thirdPartyBrand} />\n    </PageWrapper>\n  )\n}\n\nexport default {\n  title: 'Foundation/Colors',\n  components: ColorsPage,\n}\n\nconst Template = () => <ColorsPage />\n\nexport const List = Template.bind({})\n\nconst ColorList = styled(Box)`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  gap: 16px;\n`\n\nconst PageWrapper = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`\n\nconst ColorCardWrapper = styled(Box)`\n  background-color: ${theme.colors.cream};\n  border: 1px solid ${theme.colors.chia};\n  border-radius: 8px;\n  overflow: hidden;\n`\n\nconst ColorBox = styled(Box)<{ $colorName: Color }>`\n  background-color: ${({ $colorName }) => theme.colors[$colorName]};\n`\n"],"names":["cov_2n55yqqo2x","Divider","corePrimary","coreSecondary","coreTertiary","brandSecondary","trafficLight","thirdPartyBrand","ColorCard","colorName","hexValue","theme","colors","React","ColorCardWrapper","ColorBox","custom","Box","Text","ColorSection","title","ColorList","map","ColorsPage","PageWrapper","colors_stories","components","Template","List","bind","styled","cream","chia","$colorName","parameters","docs","source","originalSource"],"mappings":"khCAAAA,EAASC,ECQT,MAAMC,EAAc,CAClB,WACA,kBACA,YACA,YAAY,EAERC,EAAgB,CAAC,OAAQ,YAAa,SAAU,MAAM,EACtDC,EAAe,CAAC,UAAW,aAAc,UAAW,OAAO,EAC3DC,EAAiB,CACrB,YACA,SACA,YACA,WACA,YACA,SACA,UACA,SACA,WACA,UACA,SAAS,EAELC,EAAe,CACnB,aACA,aACA,QACA,OACA,QACA,WACA,WAAW,EAEPC,EAAkB,CACtB,mBACA,WACA,SACA,IACA,WACA,WACA,OACA,SACA,WACA,UACA,MACA,UAAU,EAGNC,EAAYA,CAAC,CAAEC,UAAAA,CAAgC,IAAM,CACzD,MAAMC,EAAWC,EAAMC,OAAOH,CAAS,EACvC,OACEI,EAAA,cAACC,EAAA,CAAiB,MAAM,OAAA,EACtBD,EAAA,cAACE,GAAS,WAAYN,EAAW,MAAM,OAAO,GAAI,CAAEO,OAAQ,KAAA,CAAM,CAAE,EACpEH,EAAA,cAACZ,EAAA,IAAO,EACRY,EAAA,cAACI,EAAA,CAAI,GAAG,OAAO,GAAI,CAAED,OAAQ,CAAA,GAC3BH,EAAA,cAACK,EAAA,CAAK,IAAI,OAAO,KAAK,gBACnBT,CACH,kBACCS,EAAA,CAAK,IAAI,OAAO,KAAK,UAAU,MAAM,QAAA,EACnCR,CACH,CACF,CACF,CAEJ,EAEMS,EAAeA,CAAC,CACpBC,MAAAA,EACAR,OAAAA,CAIF,IAEIC,EAAA,cAACI,EAAA,CAAI,MAAM,MAAA,EACTJ,EAAA,cAACI,EAAA,CAAI,GAAG,MAAA,EACNJ,EAAA,cAACK,EAAA,CAAK,IAAI,OAAO,KAAK,gBAAA,EACnBE,CACH,CACF,EACAP,EAAA,cAACQ,EAAA,KACET,EAAOU,IAAKb,GACXI,EAAA,cAACL,EAAA,CAAU,IAAKC,EAAW,UAAAA,CAAA,CAAqB,CACjD,CACH,CACF,EAIEc,EAAaA,oBAEdC,EAAA,KACCX,EAAA,cAACM,GAAa,MAAM,eAAe,OAAQjB,CAAAA,CAAY,kBACtDiB,EAAA,CAAa,MAAM,iBAAiB,OAAQhB,EAAc,EAC3DU,EAAA,cAACM,EAAA,CAAa,MAAM,gBAAgB,OAAQf,EAAa,EACzDS,EAAA,cAACM,GAAa,MAAM,kBAAkB,OAAQd,CAAAA,CAAe,kBAC5Dc,EAAA,CAAa,MAAM,gBAAgB,OAAQb,CAAAA,CAAa,EACzDO,EAAA,cAACM,EAAA,CAAa,MAAM,oBAAoB,OAAQZ,EAAgB,CAClE,EAIJkB,EAAA,CACEL,MAAO,oBACPM,WAAYH,CAAU,EAGlBI,EAAWA,IAAMd,EAAA,cAACU,EAAA,IAAU,EAErBK,EAAOD,EAASE,KAAK,CAAA,CAAE,EAE9BR,EAAYS,EAAOb,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA,EAOtBO,EAAcM,EAAOb,CAAG;AAAA;AAAA;AAAA;AAAA,EAMxBH,EAAmBgB,EAAOb,CAAG;AAAA,sBACbN,EAAMC,OAAOmB,KAAK;AAAA,sBAClBpB,EAAMC,OAAOoB,IAAI;AAAA;AAAA;AAAA,EAKjCjB,EAAWe,EAAOb,CAAG;AAAA,sBACL,CAAC,CAAEgB,WAAAA,CAAW,IAAMtB,EAAMC,OAAOqB,CAAU,CAAC;AAAA,YAClEL,EAAAM,WAAA,CAAA,GAAAN,EAAAM,WAAAC,KAAA,CAAA,IAAAP,EAAAA,EAAAM,aAAAN,YAAAA,EAAAO,KAAAC,OAAA,CAAAC,eAAA,uBAAA,IAAAT,GAAAA,EAAAA,EAAAM,aAAAN,YAAAA,EAAAO,OAAAP,YAAAA,EAAAQ,MAAAA,CAAA,CAAA"}