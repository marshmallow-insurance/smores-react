{"version":3,"file":"InternalField-Cpvtn-Ll.js","sources":["../../src/fields/components/InternalField.tsx"],"sourcesContent":["import React, { ReactNode } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Box } from '../../Box'\nimport { Icon } from '../../Icon'\nimport { Text } from '../../Text'\nimport { CommonFieldProps } from '../commonFieldTypes'\n\ninterface InternalFieldProps extends CommonFieldProps {\n  children: ReactNode\n  className?: string\n  htmlFor?: string\n  fieldType: 'field' | 'fieldset'\n}\n\nexport const InternalField = ({\n  children,\n  fieldType,\n  renderAsTitle,\n  htmlFor,\n  className,\n  label,\n  assistiveText,\n  error,\n  errorMsg,\n  required,\n  completed,\n  ...marginProps\n}: InternalFieldProps) => {\n  const labelTag = fieldType === 'field' ? 'label' : 'legend'\n\n  const textColor = error ? 'color.feedback.negative.200' : 'color.text.subtle'\n  return (\n    <Container\n      forwardedAs={fieldType === 'field' ? 'div' : 'fieldset'}\n      className={className}\n      {...marginProps}\n    >\n      {label && (\n        <>\n          {renderAsTitle ? (\n            <Box mb=\"16px\">\n              <Text tag={labelTag} typo=\"heading-small\" htmlFor={htmlFor}>\n                {label}\n              </Text>\n\n              {assistiveText && (\n                <Text tag=\"p\" color=\"sesame\" mt={{ custom: 4 }}>\n                  {assistiveText}\n                </Text>\n              )}\n            </Box>\n          ) : (\n            <Text\n              tag={labelTag}\n              typo=\"label\"\n              color={textColor}\n              htmlFor={htmlFor}\n              mb={{ custom: 4 }}\n            >\n              {label}\n              {required && (\n                <Text\n                  tag=\"span\"\n                  typo=\"body-small\"\n                  color=\"color.feedback.negative.200\"\n                >\n                  *\n                </Text>\n              )}\n            </Text>\n          )}\n        </>\n      )}\n\n      <Box>{children}</Box>\n      {fieldType === 'field' && assistiveText && !renderAsTitle && (\n        <Text\n          tag={labelTag}\n          typo=\"caption\"\n          color={textColor}\n          mt={{ custom: 4 }}\n        >\n          {assistiveText}\n        </Text>\n      )}\n\n      {error &&\n        errorMsg &&\n        (typeof errorMsg === 'string' ? (\n          <Box flex alignItems=\"center\" mt=\"8px\" gap={{ custom: 4 }}>\n            <Icon\n              render=\"warning\"\n              size={16}\n              color=\"color.feedback.negative.200\"\n            />\n            <Text tag=\"span\" typo=\"caption\" color=\"color.feedback.negative.200\">\n              {errorMsg}\n            </Text>\n          </Box>\n        ) : (\n          <Box mt=\"8px\">{errorMsg}</Box>\n        ))}\n\n      {/* When completed is false, whitespace is rendered */}\n      {completed !== undefined && (\n        <AnimationWrapper\n          $displayStatus={completed}\n          $isError={!!(error && errorMsg)}\n        >\n          <StatusWrapper mt={'8px'}>\n            <Icon\n              render=\"included\"\n              size={16}\n              color=\"color.feedback.positive.200\"\n            />\n            <Text typo=\"caption\" color=\"color.feedback.positive.200\">\n              Complete\n            </Text>\n          </StatusWrapper>\n        </AnimationWrapper>\n      )}\n    </Container>\n  )\n}\n\nconst AnimationWrapper = styled(Box)<{\n  $displayStatus: boolean\n  $isError: boolean\n}>`\n  width: 0;\n  overflow: hidden;\n\n  ${({ $displayStatus }) =>\n    $displayStatus &&\n    css`\n      transition: width 0.6s ease-in;\n      width: 100%;\n    `}\n\n  /* This enables animation to appear when previous state is error */\n  ${({ $isError }) =>\n    $isError &&\n    css`\n      height: 0;\n    `}\n`\n\nconst StatusWrapper = styled(Box)`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n`\n\nconst Container = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: 100%;\n\n  // In case, the element is a 'fieldset', we remove the border\n  border: 0;\n`\n"],"names":["cov_2aglyl4l22","actualCoverage","InternalField","fieldType","renderAsTitle","htmlFor","className","label","assistiveText","error","errorMsg","required","completed","marginProps","textColor","mb","React","Box","tag","Text","typo","color","mt","custom","labelTag","children","flex","alignItems","gap","render","Icon","size","$displayStatus","AnimationWrapper","$isError","createElement","StatusWrapper","s"],"mappings":"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"}