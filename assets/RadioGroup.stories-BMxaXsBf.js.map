{"version":3,"file":"RadioGroup.stories-BMxaXsBf.js","sources":["../../src/RadioGroup/constants.ts","../../src/utils/visuallyHidden.ts","../../src/RadioGroup/RadioElement.tsx","../../src/RadioGroup/RadioItem.tsx","../../src/RadioGroup/RadioGroup.tsx","../../src/RadioGroup/storybook/radio-visual.svg","../../src/RadioGroup/storybook/RadioGroup.stories.tsx"],"sourcesContent":["export const ITEM_GAP = 12\n","/**\n * Hide element visually but still have it accessible for assitive device\n * @link https://www.a11yproject.com/posts/how-to-hide-content/\n */\nexport const visuallyHidden = `\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  height: 1px;\n  overflow: hidden;\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n`\n","import React, { FocusEvent, forwardRef } from 'react'\nimport styled from 'styled-components'\n\nimport { theme } from '../theme'\nimport { focusOutline } from '../utils/focusOutline'\nimport { MarginProps } from '../utils/space'\nimport { visuallyHidden } from '../utils/visuallyHidden'\n\nimport { Box } from '../Box'\nimport { BaseValueType } from './types'\n\ntype RadioElementProps = {\n  name: string\n  id: string\n  value: BaseValueType\n  checked: boolean\n  onChange: (value: BaseValueType) => void\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void\n  isError: boolean\n  isDisabled?: boolean\n} & MarginProps\n\nexport const RadioElement = forwardRef<HTMLInputElement, RadioElementProps>(\n  function RadioElement(\n    {\n      name,\n      id,\n      value,\n      isDisabled,\n      checked,\n      onChange,\n      onBlur,\n      isError,\n      ...marginProps\n    },\n    ref,\n  ) {\n    return (\n      <>\n        <StyledInput\n          ref={ref}\n          type=\"radio\"\n          name={name}\n          id={id}\n          value={`${value}`}\n          checked={checked}\n          onChange={() => onChange(value)}\n          onBlur={onBlur}\n          disabled={isDisabled}\n        />\n        <RadioCircle $isError={isError} $checked={checked} {...marginProps} />\n      </>\n    )\n  },\n)\n\nconst StyledInput = styled.input`\n  ${visuallyHidden}\n`\n\nconst RADIO_SIZE = 24\n\nconst RadioCircle = styled(Box)<{ $isError: boolean; $checked: boolean }>`\n  flex-shrink: 0;\n  width: ${RADIO_SIZE}px;\n  height: ${RADIO_SIZE}px;\n  border-radius: ${RADIO_SIZE}px;\n  background-color: ${theme.colors.cream};\n  border: 2px solid\n    ${({ $isError }) =>\n      $isError ? theme.colors.strawberry : theme.colors.sesame};\n\n  ${({ $checked, $isError }) =>\n    !$checked &&\n    !$isError &&\n    `\n    &:hover {\n      border: 2px solid ${theme.colors.liquorice};\n    }\n  `}\n\n  ${({ $checked, $isError }) =>\n    $checked &&\n    `border: 8px solid ${\n      $isError ? theme.colors.strawberry : theme.colors.liquorice\n    };`}\n\n  ${focusOutline({ selector: `${StyledInput}:focus-visible + &` })}\n`\n","import React, { FocusEvent, forwardRef } from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { theme } from '../theme'\nimport { useUniqueId } from '../utils/id'\n\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Icons } from '../Icon/iconsList'\n\nimport { Text } from '../Text'\nimport { RadioElement } from './RadioElement'\nimport { ITEM_GAP } from './constants'\nimport { BaseValueType, DisplayType, IconPosition, ItemWidth } from './types'\n\ntype RadioItemProps = {\n  name: string\n  visual?: string\n  icon?: Icons\n  iconPosition?: IconPosition\n  value: BaseValueType\n  label: string\n  checked: boolean\n  onChange: (value: BaseValueType) => void\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void\n  displayType: DisplayType\n  isError: boolean\n  fallbackStyle?: boolean\n  bodyCopy?: string\n  disabled?: boolean\n  itemWidth?: ItemWidth\n}\n\nexport const RadioItem = forwardRef<HTMLInputElement, RadioItemProps>(\n  function RadioItem(\n    {\n      name,\n      visual,\n      icon,\n      iconPosition = 'center',\n      label,\n      value,\n      checked,\n      onChange,\n      onBlur,\n      displayType,\n      isError,\n      fallbackStyle,\n      bodyCopy,\n      disabled,\n      itemWidth,\n    },\n    ref,\n  ) {\n    const id = useUniqueId()\n\n    return (\n      <Wrapper\n        htmlFor={id}\n        checked={checked}\n        $displayType={displayType}\n        data-testid={value}\n        $isError={isError}\n        $fallbackStyle={fallbackStyle}\n        $disabled={disabled}\n        $itemWidth={itemWidth}\n      >\n        {visual && !icon && (\n          <VisualWrapper>\n            <Visual $visualUrl={visual} />\n          </VisualWrapper>\n        )}\n        {!visual && icon && (\n          <IconWrapper $iconPosition={iconPosition}>\n            <Icon render={icon} size={24} />\n          </IconWrapper>\n        )}\n        <Box flex alignItems=\"center\">\n          <RadioElement\n            ref={ref}\n            name={name}\n            id={id}\n            value={value}\n            checked={checked}\n            onChange={onChange}\n            onBlur={onBlur}\n            isError={isError}\n            mr=\"8px\"\n            isDisabled={disabled}\n          />\n          <Box>\n            <RadioText $isError={isError}>{label}</RadioText>\n            {bodyCopy && (\n              <Box>\n                <Text typo=\"caption\">{bodyCopy}</Text>\n              </Box>\n            )}\n          </Box>\n        </Box>\n      </Wrapper>\n    )\n  },\n)\n\nconst VisualWrapper = styled.div`\n  width: 100%;\n  max-width: 120px;\n  margin: 0 auto 8px;\n`\n\nconst IconWrapper = styled.div<{ $iconPosition?: IconPosition }>`\n  display: flex;\n  padding-bottom: 12px;\n\n  ${({ $iconPosition }) =>\n    $iconPosition === 'center' &&\n    css`\n      justify-content: center;\n    `}\n\n  ${({ $iconPosition }) =>\n    $iconPosition === 'start' &&\n    css`\n      justify-content: flex-start;\n    `}\n`\n\nconst Visual = styled.div<{ $visualUrl: string }>`\n  width: 100%;\n  padding-top: 100%;\n  background-image: url('${(p) => p.$visualUrl}');\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position: center;\n`\n\nconst Wrapper = styled.label<\n  TransientProps<\n    Pick<RadioItemProps, 'displayType' | 'isError' | 'fallbackStyle'>\n  > & { checked: boolean; $disabled?: boolean; $itemWidth?: ItemWidth }\n>`\n  display: flex;\n  flex-direction: column;\n  cursor: ${({ $disabled }) => ($disabled ? 'default' : 'pointer')};\n  opacity: ${({ $disabled }) => ($disabled ? '0.5' : '1')};\n  ${({\n    $displayType,\n    checked,\n    $isError,\n    $fallbackStyle,\n    $disabled,\n    $itemWidth,\n  }) => css`\n    ${($displayType === 'horizontal-card' ||\n      $displayType === 'vertical-card') &&\n    css`\n      border-radius: 12px;\n      background-color: ${$fallbackStyle\n        ? theme.colors.cream\n        : theme.colors.custard};\n      padding: ${checked ? '10px' : '12px'};\n      border: ${checked &&\n      ($isError\n        ? `2px solid ${theme.colors.strawberry}`\n        : `2px solid ${theme.colors.liquorice}`)};\n\n      &:hover {\n        ${!$disabled &&\n        css`\n          background-color: ${$fallbackStyle\n            ? theme.colors.coconut\n            : theme.colors.oatmeal};\n        `}\n      }\n    `}\n    ${$displayType === 'horizontal-card' &&\n    css`\n      justify-content: center;\n      ${!$itemWidth &&\n      css`\n        @media (min-width: 420px) {\n          width: calc(50% - ${ITEM_GAP / 2}px);\n        }\n\n        @media (min-width: 768px) {\n          width: 201px;\n        }\n      `}\n    `}\n  width: ${$itemWidth ?? '100%'};\n  `}\n`\n\nconst RadioText = styled.span<{ $isError: boolean }>`\n  line-height: 16px;\n  font-size: 16px;\n  font-weight: ${theme.font.weight.medium};\n  color: ${({ $isError }) =>\n    $isError ? theme.colors.strawberry : theme.colors.liquorice};\n  margin-top: 4px;\n`\n","import React, {\n  FocusEvent,\n  ForwardedRef,\n  forwardRef,\n  ReactElement,\n  RefObject,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport styled from 'styled-components'\n\nimport { useUniqueId } from '../utils/id'\n\nimport { CommonFieldProps } from '../fields/commonFieldTypes'\nimport { Fieldset } from '../fields/Fieldset'\nimport { Icons } from '../Icon/iconsList'\n\nimport { ITEM_GAP } from './constants'\nimport { RadioItem } from './RadioItem'\nimport {\n  BaseValueType,\n  DisplayType,\n  IconPosition,\n  ItemWidth,\n  JustifyContent,\n} from './types'\nimport { TransientProps } from 'utils/utilTypes'\n\nexport type RadioGroupProps<Value extends BaseValueType = BaseValueType> = {\n  options: Array<{\n    visual?: string\n    icon?: Icons\n    iconPosition?: IconPosition\n    label: string\n    value: Value\n    bodyCopy?: string\n    disabled?: boolean\n  }>\n  justifyContent?: JustifyContent\n  itemWidth?: ItemWidth\n  onChange: (value: Value) => void\n  onBlur?: (e: FocusEvent<HTMLInputElement>) => void\n  value: Value\n  displayType?: DisplayType\n  fallbackStyle?: boolean\n} & CommonFieldProps\n\nexport type RadioGroupElement = {\n  focus: VoidFunction\n}\n\nconst RadioGroupComponent = <Value extends BaseValueType>(\n  {\n    options,\n    onChange,\n    onBlur,\n    value,\n    displayType = 'normal',\n    renderAsTitle = false,\n    error = false,\n    fallbackStyle = false,\n    justifyContent,\n    itemWidth,\n    ...fieldProps\n  }: RadioGroupProps<Value>,\n  ref: ForwardedRef<RadioGroupElement>,\n) => {\n  const name = useUniqueId()\n\n  const optionRefs = useRef<RefObject<HTMLInputElement | null>[]>([])\n  useImperativeHandle(ref, () => {\n    return {\n      focus: () => {\n        const selectedIndex = options.findIndex((item) => item.value === value)\n\n        const elementToFocus = selectedIndex === -1 ? 0 : selectedIndex\n        optionRefs.current[elementToFocus].current?.focus()\n      },\n    }\n  })\n\n  return (\n    <Fieldset renderAsTitle={renderAsTitle} error={error} {...fieldProps}>\n      <RadioItemList\n        $displayType={displayType}\n        $justifyContent={justifyContent}\n      >\n        {options.map((option, index) => {\n          const isSelected = option.value === value\n\n          return (\n            <RadioItem\n              ref={(radioOptionRef) => {\n                optionRefs.current[index] = {\n                  current: radioOptionRef,\n                }\n              }}\n              key={`${option.value}`}\n              name={name}\n              visual={option.visual}\n              icon={option.icon}\n              iconPosition={option.iconPosition}\n              label={option.label}\n              value={option.value}\n              checked={isSelected}\n              // @ts-expect-error TODO: address this type inconsistency in another PR\n              onChange={onChange}\n              onBlur={onBlur}\n              displayType={displayType}\n              isError={error}\n              fallbackStyle={fallbackStyle}\n              bodyCopy={option.bodyCopy}\n              disabled={option.disabled}\n              itemWidth={itemWidth}\n            />\n          )\n        })}\n      </RadioItemList>\n    </Fieldset>\n  )\n}\n\nexport const RadioGroup = forwardRef(RadioGroupComponent) as <\n  Value extends BaseValueType = BaseValueType,\n>(\n  p: RadioGroupProps<Value> & React.RefAttributes<HTMLInputElement>,\n) => ReactElement | null\n\nconst RadioItemList = styled.div<\n  TransientProps<Pick<RadioGroupProps, 'displayType' | 'justifyContent'>>\n>`\n  display: flex;\n  gap: ${ITEM_GAP}px;\n  justify-content: ${({ $justifyContent }) => $justifyContent ?? 'flex-start'};\n\n  ${({ $displayType }) => {\n    switch ($displayType) {\n      case 'horizontal-normal':\n        return `\n        flex-direction: row;\n        align-items: center;\n        `\n      case 'horizontal-card':\n        return `\n          flex-direction: row;\n          flex-wrap: wrap;\n        `\n      default:\n        return 'flex-direction: column;'\n    }\n  }}\n`\n","export default \"__VITE_ASSET__CmSUBWRy__\"","import { Meta, StoryObj } from '@storybook/react'\nimport { BaseValueType } from 'RadioGroup/types'\nimport React, { useState } from 'react'\nimport { RadioGroup } from '../RadioGroup'\nimport visualSvg from './radio-visual.svg'\n\nconst options = [\n  { label: 'Social', value: 'social' },\n  { label: 'Social and commuting', value: 'social/commuting' },\n  {\n    label: 'All the above, and I drive for work',\n    value: 'social/commuting/work',\n  },\n  { label: 'It’s a commercial vehicle', value: 'commercial', disabled: true },\n]\n\nconst meta: Meta<typeof RadioGroup> = {\n  title: 'RadioGroup',\n  component: RadioGroup,\n  argTypes: { onChange: { action: 'clicked' } },\n  args: {\n    label: 'What do you use it for?',\n    onChange: (value: BaseValueType) => console.log(value),\n    value: options[0].value,\n    options,\n    displayType: 'normal',\n  },\n  decorators: [\n    (Story) => (\n      <div style={{ margin: '64px' }}>\n        <Story />\n      </div>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof RadioGroup>\n\nexport const Default: Story = {}\n\nexport const Interactive: Story = {\n  render: (args) => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [value, setValue] = useState<BaseValueType>('')\n    return <RadioGroup {...args} onChange={setValue} value={value} />\n  },\n}\n\nexport const HorizontalNormal: Story = {\n  args: {\n    displayType: 'horizontal-normal',\n  },\n}\n\nexport const Vertical: Story = {\n  args: {\n    displayType: 'vertical-card',\n  },\n}\n\nexport const Horizontal: Story = {\n  args: {\n    displayType: 'horizontal-card',\n  },\n}\n\nexport const WithBodyCopy: Story = {\n  args: {\n    displayType: 'vertical-card',\n    options: options.map((option) => ({\n      ...option,\n      bodyCopy:\n        'E.g. shopping, travel and driving to see friends. Does not include travelling to and from work.',\n    })),\n  },\n}\n\nexport const WithError: Story = {\n  args: {\n    error: true,\n    errorMsg: 'something',\n    displayType: 'horizontal-card',\n  },\n  parameters: {\n    a11y: {\n      config: {\n        rules: [\n          {\n            id: 'color-contrast',\n            enabled: false,\n          },\n        ],\n      },\n    },\n  },\n}\n\nexport const WithVisual: Story = {\n  args: {\n    options: options.map((option) => ({ ...option, visual: visualSvg })),\n    displayType: 'horizontal-card',\n  },\n}\n\nexport const Withicon: Story = {\n  args: {\n    options: options.map((option) => ({\n      ...option,\n      icon: 'card',\n      iconPosition: 'center',\n    })),\n    displayType: 'horizontal-card',\n  },\n}\n"],"names":["cov_p31209x8b","ITEM_GAP","cov_2ores1sy04","visuallyHidden","cov_2146th3r7d","actualCoverage","RadioElement","forwardRef","id","value","isDisabled","checked","onChange","onBlur","isError","s","React","StyledInput","type","name","disabled","$isError","$checked","marginProps","styled","RadioCircle","RADIO_SIZE","colors","theme","selector","cov_eiu7cgzpw","RadioItem","visual","icon","iconPosition","label","displayType","fallbackStyle","bodyCopy","itemWidth","useUniqueId","Wrapper","$displayType","$fallbackStyle","$disabled","$itemWidth","$visualUrl","$iconPosition","render","Icon","size","flex","Box","alignItems","mr","typo","Text","p","b","cov_236yg6cob","RadioGroupComponent","options","renderAsTitle","error","justifyContent","optionRefs","useRef","useImperativeHandle","ref","selectedIndex","item","current","elementToFocus","_a","Fieldset","RadioItemList","$justifyContent","option","index","isSelected","radioOptionRef","key","visualSvg","meta","title","component","RadioGroup","argTypes","action","args","console","log","decorators","Story","margin","Default","Interactive","setValue","useState","HorizontalNormal","Vertical","Horizontal","WithBodyCopy","map","WithError","errorMsg","parameters","a11y","config","rules","enabled","WithVisual","Withicon","docs","source","originalSource"],"mappings":"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"}