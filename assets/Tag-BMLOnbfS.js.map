{"version":3,"file":"Tag-BMLOnbfS.js","sources":["../../src/Tag/Tag.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { MarginProps } from '../utils/space'\n\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Text } from '../Text'\nimport { Color, theme } from '../theme'\nimport { Icon } from '../Icon'\nimport { Icons } from 'Icon/iconsList'\n\nexport type TagProps = {\n  label: string\n  color: Color\n  bgColor: Color\n  borderColor?: Color\n  className?: string\n  icon?: Icons\n  iconColor?: Color\n  onClick?: () => void\n} & MarginProps\n\nexport const Tag: FC<TagProps> = ({\n  label,\n  color,\n  borderColor,\n  bgColor,\n  className,\n  icon,\n  iconColor,\n  onClick,\n  ...marginProps\n}) => (\n  <Wrapper\n    $bgColor={bgColor}\n    className={className}\n    $borderColor={borderColor}\n    {...marginProps}\n    alignContent=\"center\"\n    justifyContent=\"center\"\n    onClick={onClick}\n  >\n    {icon && (\n      <TagIcon\n        render={icon}\n        color={iconColor}\n        size={16}\n        data-testid={`tag-icon-${icon}`}\n      />\n    )}\n    <TagText tag=\"span\" typo=\"label\" color={color}>\n      {label}\n    </TagText>\n  </Wrapper>\n)\n\ntype WrapperProps = TransientProps<Pick<TagProps, 'bgColor' | 'borderColor'>>\n\nconst Wrapper = styled(Box)<WrapperProps>`\n  background-color: ${({ $bgColor }) => $bgColor && theme.colors[$bgColor]};\n  border: ${({ $borderColor }) =>\n    $borderColor && `1px solid ${theme.colors[$borderColor]}`};\n\n  border-radius: 6px;\n  padding: 4px 8px;\n\n  height: 22px;\n\n  box-sizing: border-box;\n  display: inline-flex;\n`\n\nconst TagText = styled(Text)`\n  display: flex;\n  align-items: center;\n  font-size: 10px;\n  font-weight: 500;\n  line-height: 12px;\n  text-transform: uppercase;\n`\n\nconst TagIcon = styled(Icon)`\n  padding-right: 4px;\n`\n"],"names":["cov_1o0kf1lqso","actualCoverage","Tag","color","borderColor","bgColor","className","icon","iconColor","onClick","marginProps","s","React","Wrapper","$borderColor","alignContent","justifyContent","render","TagIcon","size","tag","typo","label","styled","Box","$bgColor","theme"],"mappings":"4kGA+BK,OAAAA,EAAAC,UAAA,CAAA,OAAAA,CAAA,EAAAA,CAAAD,CA/BLA,IAsBOA,IAAM,EAAoBE,CAAC,IAChC,MAAAA,EAAA,CAAA,CACAC,MAAAA,EACAC,MAAAA,EACAC,YAAAA,EACAC,QAAAA,EACAC,UAAAA,EACAC,KAAAA,EACAC,UAAAA,EACA,QAAAA,EACF,GAAAC,CACEV,KAAAA,EAAA,EAAAW,EAAA,CAAA,IAAAX,WACYY,EAAA,cAAAC,EAAA,CACVP,SAAAD,EACAS,UAAAA,EACC,aAAGV,EACJW,GAAAA,EACAC,aAAA,SACAP,eAAAA,kBAIIQ,GAAAA,EAAQ,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAV,IAAAP,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAY,EAAA,cAAAM,EAAA,CACRf,OAAOK,EACPW,MAAMX,EACN,KAAA,GACF,6BAEOY,CAAAA,uBAAWC,WAAalB,KAAAA,eAGnC,EAAAmB,CAAA,CAAA,QAMqB,EAAA,EAAA,CAAA,IAAAC,EAAAC,CAAA;AAAA,sBAAEC,CAAAA,CAAS,SAAAA,CAAMzB,KAAAA,EAAA,EAAAW,EAAA,CAAA,IAAAX,EAAAA,EAAAA,EAAAA,CAAAA,IAAkCA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAyB,IAAAzB,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA0B,EAAA,OAAAD,CAAA;YAC3DX,CAAAA,CAAa,aAAAA,CACxBd,KAAAA,EAAA,EAAAW,EAAA,CAAA,IAAAX,WAAyDA,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAAc,IAAAd,EAAA,EAAA,EAAA,CAAA,EAAA,CAAA,IAAA,aAAA0B,EAAA,OAAAZ,CAAA,CAAA;;;;;;;;;;;;;;;;;;"}