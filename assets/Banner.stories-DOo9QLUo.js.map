{"version":3,"file":"Banner.stories-DOo9QLUo.js","sources":["../../src/Banner/BannerItem.tsx","../../src/Banner/BannerContainer.tsx","../../src/Banner/hooks.ts","../../src/Banner/storybook/Banner.stories.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled, { css } from 'styled-components'\nimport { TransientProps } from 'utils/utilTypes'\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\nimport { useTimeout } from '../hooks'\nimport { Color, theme } from '../theme'\nimport { Banner } from './types'\n\ntype StylesItem = {\n  iconColor: Color\n  backgroundColor: string\n  textColor: Color\n}\n\ntype BannerType = 'upsell' | 'critical' | 'general' | 'success'\n\nconst styles: Record<BannerType, StylesItem> = {\n  upsell: {\n    iconColor: 'liquorice',\n    backgroundColor: theme.colors.marshmallowPink,\n    textColor: 'liquorice',\n  },\n  critical: {\n    iconColor: 'mascarpone',\n    backgroundColor: theme.colors.strawberry,\n    textColor: 'mascarpone',\n  },\n  general: {\n    iconColor: 'mascarpone',\n    backgroundColor: theme.colors.liquorice,\n    textColor: 'mascarpone',\n  },\n  success: {\n    iconColor: 'mascarpone',\n    backgroundColor: theme.colors.apple,\n    textColor: 'mascarpone',\n  },\n}\n\ninterface Props extends Banner {\n  deleteBanner: (id: string) => void\n}\n\nexport const BannerItem: FC<Props> = ({\n  type,\n  autoCloseTime = 4,\n  id,\n  message,\n  topOffset,\n  exploreAction,\n  showExploreText,\n  showExploreIcon,\n  leadingIcon,\n  canManuallyClose,\n  showCloseIcon,\n  deleteBanner,\n  noTimeout,\n}) => {\n  const autoCloseBaner = () => {\n    if (noTimeout) return\n    if (type !== 'critical') return deleteBanner(id)\n    else {\n      return\n    }\n  }\n  useTimeout(() => autoCloseBaner(), autoCloseTime * 1000)\n\n  const textColor = styles[type].textColor\n  const iconColor = styles[type].iconColor\n\n  return (\n    <BannerWrapper\n      p=\"24px\"\n      mt={{ custom: topOffset }}\n      key={id}\n      flex\n      justifyContent=\"space-between\"\n      $type={type}\n    >\n      <Box flex alignItems=\"center\">\n        {leadingIcon && (\n          <Icon mr=\"12px\" render={leadingIcon} size={24} color={iconColor} />\n        )}\n        <Text typo=\"headline-small\" color={textColor}>\n          {message}\n        </Text>\n      </Box>\n      <Box flex alignItems=\"center\">\n        {canManuallyClose && (\n          <GenericButton\n            onClick={() => deleteBanner(id)}\n            aria-label={`close banner ${message}`}\n          >\n            {showCloseIcon ? (\n              <Icon render=\"cross\" size={16} color={iconColor} />\n            ) : (\n              <UnderlinedText tag=\"span\" typo=\"desc-medium\" color={textColor}>\n                Dismiss\n              </UnderlinedText>\n            )}\n          </GenericButton>\n        )}\n        {exploreAction && (\n          <GenericButton onClick={exploreAction} aria-label={`cta ${message}`}>\n            <Box flex alignItems=\"center\">\n              {showExploreText && (\n                <UnderlinedText\n                  ml=\"12px\"\n                  tag=\"span\"\n                  typo=\"desc-medium\"\n                  color={textColor}\n                >\n                  Explore\n                </UnderlinedText>\n              )}\n              {showExploreIcon && (\n                <Icon\n                  render=\"arrow\"\n                  ml=\"12px\"\n                  size={24}\n                  color={iconColor}\n                  rotate={180}\n                />\n              )}\n            </Box>\n          </GenericButton>\n        )}\n      </Box>\n    </BannerWrapper>\n  )\n}\n\nconst BannerWrapper = styled(Box)<TransientProps<Pick<Banner, 'type'>>>(\n  ({ $type }) => css`\n    border-radius: 0px 0px 16px 16px;\n    background-color: ${styles[$type].backgroundColor};\n  `,\n)\n\nconst GenericButton = styled.button`\n  cursor: pointer;\n`\n\nconst UnderlinedText = styled(Text)`\n  text-decoration: underline;\n`\n","import React, {\n  createContext,\n  FC,\n  useState,\n  useCallback,\n  ReactNode,\n  useContext,\n} from 'react'\nimport styled from 'styled-components'\nimport { BannerItem } from './BannerItem'\nimport { CreateBanner, Banner, BannerContextType } from './types'\n\nexport const BannerContext = createContext<BannerContextType>({\n  addBanner: () => {\n    throw new Error('Please add the BannerContainer to your application')\n  },\n})\n\nexport const useBannerContext = () => useContext(BannerContext)\n\nexport const BannerContainer: FC<{ children?: ReactNode }> = ({ children }) => {\n  let bannerId = 0\n  const [banner, setBanner] = useState<Banner[]>([])\n\n  // create banner unique ID\n  const newBannerId = useCallback(() => {\n    const newId = `MM_BANNER_${bannerId}`\n    bannerId++\n    return newId\n  }, [bannerId])\n\n  const addBanner = (banner: CreateBanner) => {\n    const newBanner = {\n      ...banner,\n      id: newBannerId(),\n    }\n    setBanner([newBanner])\n  }\n\n  const deleteBanner = (id: string) => {\n    setBanner(banner.filter((banner) => banner.id !== id))\n  }\n\n  return (\n    <BannerContext.Provider\n      value={{\n        addBanner,\n      }}\n    >\n      {children}\n      <BannerWrapper>\n        {banner.map((banner) => (\n          <BannerItem key={banner.id} {...banner} deleteBanner={deleteBanner} />\n        ))}\n      </BannerWrapper>\n    </BannerContext.Provider>\n  )\n}\n\nconst BannerWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  width: 100%;\n  z-index: 99;\n`\n","import { useBannerContext } from './BannerContainer'\n\nexport const useBanner = () => {\n  const { addBanner } = useBannerContext()\n\n  return { addBanner }\n}\n","import React, { FC, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { Box } from '../../Box'\nimport { Button } from '../../Button'\nimport { Text } from '../../Text'\nimport { BannerContainer } from '../BannerContainer'\nimport { useBanner } from '../hooks'\n\nexport default {\n  title: 'BannerContainer',\n  component: BannerContainer,\n}\n\nconst ChildComponent: FC = () => {\n  const { addBanner } = useBanner()\n\n  return (\n    <Box>\n      <Row label=\"Generic\">\n        <Button\n          primary\n          onClick={() => {\n            addBanner({\n              type: 'general',\n              topOffset: '64px',\n              leadingIcon: 'wellbeing',\n              message: 'Free insurance for 1 month for all our customers',\n              exploreAction: () => undefined,\n              showExploreText: true,\n              canManuallyClose: true,\n            })\n          }}\n        >\n          General banner\n        </Button>\n      </Row>\n      <Row label=\"Upsell\">\n        <Button\n          primary\n          onClick={() => {\n            addBanner({\n              type: 'upsell',\n              topOffset: '64px',\n              leadingIcon: 'circle-tick',\n              message: 'Get up to Â£19.34 off your plan today',\n              exploreAction: () => undefined,\n              showExploreIcon: true,\n            })\n          }}\n        >\n          Upsell banner\n        </Button>\n      </Row>\n      <Row label=\"Success\">\n        <Button\n          primary\n          onClick={() => {\n            addBanner({\n              type: 'success',\n              topOffset: '64px',\n              leadingIcon: 'circle-tick',\n              message: 'Marshmallow Miles discount applied',\n            })\n          }}\n        >\n          Success banner\n        </Button>\n      </Row>\n      <Row label=\"Critical\">\n        <Button\n          primary\n          onClick={() => {\n            addBanner({\n              type: 'critical',\n              topOffset: '64px',\n              leadingIcon: 'card',\n              message: 'Your card needs to be updated',\n              canManuallyClose: true,\n            })\n          }}\n        >\n          Critical banner\n        </Button>\n      </Row>\n      <Row label=\"Success (do not auto close)\">\n        <Button\n          primary\n          onClick={() => {\n            addBanner({\n              type: 'success',\n              topOffset: '64px',\n              leadingIcon: 'circle-tick',\n              message: 'Marshmallow Miles discount applied (no timeout)',\n              noTimeout: true,\n            })\n          }}\n        >\n          Success banner (no timeout)\n        </Button>\n      </Row>\n    </Box>\n  )\n}\nconst Template: FC = () => {\n  return (\n    <>\n      <BannerContainer>\n        <ChildComponent />\n      </BannerContainer>\n    </>\n  )\n}\n\nexport const Default = Template.bind({})\n\nconst Row: FC<{ label: string; children?: ReactNode }> = ({\n  label,\n  children,\n}) => {\n  return (\n    <RowWrapper mt=\"16px\">\n      <Box width=\"140px\">\n        <Text tag=\"span\" typo=\"label-large\">\n          {label}\n        </Text>\n      </Box>\n      {children}\n    </RowWrapper>\n  )\n}\n\nconst RowWrapper = styled(Box)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 16px;\n`\n"],"names":["cov_2nuogf443e","path","hash","global","gcv","coverageData","coverage","actualCoverage","styles","s","upsell","iconColor","backgroundColor","theme","colors","marshmallowPink","textColor","critical","strawberry","general","liquorice","success","apple","BannerItem","type","autoCloseTime","b","id","message","topOffset","exploreAction","showExploreText","showExploreIcon","leadingIcon","canManuallyClose","showCloseIcon","deleteBanner","noTimeout","f","autoCloseBaner","useTimeout","React","createElement","BannerWrapper","p","mt","custom","key","flex","justifyContent","$type","Box","alignItems","Icon","mr","render","size","color","Text","typo","GenericButton","onClick","UnderlinedText","tag","cov_2ezlk4ujry","BannerContext","createContext","addBanner","Error","useBannerContext","useContext","BannerContainer","children","bannerId","banner","setBanner","useState","useCallback","newId","banner2","newBanner","newBannerId","filter","Provider","value","cov_ny31qjx4k","useBanner","Banner_stories","title","component","ChildComponent","Row","Button","undefined","Template","Default","bind","label","RowWrapper","styled","parameters","docs","source","originalSource"],"mappings":"upBAqCI,SAAAA,GAAA,CAAA,IAAAC,EAAA,wEAAAC,EAAA,2CAAAC,EAAA,OAAAC,EAAA,eAAAC,EAAA,CAAA,KAAA,wEAAA,aAAA,CAAA,EAAA,CAAA,MAAA,CAAA,KAAA,EAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,IAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,IAAA,OAAA,KAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA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AAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,EAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,GAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,CAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,EAAA,CAAA,KAAA,gBAAA,KAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,EAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,EAAA,CAAA,EAAA,IAAA,CAAA,MAAA,CAAA,KAAA,GAAA,OAAA,GAAA,EAAA,IAAA,CAAA,KAAA,GAAA,OAAA,GAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,UAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,eAAA,CAAA,QAAA,EAAA,KAAA,KAAA,QAAA,CAAA,4EAAA,EAAA,MAAA,CAAA,QAAA,EAAA,SAAA,03BAAA,EAAA,gBAAA,2CAAA,KAAA,0CAAA,EAAAC,EAAAH,EAAAC,CAAA,IAAAD,EAAAC,CAAA,EAAA,CAAA,IAAA,CAAAE,EAAAL,CAAA,GAAAK,EAAAL,CAAA,EAAA,OAAAC,KAAAI,EAAAL,CAAA,EAAAI,GAAA,IAAAE,EAAAD,EAAAL,CAAA,EAAA+D,OAAAA,YAAA,CAAA,OAAAzD,CAAA,EAAAA,CAAAyD,CAAAA,EA7BN,EAgBC,MAAAC,GAAAD,EAAAvD,EAAAA,OAAAyD,gBAAA,CAEYC,UAAAA,IAAA,CAAAH,MAAAA,EAAA,EAAA1B,EAAA,CAAA,IAAA0B,EAAA,EAAAvD,EAEN,CAAA,QAAsD2D,MAAA,oDAAkB,CAC7E,CACA,CAAA,GAAAJ,EAAA,EAAAvD,EAIQ,CAAA,IAAA,MAAA4D,EAA6BA,KAAAL,EAAA,EAAA1B,EAAA0B,CAAAA,IAAAA,EAAA,EAAAvD,EAAA,CAAA,IAAA6D,EAAAA,WAAAL,CAAA,GAAAD,EAAA,EAAAvD,OAE5B,MAAA8D,EAAAA,CAAA,CAAAC,SAAAA,CAAA,IAAA,CAAAR,IAAA1B,EAAA,CAAA,IACT,IAAImC,GAAAT,IAAAvD,EAAA,CAAA,IAAS,GAEP,KAAA,CAAAiE,EAAAC,CAAsC,GAAAX,EAAA,EAAAvD,EAAA,CAAA,IAAAmE,EAAAA,SAAA,CAAA,CAAA,iBAGxBC,EAAAA,YAAA,IAAA,CAAAb,EAAA,EAAA1B,OAClB,MAAAwC,GAAAd,EAAA,EAAAvD,OAAA,aAAAgE,CAAA,IAAAT,OAAAA,EAAA,EAAAvD,EACUgE,CAAAA,IAAAA,IAAAT,EAAA,EAAAvD,EAAA,EAAA,IACZqE,CAEM,EAAA,CAAAL,CAAA,CAAA,GAAAT,EAAA,EAAAvD,EAAA,EAAA,IAEN,MAAA0D,EAAAY,GAAA,CAAAf,IAAA1B,EAAA,CAAA,IAGE,MAAA0C,GAAAhB,IAAAvD,EAAA,EAAA,IAAA,CAAe,GAAAsE,EAAdpD,GAAAsD,EAAA,CAAA,GAAAjB,EAAA,EAAAvD,EAAA,EAAA,IAEGkE,EAAA,CAAAK,CAAA,CAAA,CACF,EAAAhB,EAAAvD,EAAAA,QAEC,MAAA2B,EAAAT,GAAA,CAAAqC,EAAA,EAAA1B,OAAA0B,IAAAvD,EAAA,EAAA,IACDkE,EAACD,EAAAQ,OAAAH,IAAAf,EAAA,EAAA1B,EAAA0B,CAAAA,IAAAA,IAAAvD,EAAA,EAAA,IAAAsE,EAAApD,KAAAA,EAAA,CAAA,CAKH,EAAAqC,OAAAA,EAAAvD,EAAAA,EAIJ,EAAA,IAA6BgC,EAAAC,cAAAuB,EAAAkB,SAAA,CAAAC,MAAA,CAAAjB,UAAAA,CAAA,GAAAK,EAAA/B,EAAAC,cAAAC;;;;;;;+nCC3D7B,OAAA0C,EAAA,UAAA,CAAA,OAAA9E,CAAA,EAAAA,CAAA,CAAA8E,EAAA,EAAiCA,EAAA,EAAA5E,EAGzB,CAAA,IAAA,MAAY6E,EAAqBA,IAAA,CAAAD,EAAA,EAAA/C,EAAA,CAAA,IAEvC,KAAA,YAAmB,GAAA+C,EAAA,EAAA5E,OAAA4D,EAAAgB,GAAAA,OAAAA,IAAA5E,EAAA,CAAA,mBCGrB8E,GAAA,CACEC,MAAO,kBACPC,UAAWlB,CAAe,EAGtBmB,EAAqBA,IAAM,CACzB,KAAA,CAAEvB,UAAAA,GAAcmB,EAAU,EAG9B,OAAA7C,EAAA,cAACU,EACC,KAAAV,EAAA,cAACkD,EAAI,CAAA,MAAM,SACT,EAAAlD,EAAA,cAACmD,EACC,CAAA,QAAO,GACP,QAAS,IAAM,CACHzB,EAAA,CACR3C,KAAM,UACNK,UAAW,OACXI,YAAa,YACbL,QAAS,mDACTE,cAAeA,IAAM+D,GACrB9D,gBAAiB,GACjBG,iBAAkB,EAAA,CACnB,CAAA,CACD,EAAA,gBAGJ,CACF,EACCO,EAAA,cAAAkD,EAAA,CAAI,MAAM,QAAA,EACRlD,EAAA,cAAAmD,EAAA,CACC,QAAO,GACP,QAAS,IAAM,CACHzB,EAAA,CACR3C,KAAM,SACNK,UAAW,OACXI,YAAa,cACbL,QAAS,uCACTE,cAAeA,IAAM+D,GACrB7D,gBAAiB,EAAA,CAClB,CAAA,CACD,EAAA,eAGJ,CACF,EACCS,EAAA,cAAAkD,EAAA,CAAI,MAAM,SAAA,EACRlD,EAAA,cAAAmD,EAAA,CACC,QAAO,GACP,QAAS,IAAM,CACHzB,EAAA,CACR3C,KAAM,UACNK,UAAW,OACXI,YAAa,cACbL,QAAS,oCAAA,CACV,CAAA,CACD,EAAA,gBAGJ,CACF,EACCa,EAAA,cAAAkD,EAAA,CAAI,MAAM,UAAA,EACRlD,EAAA,cAAAmD,EAAA,CACC,QAAO,GACP,QAAS,IAAM,CACHzB,EAAA,CACR3C,KAAM,WACNK,UAAW,OACXI,YAAa,OACbL,QAAS,gCACTM,iBAAkB,EAAA,CACnB,CAAA,CACD,EAAA,iBAGJ,CACF,EACCO,EAAA,cAAAkD,EAAA,CAAI,MAAM,6BAAA,EACRlD,EAAA,cAAAmD,EAAA,CACC,QAAO,GACP,QAAS,IAAM,CACHzB,EAAA,CACR3C,KAAM,UACNK,UAAW,OACXI,YAAa,cACbL,QAAS,kDACTS,UAAW,EAAA,CACZ,CAAA,GACD,6BAGJ,CACF,CACF,CAEJ,EACMyD,EAAeA,oCAGdrD,EAAA,cAAA8B,EAAA,KACE9B,EAAA,cAAAiD,EAAA,IAAc,CACjB,CACF,EAISK,EAAUD,EAASE,KAAK,EAAE,EAEjCL,EAAmDA,CAAC,CACxDM,MAAAA,EACAzB,SAAAA,CACF,oBAEK0B,EAAW,CAAA,GAAG,MACb,EAAAzD,EAAA,cAACU,GAAI,MAAM,SACRV,EAAA,cAAAiB,EAAA,CAAK,IAAI,OAAO,KAAK,eACnBuC,CACH,CACF,EACCzB,CACH,EAIE0B,EAAaC,EAAOhD,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA,YAK5B4C,EAAAK,WAAA,CAAA,GAAAL,EAAAK,WAAAC,KAAA,CAAA,IAAAN,EAAAA,EAAAK,aAAAL,YAAAA,EAAAM,KAAAC,OAAA,CAAAC,eAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAA,IAAAR,GAAAA,EAAAA,EAAAK,aAAAL,YAAAA,EAAAM,OAAAN,YAAAA,EAAAO,MAAA,CAAA,CAAA"}