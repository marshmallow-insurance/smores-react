{"version":3,"file":"Pagination.stories-CvtNuXhC.js","sources":["../../src/Pagination/Pagination.tsx","../../src/Pagination/storybook/Pagination.stories.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Box } from '../Box'\nimport { Icon } from '../Icon'\nimport { Text } from '../Text'\n\nimport { theme } from '../theme'\nimport { focusOutlineStyle } from '../utils/focusOutline'\nimport { MarginProps } from '../utils/space'\n\nconst MAX_PAGES = 7\nconst MAX_ADDITIONAL_PAGES = Math.ceil(MAX_PAGES / 2)\n\nexport type PaginationProps = {\n  /** Total number of records  */\n  total: number\n  /** Number of records per page  */\n  partition: number\n  /** Handle page change */\n  handlePageChange: (page: number) => void\n  /** Sets current page number */\n  currentPage?: number\n} & MarginProps\n\nexport const Pagination: FC<PaginationProps> = ({\n  total,\n  partition,\n  handlePageChange,\n  currentPage,\n  ...marginProps\n}) => {\n  const [lastPage, setLastPage] = useState(0)\n  const [activePage, setActivePage] = useState(1)\n  const [pages, setPages] = useState<number[]>([])\n  const [shownPages, setShownPages] = useState<number[]>([])\n  const [showFirstDots, setShowFirstDots] = useState(false)\n  const [showLastDots, setShowLastDots] = useState(false)\n\n  useEffect(() => {\n    // This is a rather hacky fix, in theory it should be listening to total, but because the total comes from the same endpoint as the data, it forces a reset to 1 every time\n    // Using lastPage seems to bypass that\n    if (currentPage) {\n      setActivePage(currentPage)\n    } else {\n      setActivePage(1)\n    }\n  }, [lastPage, currentPage])\n\n  useEffect(() => {\n    const numberOfPages = Math.ceil(total / partition)\n    if (numberOfPages > 1) {\n      setLastPage(numberOfPages)\n    } else if (numberOfPages === 1) {\n      // Sets last page to be null to avoid the last page being kept from previous state.\n      setLastPage(0)\n    }\n    if (numberOfPages > 2) {\n      const allPages = Array.from({ length: numberOfPages }, (_, i) => i + 1)\n      setPages(allPages.slice(1, numberOfPages - 1))\n    } else {\n      // Sets pages to empty to avoid using the previous state if pages set before.\n      setPages([])\n    }\n  }, [total, partition])\n\n  useEffect(() => {\n    if (lastPage <= MAX_PAGES) {\n      setShownPages(pages)\n    } else if (activePage <= MAX_ADDITIONAL_PAGES) {\n      setShownPages(pages.slice(0, MAX_ADDITIONAL_PAGES))\n    } else if (activePage > lastPage - MAX_ADDITIONAL_PAGES) {\n      setShownPages(pages.slice(pages.length - MAX_ADDITIONAL_PAGES))\n    } else {\n      const activePageIndex = pages.indexOf(activePage)\n      setShownPages(pages.slice(activePageIndex - 1, activePageIndex + 2))\n    }\n  }, [lastPage, activePage, pages])\n\n  useEffect(() => {\n    setShowFirstDots(shownPages[0] !== pages[0])\n    setShowLastDots(\n      shownPages[shownPages.length - 1] !== pages[pages.length - 1],\n    )\n  }, [shownPages, pages])\n\n  const movePage = (page: number) => {\n    if (page > 0 && page <= lastPage) {\n      setActivePage(page)\n      handlePageChange(page)\n    }\n  }\n\n  return (\n    <Container flex direction=\"row\" {...marginProps}>\n      {activePage - 1 > 0 && (\n        <IconBox\n          aria-label=\"previous-page\"\n          onClick={() => movePage(activePage - 1)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(activePage - 1)\n            }\n          }}\n        >\n          <Icon size={18} render=\"arrow\" />\n        </IconBox>\n      )}\n      <PageBox $active={activePage === 1} onClick={() => movePage(1)}>\n        <Text\n          typo={activePage === 1 ? 'headline-small' : 'body-regular'}\n          tag=\"p\"\n        >\n          1\n        </Text>\n      </PageBox>\n      {showFirstDots && (\n        <PageBox>\n          <Text tag=\"p\">...</Text>\n        </PageBox>\n      )}\n      {shownPages.map((i) => {\n        return (\n          <PageBox\n            $active={activePage === i}\n            key={i}\n            onClick={() => movePage(i)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                movePage(i)\n              }\n            }}\n          >\n            <Text\n              typo={activePage === i ? 'headline-small' : 'body-regular'}\n              tag=\"p\"\n            >\n              {i}\n            </Text>\n          </PageBox>\n        )\n      })}\n      {showLastDots && (\n        <PageBox>\n          <Text tag=\"p\">...</Text>\n        </PageBox>\n      )}\n      {Boolean(lastPage) && (\n        <PageBox\n          $active={activePage === lastPage}\n          onClick={() => movePage(lastPage)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(lastPage)\n            }\n          }}\n        >\n          <Text\n            typo={activePage === lastPage ? 'headline-small' : 'body-regular'}\n            tag=\"p\"\n          >\n            {lastPage}\n          </Text>\n        </PageBox>\n      )}\n      {activePage + 1 <= lastPage && (\n        <IconBox\n          aria-label=\"next-page\"\n          onClick={() => movePage(activePage + 1)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              movePage(activePage + 1)\n            }\n          }}\n        >\n          <Icon size={18} render=\"arrow\" rotate={180} />\n        </IconBox>\n      )}\n    </Container>\n  )\n}\n\ninterface IPageBox {\n  $active?: boolean\n}\n\nconst Container = styled(Box)`\n  align-items: center;\n  > button {\n    margin-right: 4px;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`\n\nconst PageBox = styled.button<IPageBox>`\n  background: ${({ $active }) =>\n    $active ? theme.colors.custard : theme.colors.cream};\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  border-radius: 24px;\n  width: fit-content;\n  padding: 0px 4px;\n  height: 24px;\n  min-width: 24px;\n\n  &:hover {\n    background-color: ${theme.colors.mascarpone};\n  }\n  &:active {\n    background-color: ${theme.colors.custard};\n  }\n\n  ${focusOutlineStyle}\n`\n\nconst IconBox = styled.button<IPageBox>`\n  cursor: pointer;\n\n  ${focusOutlineStyle}\n`\n","import { Meta, StoryObj } from '@storybook/react'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '../../Box'\nimport { theme } from '../../theme'\nimport { Pagination } from '../Pagination'\n\nconst BgWrapper = styled(Box)`\n  background: ${theme.colors.coconut};\n`\n\nconst meta: Meta<typeof Pagination> = {\n  title: 'Pagination',\n  component: Pagination,\n  argTypes: { handlePageChange: { action: 'pageChanged' } },\n  decorators: [\n    (Story) => (\n      <BgWrapper height=\"100px\" flex alignItems=\"center\">\n        <Story />\n      </BgWrapper>\n    ),\n  ],\n}\n\nexport default meta\n\ntype Story = StoryObj<typeof Pagination>\n\nexport const Default: Story = {\n  args: {\n    total: 123,\n    partition: 1,\n  },\n}\n\nexport const LongerPagination: Story = {\n  args: {\n    total: 11,\n    partition: 1,\n  },\n}\n"],"names":["cov_9dhxdgs9j","actualCoverage","useEffect","MAX_ADDITIONAL_PAGES","MAX_PAGES","Pagination","partition","handlePageChange","currentPage","marginProps","setLastPage","activePage","setActivePage","s","useState","pages","setPages","shownPages","setShownPages","showFirstDots","setShowFirstDots","showLastDots","setShowLastDots","total","numberOfPages","length","i","slice","allPages","b","activePageIndex","page","lastPage","React","Container","direction","IconBox","onClick","movePage","size","Icon","render","$active","typo","Text","tag","PageBox","key","rotate","styled","theme","focusOutlineStyle","BgWrapper","Box","colors","coconut","meta","title","component","argTypes","action","decorators","Story","Default","args","LongerPagination","parameters","docs","source","originalSource"],"mappings":"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"}