{"version":3,"file":"Box-8725b8d8.js","sources":["../../src/utils/responsiveProp.ts","../../src/utils/space.tsx","../../src/utils/flex.tsx","../../src/utils/measure.tsx","../../src/Box/Box.tsx"],"sourcesContent":["const breakpointToMinPxMapping = {\n  small: 0,\n  medium: 768,\n  large: 1024,\n} satisfies Record<string, number>\n\ntype Breakpoint = keyof typeof breakpointToMinPxMapping\nconst breakpointList = Object.keys(breakpointToMinPxMapping) as Breakpoint[]\n\ntype PropByBreakpoint<PropValue> = { [key in Breakpoint]?: PropValue }\nexport type ResponsiveProp<PropValue> = PropValue | PropByBreakpoint<PropValue>\n\nconst isPropByBreakpoint = <PropValue>(\n  value: ResponsiveProp<PropValue>,\n): value is PropByBreakpoint<PropValue> => {\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    breakpointList.includes(Object.keys(value)[0] as any)\n  )\n}\n\nexport const resolveResponsiveProp = <PropValue>(\n  value: ResponsiveProp<PropValue>,\n  styleTemplate: (value: PropValue) => string,\n) => {\n  if (!isPropByBreakpoint(value)) {\n    return `\n      @media (min-width: ${breakpointToMinPxMapping.small}px) {\n        ${styleTemplate(value)}\n      }\n    `\n  }\n\n  const breakpointUsed = Object.keys(value) as Breakpoint[]\n\n  let style = ''\n  breakpointUsed.forEach((breakpoint) => {\n    style += `\n        @media (min-width: ${breakpointToMinPxMapping[breakpoint]}px) {\n          ${styleTemplate(value[breakpoint]!)}\n        }\n      `\n  })\n\n  return style\n}\n","import { resolveResponsiveProp, ResponsiveProp } from './responsiveProp'\n\ntype Spacing = '8px' | '12px' | '16px' | '24px' | '32px' | '48px' | '64px'\n\nexport type SpacingProp = '0' | Spacing | { custom: number | string }\n\nexport const resolveSpacing = (value: SpacingProp | 'auto') => {\n  if (typeof value === 'string') {\n    return value\n  }\n\n  if (typeof value.custom === 'string') {\n    return value.custom\n  }\n\n  return `${value.custom}px`\n}\n\nexport interface MarginProps {\n  m?: ResponsiveProp<SpacingProp>\n  mx?: ResponsiveProp<SpacingProp | 'auto'>\n  my?: ResponsiveProp<SpacingProp>\n  ml?: ResponsiveProp<SpacingProp>\n  mr?: ResponsiveProp<SpacingProp>\n  mt?: ResponsiveProp<SpacingProp>\n  mb?: ResponsiveProp<SpacingProp>\n}\n\nexport interface PaddingProps {\n  p?: ResponsiveProp<SpacingProp>\n  px?: ResponsiveProp<SpacingProp>\n  py?: ResponsiveProp<SpacingProp>\n  pl?: ResponsiveProp<SpacingProp>\n  pr?: ResponsiveProp<SpacingProp>\n  pt?: ResponsiveProp<SpacingProp>\n  pb?: ResponsiveProp<SpacingProp>\n}\n\nexport const margin = (props: MarginProps): string => {\n  const { m, mx, my, ml, mr, mt, mb } = props\n\n  return `\n    ${\n      m\n        ? resolveResponsiveProp(\n            m,\n            (value) => `margin: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      mx\n        ? resolveResponsiveProp(\n            mx,\n            (value) => `\n        margin-left: ${resolveSpacing(value)};\n        margin-right: ${resolveSpacing(value)};\n      `,\n          )\n        : ''\n    }\n    ${\n      my\n        ? resolveResponsiveProp(\n            my,\n            (value) => `\n        margin-top: ${resolveSpacing(value)};\n        margin-bottom: ${resolveSpacing(value)};\n      `,\n          )\n        : ''\n    }\n    ${\n      ml\n        ? resolveResponsiveProp(\n            ml,\n            (value) => `margin-left: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      mr\n        ? resolveResponsiveProp(\n            mr,\n            (value) => `margin-right: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      mt\n        ? resolveResponsiveProp(\n            mt,\n            (value) => `margin-top: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      mb\n        ? resolveResponsiveProp(\n            mb,\n            (value) => `margin-bottom: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n  `\n}\n\nexport const padding = (props: PaddingProps): string => {\n  const { p, px, py, pl, pr, pt, pb } = props\n\n  return `\n    ${\n      p\n        ? resolveResponsiveProp(\n            p,\n            (value) => `padding: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      px\n        ? resolveResponsiveProp(\n            px,\n            (value) => `\n        padding-left: ${resolveSpacing(value)};\n        padding-right: ${resolveSpacing(value)};\n      `,\n          )\n        : ''\n    }\n    ${\n      py\n        ? resolveResponsiveProp(\n            py,\n            (value) => `\n        padding-top: ${resolveSpacing(value)};\n        padding-bottom: ${resolveSpacing(value)};\n      `,\n          )\n        : ''\n    }\n    ${\n      pl\n        ? resolveResponsiveProp(\n            pl,\n            (value) => `padding-left: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      pr\n        ? resolveResponsiveProp(\n            pr,\n            (value) => `padding-right: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      pt\n        ? resolveResponsiveProp(\n            pt,\n            (value) => `padding-top: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      pb\n        ? resolveResponsiveProp(\n            pb,\n            (value) => `padding-bottom: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n  `\n}\n","import { resolveResponsiveProp, ResponsiveProp } from './responsiveProp'\nimport { resolveSpacing, SpacingProp } from './space'\n\ntype FlexFN = (arg: FlexProps) => string\n\nexport interface FlexProps {\n  direction?: ResponsiveProp<\n    'column' | 'column-reverse' | 'row' | 'row-reverse'\n  >\n  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse'\n  flex?: boolean\n  flow?: string\n  justifyContent?: ResponsiveProp<\n    | 'center'\n    | 'flex-end'\n    | 'flex-start'\n    | 'space-around'\n    | 'space-between'\n    | 'space-evenly'\n  >\n\n  alignItems?: ResponsiveProp<\n    'baseline' | 'center' | 'flex-end' | 'flex-start' | 'stretch'\n  >\n  alignContent?: ResponsiveProp<\n    | 'center'\n    | 'flex-end'\n    | 'flex-start'\n    | 'space-around'\n    | 'space-between'\n    | 'stretch'\n  >\n  gap?: ResponsiveProp<SpacingProp>\n  rowGap?: ResponsiveProp<SpacingProp>\n  columnGap?: ResponsiveProp<SpacingProp>\n}\n\nexport const flex: FlexFN = (props: FlexProps) => {\n  const {\n    flex,\n    direction,\n    wrap,\n    flow,\n    justifyContent,\n    alignItems,\n    alignContent,\n    gap,\n    columnGap,\n    rowGap,\n  } = props\n\n  return `\n    ${flex ? `display: flex;` : ''}\n    ${\n      direction\n        ? resolveResponsiveProp(\n            direction,\n            (value) => `flex-direction: ${value};`,\n          )\n        : ''\n    }\n    ${wrap ? `flex-wrap: ${wrap};` : ''}\n    ${flow ? `flex-flow: ${flow};` : ''}\n    ${\n      justifyContent\n        ? resolveResponsiveProp(\n            justifyContent,\n            (value) => `justify-content: ${value};`,\n          )\n        : ''\n    }\n    ${\n      alignItems\n        ? resolveResponsiveProp(alignItems, (value) => `align-items: ${value};`)\n        : ''\n    }\n    ${\n      alignContent\n        ? resolveResponsiveProp(\n            alignContent,\n            (value) => `align-content: ${value};`,\n          )\n        : ''\n    }\n    ${\n      gap\n        ? resolveResponsiveProp(\n            gap,\n            (value) => `gap: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      columnGap\n        ? resolveResponsiveProp(\n            columnGap,\n            (value) => `column-gap: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n    ${\n      rowGap\n        ? resolveResponsiveProp(\n            rowGap,\n            (value) => `row-gap: ${resolveSpacing(value)};`,\n          )\n        : ''\n    }\n  `\n}\n","type MeasureFN = (arg: MeasureProps) => string\n\nexport interface MeasureProps {\n  width?: string\n  maxWidth?: string\n  minWidth?: string\n  height?: string\n  maxHeight?: string\n  minHeight?: string\n}\n\nexport const measure: MeasureFN = (props: MeasureProps) => {\n  const { width, height, maxWidth, minWidth, minHeight, maxHeight } = props\n\n  return `\n    ${width ? `width: ${width};` : ''}\n    ${maxWidth ? `max-width: ${maxWidth};` : ''}\n    ${minWidth ? `min-width: ${minWidth};` : ''}\n    ${height ? `height: ${height};` : ''}\n    ${minHeight ? `min-height: ${minHeight};` : ''}\n    ${maxHeight ? `max-height: ${maxHeight};` : ''}\n  `\n}\n","import styled from 'styled-components'\n\nimport { flex, FlexProps } from '../utils/flex'\nimport { measure, MeasureProps } from '../utils/measure'\nimport { margin, padding, MarginProps, PaddingProps } from '../utils/space'\n\nexport type BoxProps = MarginProps & PaddingProps & FlexProps & MeasureProps\n\nexport const Box = styled.div<BoxProps>`\n  ${margin};\n  ${padding};\n  ${flex};\n  ${measure};\n`\n"],"names":["breakpointToMinPxMapping","breakpointList","isPropByBreakpoint","value","resolveResponsiveProp","styleTemplate","breakpointUsed","style","breakpoint","resolveSpacing","margin","props","m","mx","my","ml","mr","mt","mb","padding","px","py","pl","pr","pt","pb","flex","flex2","direction","wrap","flow","justifyContent","alignItems","alignContent","gap","columnGap","rowGap","measure","width","height","maxWidth","minWidth","minHeight","maxHeight","Box","styled"],"mappings":"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"}